{"version":3,"file":"main.edf3891672aa78115171.hot-update.js","sources":["webpack:///src/screens/Signup/index.js"],"sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport posed from 'react-pose'\nimport { Link, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { cx } from 'emotion'\n\nimport SignupForm from './SignupForm'\nimport SignupSuccess from './SignupSuccess'\nimport Container from '../../components/Container'\nimport Text from '../../components/Text'\n\nimport { signup as signupAction } from '../../store/actions/auth'\nimport API from '../../api'\n\nimport styles from './styles'\n\nclass Signup extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      isSignupSuccess: false\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  async handleSubmit (values, bag) {\n    try {\n      const data = await API.signup(values)\n      bag.setSubmitting(false)\n      this.setState({ isSignupSuccess: true })\n      this.props.signupAction(data.user)\n    } catch (e) {\n      bag.setSubmitting(false)\n      bag.setErrors(API.setErrors(e.response.data.errors.details.errors))\n    }\n  }\n\n  render () {\n    if (this.props.isAuthenticated && !this.state.isSignupSuccess) {\n      return (<Redirect to='/profile' />)\n    }\n\n    const PoseSignupForm = posed(SignupForm)({\n      visible: { opacity: 1 },\n      invisible: { opacity: 0, display: 'none' }\n    })\n\n    const PoseSignupSuccess = posed(SignupSuccess)({\n      visible: { opacity: 1 },\n      invisible: { opacity: 0, display: 'none' }\n    })\n\n    return (\n      <Container fluid style={styles.mainContainer}>\n        <Container style={styles.heroContainer}>\n          <Container style={styles.heroLogoContainer}>\n            <a href='/'><img alt='bitcharge-logo' className={cx(styles.logoImageStyle)} src='https://res.cloudinary.com/bitcharge/image/upload/v1532990484/icons/bitcharge-logo-white.png' /></a>\n          </Container>\n          <Container style={styles.heroTextContainer}>\n            <img alt='signup-avatar' className={cx(styles.signupAvatarIconStyle)} src='https://res.cloudinary.com/bitcharge/image/upload/v1535940306/dog-avatar.png' />\n            <Text tag='h3' style={styles.heroText}>Let's get you set up.</Text>\n          </Container>\n          <Container style={styles.heroFooterContainer}>\n            <Text tag='h6'>Already have an account. <Link to='/login' className={cx(styles.LoginLink)}>Login</Link></Text>\n          </Container>\n        </Container>\n        <Container style={styles.bodyContainer}>\n          <PoseSignupForm pose={this.state.isSignupSuccess ? 'invisible' : 'visible'} onSubmit={this.handleSubmit} />\n          <PoseSignupSuccess pose={this.state.isSignupSuccess ? 'visible' : 'invisible'} />\n        </Container>\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.isAuthenticated\n  }\n}\n\nSignup.propTypes = {\n  signupAction: PropTypes.func,\n  isAuthenticated: PropTypes.bool\n}\n\nexport default connect(mapStateToProps, { signupAction })(Signup)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AADA;AACA;AAGA;AANA;AAOA;AACA;;;;AACA;;;;;;;;AAEA;AACA;;AADA;AACA;AAAA;AACA;AACA;;;;;;;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAFA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AARA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAbA;AAmBA;;;;AAzDA;AACA;AA2DA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;;;;A","sourceRoot":""}