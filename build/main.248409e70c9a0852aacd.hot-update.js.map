{"version":3,"file":"main.248409e70c9a0852aacd.hot-update.js","sources":["webpack:///src/store/sagas/auth.js"],"sourcesContent":["/* global localStorage */\n\nimport { call, put, select, takeLatest } from 'redux-saga/effects'\n\nimport API from '../../api'\nimport {\n  SIGNUP,\n  SIGNUP_SUCCESS,\n  LOGIN,\n  LOGIN_SUCCESS,\n  LOGOUT,\n  LOGOUT_SUCCESS,\n  FETCH_AUTH_USER,\n  FETCH_AUTH_USER_SUCCESS,\n  FETCH_AUTH_USER_ERROR,\n  CONFIRM_EMAIL\n} from '../constants'\n\nconst getAuthenticatedState = (state) => {\n  return state.auth.isAuthenticated\n}\n\nconst setToken = (token) => {\n  API.setAuthHeader(token)\n  localStorage.setItem('JWT_TOKEN', token)\n}\n\nfunction * signupFlow (action) {\n  const { payload } = action\n\n  setToken(payload.user.token)\n\n  yield put({ type: SIGNUP_SUCCESS, payload })\n}\n\nfunction * loginFlow (action) {\n  const { payload } = action\n\n  setToken(payload.user.token)\n\n  yield put({ type: LOGIN_SUCCESS, payload })\n}\n\nfunction * authProfileFlow (action) {\n  const { payload } = action\n  if (payload && payload.user) {\n    yield put({ type: FETCH_AUTH_USER_SUCCESS, payload })\n  } else {\n    const isAuthenticated = select(getAuthenticatedState)\n\n    if (isAuthenticated) {\n      try {\n        const data = yield call(API.getAuthUser)\n        yield put({ type: FETCH_AUTH_USER_SUCCESS, payload: { user: data } })\n      } catch (e) {\n        yield put({\n          type: FETCH_AUTH_USER_ERROR,\n          payload: {\n            isAuthenticated: false\n          }\n        })\n      }\n    }\n  }\n}\n\nfunction * logoutFlow () {\n  API.removeAuthHeader()\n  localStorage.removeItem('JWT_TOKEN')\n  yield put({ type: LOGOUT_SUCCESS })\n}\n\nfunction * confirmEmailFlow (action) {\n  const { payload } = action\n\n  if (payload.success) {\n    yield put({ type: FETCH_AUTH_USER })\n  }\n}\n\nfunction * authFlow () {\n  yield takeLatest(SIGNUP, signupFlow)\n  yield takeLatest(LOGIN, loginFlow)\n  yield takeLatest(LOGOUT, logoutFlow)\n  yield takeLatest(FETCH_AUTH_USER, authProfileFlow)\n  yield takeLatest(CONFIRM_EMAIL, confirmEmailFlow)\n}\n\nexport default authFlow\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AA2BA;AAQA;AAQA;AAuBA;AAMA;AAQA;AACA;AAjFA;AACA;AACA;AACA;AACA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAJA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAJA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAKA;AACA;AANA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AASA;AATA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AADA;AAFA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAsBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;;;;A","sourceRoot":""}