{"version":3,"file":"main.e7638281173dcc8c7f9e.hot-update.js","sources":["webpack:///src/components/Button/index.js","webpack:///src/components/Button/styles.js","webpack:///src/components/Footer/index.js","webpack:///src/components/Footer/styles.js","webpack:///src/components/Input/index.js","webpack:///src/components/Input/styles.js","webpack:///src/components/Modal/index.js","webpack:///src/components/Modal/styles.js","webpack:///src/components/Navbar/index.js","webpack:///src/components/Navbar/styles.js","webpack:///src/components/Scroll/index.js","webpack:///src/components/Spinner/index.js","webpack:///src/components/Text/index.js","webpack:///src/components/Text/styles.js","webpack:///src/containers/DashboardNavbar/index.js","webpack:///src/containers/DashboardNavbar/styles.js","webpack:///src/routes.js","webpack:///src/screens/AddAddress/AddAddressSuccess/index.js","webpack:///src/screens/AddAddress/AddAddressSuccess/styles.js","webpack:///src/screens/AddAddress/AddressForm/index.js","webpack:///src/screens/AddAddress/AddressForm/styles.js","webpack:///src/screens/AddAddress/index.js","webpack:///src/screens/AddAddress/styles.js","webpack:///src/screens/Addresses/AddressItem/index.js","webpack:///src/screens/Addresses/AddressItem/styles.js","webpack:///src/screens/Addresses/index.js","webpack:///src/screens/Addresses/styles.js","webpack:///src/screens/Dashboard/index.js","webpack:///src/screens/Dashboard/styles.js","webpack:///src/screens/ForgotPassword/EmailForm/index.js","webpack:///src/screens/ForgotPassword/EmailForm/styles.js","webpack:///src/screens/ForgotPassword/index.js","webpack:///src/screens/ForgotPassword/styles.js","webpack:///src/screens/Home/index.js","webpack:///src/screens/Home/styles.js","webpack:///src/screens/Login/LoginForm/index.js","webpack:///src/screens/Login/LoginForm/styles.js","webpack:///src/screens/Login/index.js","webpack:///src/screens/Login/styles.js","webpack:///src/screens/Privacy/index.js","webpack:///src/screens/Privacy/styles.js","webpack:///src/screens/Profile/DropdownItem/index.js","webpack:///src/screens/Profile/DropdownItem/styles.js","webpack:///src/screens/Profile/SingleValue/index.js","webpack:///src/screens/Profile/SingleValue/styles.js","webpack:///src/screens/Profile/index.js","webpack:///src/screens/Profile/styles.js","webpack:///src/screens/Settings/EditSettingsForm/index.js","webpack:///src/screens/Settings/index.js","webpack:///src/screens/Settings/styles.js","webpack:///src/screens/Signup/SignupForm/index.js","webpack:///src/screens/Signup/SignupForm/styles.js","webpack:///src/screens/Signup/SignupSuccess/index.js","webpack:///src/screens/Signup/SignupSuccess/styles.js","webpack:///src/screens/Signup/index.js","webpack:///src/screens/Signup/styles.js","webpack:///src/screens/SignupConfirmation/index.js","webpack:///src/screens/SignupConfirmation/styles.js","webpack:///src/screens/Terms/index.js","webpack:///src/screens/Terms/styles.js","webpack:///src/screens/UserProfile/EditProfileForm/index.js","webpack:///src/screens/UserProfile/EditProfileForm/styles.js","webpack:///src/screens/UserProfile/index.js","webpack:///src/screens/UserProfile/styles.js","webpack:///src/server.js","webpack:///src/store/actions/address.js","webpack:///external \"emotion\"","webpack:///external \"formik\"","webpack:///external \"polished\"","webpack:///external \"qrcode.react\"","webpack:///external \"qs\"","webpack:///external \"react-copy-to-clipboard\"","webpack:///external \"react-media\"","webpack:///external \"react-modal\"","webpack:///external \"react-pose\"","webpack:///external \"react-select\"","webpack:///external \"react-select/lib/Async\"","webpack:///external \"yup\""],"sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport styles from './styles'\n\nclass Button extends Component {\n  constructor (props) {\n    super(props)\n\n    this.onClick = this.onClick.bind(this)\n  }\n\n  onClick (e) {\n    if (this.props.disabled) {\n      e.preventDefault()\n      return\n    }\n    if (this.props.onClick) {\n      this.props.onClick(e)\n    }\n  }\n\n  render () {\n    let {\n      primary,\n      secondary,\n      active,\n      error,\n      link,\n      block,\n      style,\n      outline,\n      disabled,\n      tag: Tag,\n      ...attributes\n    } = this.props\n\n    let buttonStyle = `${styles.button}`\n\n    if (primary) {\n      buttonStyle = `${buttonStyle} ${styles.primary}`\n\n      if (outline) {\n        buttonStyle = `${buttonStyle} ${styles.primaryOutline}`\n      }\n\n      if (active) {\n        buttonStyle = `${buttonStyle} ${styles.primaryActive}`\n      }\n    }\n\n    if (secondary) {\n      buttonStyle = `${buttonStyle} ${styles.secondary}`\n\n      if (outline) {\n        buttonStyle = `${buttonStyle} ${styles.secondaryOutline}`\n      }\n\n      if (active) {\n        buttonStyle = `${buttonStyle} ${styles.secondaryActive}`\n      }\n    }\n\n    if (error) {\n      buttonStyle = `${buttonStyle} ${styles.error}`\n\n      if (outline) {\n        buttonStyle = `${buttonStyle} ${style.errorOutline}`\n      }\n\n      if (active) {\n        buttonStyle = `${buttonStyle} ${styles.errorActive}`\n      }\n    }\n\n    if (disabled) {\n      buttonStyle = `${styles.button} ${styles.disabled}`\n    }\n\n    if (link) {\n      buttonStyle = `${styles.button} ${styles.link}`\n\n      if (disabled) {\n        buttonStyle = `${styles.button} ${styles.disabledLink}`\n      }\n\n      if (error) {\n        buttonStyle = `${buttonStyle} ${styles.errorLink}`\n      }\n    }\n\n    if (attributes.href && Tag === 'button') {\n      Tag = 'a'\n    }\n\n    if (block) {\n      buttonStyle = `${buttonStyle} ${styles.block}`\n    }\n\n    if (style) {\n      buttonStyle = `${buttonStyle} ${style}`\n    }\n\n    return (\n      <Tag\n        type={(Tag === 'button' && attributes.onClick) ? 'button' : undefined}\n        {...attributes}\n        className={buttonStyle}\n        onClick={this.onClick}\n      />\n    )\n  }\n}\n\nButton.propTypes = {\n  active: PropTypes.bool,\n  block: PropTypes.bool,\n  primary: PropTypes.bool,\n  secondary: PropTypes.bool,\n  error: PropTypes.bool,\n  link: PropTypes.bool,\n  disabled: PropTypes.bool,\n  outline: PropTypes.bool,\n  tag: PropTypes.oneOfType([ PropTypes.func, PropTypes.string ]),\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  style: PropTypes.any\n}\n\nButton.defaultProps = {\n  tag: 'button',\n  primary: true,\n  disabled: false\n}\n\nexport default Button\n","import { css } from 'react-emotion'\nimport { colors, typography } from '../../styles'\n\nimport { darken, lighten } from 'polished'\n\nconst disabled = css`\n  background-color: ${colors.disabled};\n  border-color: ${colors.defaultBorder};\n  color: ${colors.white};\n`\n\nconst link = css`\nbackground-color: transparent;\ncolor: ${colors.blackText};\n\n&:hover {\n  color: ${lighten(0.4, colors.blackText)};\n}\n`\n\nconst primaryLink = css`\n  color: ${colors.primary};\n\n  &:hover: {\n    color: ${darken(0.2, colors.primary)};\n  }\n`\n\nconst secondaryLink = css`\n  color: ${colors.secondary};\n\n  &:hover: {\n    color: ${darken(0.2, colors.secondary)};\n  }\n`\n\nconst errorLink = css`\n  color: ${colors.errorText};\n\n  &:hover: {\n    color: ${darken(0.2, colors.errorText)};\n  }\n`\n\nconst disabledLink = css`\n  color: ${colors.disabled};\n  cursor: not-allowed;\n`\n\nconst button = css`\n  display: inline-block;\n  font-weight: 600;\n  font-family: ${typography.primaryFont};\n  text-decoration: none;\n  text-align: center;\n  white-space: nowrap;\n  user-select: none;\n  border: 1px solid transparent;\n  padding: .7rem 2rem;\n  font-size: 1.2rem;\n  line-height: 1.5;\n  border-radius: .25em;\n  cursor: pointer;\n  text-transform: none;\n  transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;\n\n  &:hover {\n    text-decoration: none;\n  }\n\n  &:not(:disabled):not(${disabled}) {\n    cursor: pointer;\n  }\n`\nconst block = css`\n  display: block;\n  width: 100%;\n`\n\nconst primary = css`\n  background-color: ${colors.primary};\n  color: ${colors.white};\n  border-color: ${colors.primary};\n\n  &:hover {\n    background-color: ${darken(0.2, colors.primary)};\n    border-color: ${darken(0.2, colors.primary)};\n  }\n`\n\nconst secondary = css`\n  background-color: ${colors.secondary};\n  color: ${colors.white};\n  border-color: ${colors.secondary};\n\n  &:hover {\n    background-color: ${darken(0.2, colors.secondary)};\n    border-color: ${darken(0.3, colors.secondary)};\n  }\n`\n\nconst error = css`\n  background-color: ${colors.errorText};\n  color: ${colors.white};\n  border-color: ${darken(0.2, colors.errorText)};\n\n  &:hover {\n    background-color: ${darken(0.2, colors.errorText)};\n    border-color: ${darken(0.3, colors.errorText)}\n  }\n`\n\nconst primaryOutline = css`\n    border: 2px solid ${colors.primary};\n    color: ${colors.primary};\n    background-color: transparent;\n\n    &:hover {\n      color: ${colors.white};\n      background-color: ${colors.primary};\n      border-color: ${colors.primary};\n    }\n`\n\nconst secondaryOutline = css`\n  border: 2px solid ${colors.secondary};\n  color: ${colors.secondary};\n  background-color: transparent;\n`\n\nconst errorOutline = css`\n  border-color: 2px solid ${colors.errorText};\n  color: ${colors.secondary};\n  background-color: transparent;\n`\n\nconst primaryActive = css`\n  background-color: ${darken(0.2, colors.primary)};\n  border-color: ${darken(0.3, colors.primary)};\n`\n\nconst secondaryActive = css`\n  background-color: ${darken(0.2, colors.secondary)};\n  border-color: ${darken(0.3, colors.secondary)};\n`\n\nconst errorActive = css`\n  background-color: ${darken(0.2, colors.errorText)};\n  border-color: ${darken(0.3, colors.errorText)};\n`\n\nconst styles = {\n  button,\n  primary,\n  secondary,\n  block,\n  error,\n  disabled,\n  link,\n  primaryLink,\n  secondaryLink,\n  errorLink,\n  disabledLink,\n  primaryOutline,\n  secondaryOutline,\n  errorOutline,\n  primaryActive,\n  secondaryActive,\n  errorActive\n}\n\nexport default styles\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Media from 'react-media'\n\nimport Container from '../Container'\nimport Button from '../Button'\nimport Text from '../Text'\n\nimport styles from './styles'\nimport { breakpoints } from '../../styles'\n\nconst Footer = () => {\n  return (\n    <Container fluid style={styles.mainContainer}>\n      <Container style={styles.logoContainer}>\n        <Text tag='h6' style={styles.logoTextStyle} unstyled>Bitcharge © 2018</Text>\n        <Media query={`(max-width: ${breakpoints.tablet})`}>\n          {matches =>\n            matches ? (\n              <Container style={styles.rightNavContainer}>\n                <Button href='https://twitter.com/bitcharge_co' target='_blank' link style={styles.logoutStyle}><i className={`icon ion-logo-twitter`} /></Button>\n                <Button href='/profile' link style={styles.logoutStyle}><i className={`icon ion-logo-facebook`} /></Button>\n              </Container>\n            ) : (\n              null\n            )\n          }\n        </Media>\n      </Container>\n      <Container style={styles.centerNavContainer}>\n        <Button tag={Link} to='/about' link style={styles.linkStyle}>About</Button>\n        <Button tag={Link} to='/terms' link style={styles.linkStyle}>Terms</Button>\n        <Button tag={Link} to='/privacy' link style={styles.linkStyle}>Privacy</Button>\n      </Container>\n      <Media query={`(max-width: ${breakpoints.tablet})`}>\n        {matches =>\n          !matches ? (\n            <Container style={styles.rightNavContainer}>\n              <Button href='https://twitter.com/bitcharge_co' link style={styles.logoutStyle}><i className={`icon ion-logo-twitter`} /></Button>\n              <Button href='/profile' link style={styles.logoutStyle}><i className={`icon ion-logo-facebook`} /></Button>\n            </Container>\n          ) : (\n            null\n          )\n        }\n      </Media>\n    </Container>\n  )\n}\n\nexport default Footer\n","import { css } from 'react-emotion'\nimport { colors, breakpoints } from '../../styles'\nimport { lighten } from 'polished'\n\nconst mainContainer = css`\n  background-color: ${colors.white};\n  margin: 0 auto;\n  min-height: 4.5em;\n  color: ${colors.blackText};\n  padding: 1em 3em;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    padding-left: 1em;\n    padding-right: 1em;\n    flex-direction: column;\n    padding-top: 1em;\n  }\n`\n\nconst logoContainer = css`\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    width: 100%;\n    border-bottom: 1px solid ${colors.lightGray};\n    padding-bottom: 1em;\n  }\n`\n\nconst centerNavContainer = css`\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  padding: .5em 0;\n\n  @media (max-width: ${breakpoints.mobile}) {\n    width: 100%;\n    flex-wrap: wrap;\n  }\n\n  @media (min-width: ${breakpoints.mobile} and max-width: ${breakpoints.tablet}) {\n    width: 60%;\n  }\n`\n\nconst rightNavContainer = css`\n  flex-direction: row;\n`\n\nconst linkStyle = css`\n  font-weight: 500;\n  font-size: 1em;\n  border-radius: 0;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    padding-left: 1em;\n    padding-right: 1em;\n    font-size: 1em;\n  }\n`\n\nconst logoutStyle = css`\n  font-size: 1.8em;\n  padding-top: 0;\n  padding-bottom: 0;\n  color: ${lighten(0.3, colors.blackText)};\n\n  @media (max-width: ${breakpoints.tablet}) {\n    font-weight: 600;\n    padding-top: 0;\n    padding-bottom: 0;\n    font-size: 1.4em;\n    margin-right: -.7em;\n  }\n`\n\nconst logoTextStyle = css`\n  font-weight: 600;\n`\n\nconst logoImageStyle = css`\n  width: 150px;\n  height: auto;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    width: 120px;\n    height: auto;\n  }\n`\n\nconst styles = {\n  mainContainer,\n  logoContainer,\n  centerNavContainer,\n  logoTextStyle,\n  logoImageStyle,\n  linkStyle,\n  logoutStyle,\n  rightNavContainer\n}\n\nexport default styles\n","import React, { PureComponent } from 'react'\nimport Select from 'react-select'\nimport AsyncSelect from 'react-select/lib/Async'\nimport PropTypes from 'prop-types'\nimport { cx } from 'emotion'\n\nimport Container from '../Container'\nimport Text from '../Text'\nimport styles from './styles'\n\nclass Input extends PureComponent {\n  constructor (props) {\n    super(props)\n\n    this.handleSelectChange = this.handleSelectChange.bind(this)\n    this.handleSelectBlur = this.handleSelectBlur.bind(this)\n  }\n\n  handleSelectChange = function (value) {\n    this.props.onChange(this.props.name, value)\n  }\n\n  handleSelectBlur = function () {\n    this.props.onBlur(this.props.name, true)\n  }\n\n  render () {\n    const { label, name, noErrorText, type, error, placeholder, inputStyle, inputContainerStyle, ...props } = this.props\n    let innerInputStyle = cx(styles.inputBaseStyle)\n    let mainContainerStyle = cx(styles.mainContainer)\n\n    let innerInputContainerStyle = cx(styles.inputContainer)\n\n    if (inputStyle) {\n      innerInputContainerStyle = `${innerInputContainerStyle} ${inputStyle}`\n    }\n\n    if (inputContainerStyle) {\n      mainContainerStyle = cx(mainContainerStyle, inputContainerStyle)\n    }\n\n    let Tag = 'input'\n\n    if (type === 'select') {\n      Tag = Select\n    }\n    if (type === 'async-select') {\n      Tag = AsyncSelect\n    }\n\n    if (type === 'textarea') {\n      Tag = 'textarea'\n      innerInputStyle = cx(innerInputStyle, styles.inputTextAreaStyle)\n    }\n\n    if (error) {\n      innerInputStyle = cx(innerInputStyle, styles.inputErrorStyle)\n    }\n    return (\n      <Container style={mainContainerStyle}>\n        <Container style={innerInputContainerStyle}>\n          {\n            label && <Container style={styles.inputLabelContainer}>\n              <Text style={styles.labelText}>{label}</Text>\n            </Container>\n          }\n          <Container style={styles.inputFieldContainer}>\n            {\n              (type === 'select' || type === 'async-select')\n                ? <Tag name={name} placeholder={placeholder || label || null} {...props} onChange={this.handleSelectChange} onBlur={this.handleSelectBlur} />\n                : <Tag className={innerInputStyle} name={name} placeholder={placeholder || label || null} type={type} {...props} />\n            }\n            {!noErrorText && <Text style={styles.errorText}>{error || <span>&nbsp;</span>}</Text>}\n          </Container>\n        </Container>\n      </Container>\n    )\n  }\n}\n\nInput.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string,\n  error: PropTypes.string,\n  placeholder: PropTypes.string,\n  type: PropTypes.string,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  inputStyle: PropTypes.any,\n  noErrorText: PropTypes.bool,\n  inputContainerStyle: PropTypes.any\n}\n\nexport default Input\n","import { css } from 'react-emotion'\nimport { colors, typography, breakpoints } from '../../styles'\n\nconst mainContainer = css`\n  align-items: flex-start;\n  font-family: ${typography.primaryFont};\n  width: 100%;\n`\n\nconst inputContainer = css`\n  flex-direction: row;\n  margin: .5em;\n  width: 100%;\n  justify-content: flex-start;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    flex-direction: column;\n  }\n`\n\nconst inputTextAreaStyle = css`\n  min-height: 5em;\n`\n\nconst inputLabelContainer = css`\n  flex: 2;\n  margin-right: 1em;\n  align-items: flex-start;\n  justify-content: center;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    flex: none;\n  }\n`\n\nconst inputFieldContainer = css`\n  flex: 5;\n  align-items: flex-start;\n  justify-content: center;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    flex: none;\n  }\n`\n\nconst inputBaseStyle = css`\n  box-sizing: border-box;\n  width: calc(100% - .8em);\n  border: 0.5px solid transparent;\n  border-radius: .25rem;\n  padding: .8em;\n  font-family: ${typography.primaryFont};\n  font-size: 1.2rem;\n  background-color: #F5F8F9;\n\n  &:focus {\n    border: 0.5px solid ${colors.defaultBorder};\n  }\n\n  @media (max-width: ${breakpoints.tablet}) {\n    font-size: 1em;\n  }\n`\n\nconst inputErrorStyle = css`\n  border: 0.5px solid ${colors.errorText};\n  transition: all 0.15s ease-out;\n`\n\nconst labelText = css`\n  font-size: 1rem;\n  font-weight: 400;\n  margin-bottom: 1.6rem;\n`\n\nconst errorText = css`\n  color: ${colors.errorText};\n  font-size: .9rem;\n  margin-top: 0.4em;\n  font-family: inherit;\n  transition: all 0.15s ease-out;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    margin-top: .2em;\n  }\n`\n\nconst styles = {\n  mainContainer,\n  inputContainer,\n  inputLabelContainer,\n  inputFieldContainer,\n  inputBaseStyle,\n  inputTextAreaStyle,\n  inputErrorStyle,\n  labelText,\n  errorText\n}\n\nexport default styles\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ReactModal from 'react-modal'\nimport { cx } from 'emotion'\n\nimport styles from './styles'\n\nconst Modal = ({ isOpen, label, handleClose, style, children }) => {\n  const modalStyle = style ? cx(styles.modalContainer, style) : cx(styles.modalContainer)\n\n  return (\n    <ReactModal\n      isOpen={isOpen}\n      contentLabel={label}\n      onRequestClose={handleClose}\n      className={modalStyle}\n      overlayClassName={cx(styles.overlayContainer)}\n    >\n      {children}\n    </ReactModal>\n  )\n}\n\nModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  label: PropTypes.string,\n  style: PropTypes.any,\n  handleClose: PropTypes.func.isRequired,\n  children: PropTypes.any\n}\n\nexport default Modal\n","import { css } from 'react-emotion'\nimport { colors, breakpoints } from '../../styles'\n\nconst modalContainer = css`\n  display: flex;\n  flex-direction: column;\n  padding: 2em;\n  margin-top: 10%;\n  background-color: ${colors.white};\n  border-radius: 4px;\n  box-shadow: 0px 0px 25px 0px rgba(0, 0, 0, 0.25);\n  transition: all 300ms ease-out;\n\n  @media (max-width: ${breakpoints.mobile}) {\n    margin-top: 0;\n  }\n`\n\nconst overlayContainer = css`\n  position: fixed;\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  padding: 1em;\n  background-color: rgba(0, 0, 0, 0.5);\n\n  @media (max-width: ${breakpoints.mobile}) {\n    align-items: center;\n  }\n\n`\n\nconst styles = {\n  modalContainer,\n  overlayContainer\n}\n\nexport default styles\n","import React from 'react'\nimport { cx } from 'emotion'\nimport { Link } from 'react-router-dom'\n\nimport Container from '../Container'\nimport Button from '../Button'\n\nimport styles from './styles'\n\nconst Navbar = () => {\n  return (\n    <Container fluid style={styles.mainContainer}>\n      <Container>\n        <a href='/'><img alt='bitcharge-logo' className={cx(styles.logoImageStyle)} src='https://res.cloudinary.com/bitcharge/image/upload/v1532990484/icons/bitcharge-logo-secondary.png' /></a>\n      </Container>\n      <Container>\n        <Button tag={Link} link to='/profile' style={styles.profileTextStyle}>My Bitcharge</Button>\n      </Container>\n    </Container>\n  )\n}\n\nexport default Navbar\n","import { css } from 'react-emotion'\nimport { colors, breakpoints } from '../../styles'\n\nconst mainContainer = css`\n  background-color: ${colors.white};\n  height: 4.5em;\n  padding-left: 3em;\n  padding-right: 3em;\n  color: ${colors.blackText};\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n\n  @media (max-width: ${breakpoints.mobile}) {\n    padding-left: 1em;\n    padding-right: 1em;\n  }\n`\n\nconst logoTextStyle = css`\n  font-weight: 600;\n`\n\nconst profileTextStyle = css`\n  font-weight: 400;\n  font-size: 1em;\n  padding-right: 1em;\n\n  @media (max-width: ${breakpoints.mobile}) {\n    padding-right: .1em;\n    font-size: 0.9em;\n  }\n`\n\nconst logoImageStyle = css`\n  width: 150px;\n  height: auto;\n\n  @media (max-width: ${breakpoints.mobile}) {\n    width: 120px;\n    height: auto;\n  }\n`\n\nconst styles = {\n  mainContainer,\n  logoTextStyle,\n  logoImageStyle,\n  profileTextStyle\n}\n\nexport default styles\n","import { Component } from 'react'\n\nclass ScrollToTopOnMount extends Component {\n  componentDidMount () {\n    window.scrollTo(0, 0)\n  }\n\n  render () {\n    return null\n  }\n}\n\nexport { ScrollToTopOnMount }\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { css, cx, keyframes } from 'emotion'\n\nconst Spinner = ({ width, size, color }) => {\n  const rotateDelay = keyframes`\n    0% {\n    transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  `\n\n  const ring = css`\n    display: inline-block;\n    position: relative;\n    width: ${`${size}px`};\n    height: ${`${size}px`};\n  `\n\n  const innerRing1 = css`\n    box-sizing: border-box;\n    display: block;\n    position: absolute;\n    width: ${`${size}px`};\n    height: ${`${size}px`};\n    margin: ${`${width}px`};;\n    border: ${`${width}px`} solid ${color};\n    border-radius: 50%;\n    animation: ${rotateDelay} 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n    border-color: ${color} transparent transparent transparent;\n  `\n\n  const innerRing2 = css`\n    animation-delay: -0.45s;\n  `\n\n  const innerRing3 = css`\n    animation-delay: -0.3s;\n  `\n\n  const innerRing4 = css`\n    animation-delay: -0.15s;\n  `\n\n  return (\n    <div className={cx(ring)}>\n      <div className={cx(innerRing1)} />\n      <div className={cx(innerRing2)} />\n      <div className={cx(innerRing3)} />\n      <div className={cx(innerRing4)} />\n    </div>\n  )\n}\n\nSpinner.propTypes = {\n  width: PropTypes.number,\n  size: PropTypes.number,\n  color: PropTypes.string\n}\n\nSpinner.defaultProps = {\n  width: 6,\n  size: 64,\n  color: '#fff'\n}\n\nexport default Spinner\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport styles from './styles'\n\nconst Text = ({ tag, children, unstyled, style, ...props }) => {\n  let textStyle = `${styles.base}`\n  let Tag = 'p'\n\n  if (tag) {\n    textStyle = `${textStyle} ${styles[tag]}`\n    Tag = tag\n  }\n\n  if (unstyled) {\n    textStyle = `${textStyle} ${styles.unstyledText}`\n  }\n\n  if (style) {\n    textStyle = `${textStyle} ${style}`\n  }\n\n  return (\n    <Tag className={textStyle}>{children}</Tag>\n  )\n}\n\nText.propTypes = {\n  tag: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6']),\n  style: PropTypes.any,\n  children: PropTypes.any.isRequired,\n  unstyled: PropTypes.bool\n}\n\nexport default Text\n","import { css } from 'react-emotion'\nimport { typography } from '../../styles'\n\nconst base = css`\n  margin-bottom: .5rem;\n  font-weight: 400;\n  line-height: 1.2;\n  font-family: inherit;\n  font-size: 1rem;\n`\nconst h1 = css`\n  font-size: ${typography.h1};\n`\n\nconst h2 = css`\n  font-size: ${typography.h2};\n`\n\nconst h3 = css`\n  font-size: ${typography.h3};\n`\n\nconst h4 = css`\n  font-size: ${typography.h4};\n`\n\nconst h5 = css`\n  font-size: ${typography.h5}\n`\n\nconst h6 = css`\n  font-size: ${typography.h6}\n`\n\nconst unstyledText = css`\n  margin-bottom: 0;\n`\n\nconst styles = {\n  base,\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  unstyledText\n}\n\nexport default styles\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { cx } from 'emotion'\nimport { Link, NavLink, withRouter } from 'react-router-dom'\nimport Media from 'react-media'\n\nimport Container from '../../components/Container'\nimport Button from '../../components/Button'\nimport { logout as logoutAction } from '../../store/actions/auth'\n\nimport styles from './styles'\nimport { breakpoints } from '../../styles'\n\nconst Navbar = ({ match, logoutAction }) => {\n  return (\n    <Container fluid style={styles.mainContainer}>\n      <Container style={styles.logoContainer}>\n        <a href='/'><img alt='bitcharge-logo' className={cx(styles.logoImageStyle)} src='https://res.cloudinary.com/bitcharge/image/upload/v1532990484/icons/bitcharge-logo-secondary.png' /></a>\n        <Media query={`(max-width: ${breakpoints.tablet})`}>\n          {matches =>\n            matches ? (\n              <Container style={styles.rightNavContainer}>\n                <Button onClick={logoutAction} link style={styles.logoutStyle}>Logout</Button>\n              </Container>\n            ) : (\n              null\n            )\n          }\n        </Media>\n      </Container>\n      <Container style={styles.centerNavContainer}>\n        <Button\n          tag={Link}\n          to='/profile'\n          link\n          style={cx(styles.linkStyle, match.isExact ? styles.activeLinkStyle : null)}\n        >\n          Profile\n        </Button>\n        <Button tag={NavLink} to='/profile/addresses' link style={styles.linkStyle} activeClassName={cx(styles.activeLinkStyle)}>Addresses</Button>\n        <Button tag={NavLink} to='/profile/settings' link style={styles.linkStyle} activeClassName={cx(styles.activeLinkStyle)}>Settings</Button>\n      </Container>\n      <Media query={`(max-width: ${breakpoints.tablet})`}>\n        {matches =>\n          !matches ? (\n            <Container style={styles.rightNavContainer}>\n              <Button onClick={logoutAction} link style={styles.logoutStyle}>Logout</Button>\n            </Container>\n          ) : (\n            null\n          )\n        }\n      </Media>\n    </Container>\n  )\n}\n\nNavbar.propTypes = {\n  match: PropTypes.object,\n  logoutAction: PropTypes.func\n}\n\nexport default withRouter(connect(null, { logoutAction })(Navbar))\n","import { css } from 'react-emotion'\nimport { colors, breakpoints } from '../../styles'\n\nconst mainContainer = css`\n  background-color: ${colors.white};\n  margin: 0 auto;\n  min-height: 4.5em;\n  color: ${colors.blackText};\n  padding: 0 3em;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid ${colors.lightGray};\n\n  @media (max-width: ${breakpoints.tablet}) {\n    padding-left: 1em;\n    padding-right: 1em;\n    flex-direction: column;\n    padding-top: 1em;\n  }\n`\n\nconst logoContainer = css`\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    width: 100%;\n    border-bottom: 1px solid ${colors.lightGray};\n    padding-bottom: 1em;\n  }\n`\n\nconst centerNavContainer = css`\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  height: 4.5em;\n\n  @media (max-width: ${breakpoints.mobile}) {\n    width: 100%;\n    height: 4.5em;\n  }\n\n  @media (min-width: ${breakpoints.mobile} and max-width: ${breakpoints.tablet}) {\n    width: 60%;\n    height: 4.5em;\n  }\n`\n\nconst linkStyle = css`\n  font-weight: 400;\n  padding-top: 1.05em;\n  padding-bottom: 1.05em;\n  border-radius: 0;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    padding-left: 1em;\n    padding-right: 1em;\n    padding-top: 1.3em;\n    padding-bottom: 1.3em;\n    font-size: 1em;\n  }\n`\n\nconst logoutStyle = css`\n  font-weight: 400;\n  font-size: 1em;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    font-weight: 600;\n    font-size: 1em;\n    padding-right: 0.5em;\n  }\n`\n\nconst activeLinkStyle = css`\n  border-bottom: 4px solid ${colors.blackText};\n`\n\nconst logoTextStyle = css`\n  font-weight: 600;\n`\n\nconst logoImageStyle = css`\n  width: 150px;\n  height: auto;\n\n  @media (max-width: ${breakpoints.mobile}) {\n    width: 120px;\n    height: auto;\n  }\n`\n\nconst styles = {\n  mainContainer,\n  logoContainer,\n  centerNavContainer,\n  logoTextStyle,\n  logoImageStyle,\n  linkStyle,\n  logoutStyle,\n  activeLinkStyle\n}\n\nexport default styles\n","import Home from './screens/Home'\nimport Privacy from './screens/Privacy'\nimport Terms from './screens/Terms'\n\nimport Signup from './screens/Signup'\nimport Login from './screens/Login'\nimport ForgotPassword from './screens/ForgotPassword'\nimport Profile from './screens/Profile'\nimport Dashboard from './screens/Dashboard'\nimport AddAddress from './screens/AddAddress'\nimport SignupConfirmation from './screens/SignupConfirmation'\n\nconst routes = [\n  {\n    path: '/signup',\n    component: Signup,\n    name: 'Signup',\n    exact: true\n  },\n  {\n    path: '/login',\n    component: Login,\n    name: 'Login',\n    exact: true\n  },\n  {\n    path: '/confirm',\n    component: SignupConfirmation,\n    name: 'SignupConfirmation'\n  },\n  {\n    path: '/forgot',\n    component: ForgotPassword,\n    name: 'Forgot',\n    exact: true\n  },\n  {\n    path: '/profile',\n    component: Dashboard,\n    name: 'Dashboard',\n    private: true\n  },\n  {\n    path: '/address/new',\n    component: AddAddress,\n    name: 'New Address',\n    private: true\n  },\n  {\n    path: '/privacy',\n    component: Privacy,\n    name: 'Privacy',\n    exact: true\n  },\n  {\n    path: '/terms',\n    component: Terms,\n    name: 'Terms',\n    exact: true\n  },\n  {\n    path: '/',\n    component: Home,\n    name: 'Home',\n    exact: true\n  },\n  {\n    path: '/:username',\n    component: Profile,\n    name: 'Profile'\n  }\n]\n\nexport default routes\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nimport Container from '../../../components/Container'\nimport Text from '../../../components/Text'\nimport Button from '../../../components/Button'\n\nimport styles from './styles'\n\nconst AddAddressSuccess = ({ hostRef, onAddNewAddress }) => {\n  return (\n    <Container hostRef={hostRef} style={styles.successContainer}>\n      <Text tag='h1' style={styles.successHeaderText}>Address added successfully.</Text>\n      <Text tag='h5'>Your address was added successfully, would you like to add another address. You can access all you addresses in your dashboard too.</Text>\n      <Container style={styles.buttonContainer}>\n        <Button onClick={onAddNewAddress} primary style={styles.submitButton}>Add Address</Button>\n        <Button tag={Link} to='/profile' link style={styles.cancelButton}>Skip</Button>\n      </Container>\n    </Container>\n  )\n}\n\nAddAddressSuccess.propTypes = {\n  hostRef: PropTypes.any,\n  onAddNewAddress: PropTypes.func\n}\n\nexport default AddAddressSuccess\n","import { css } from 'react-emotion'\nimport { colors, breakpoints } from '../../../styles'\nimport { lighten } from 'polished'\n\nconst successContainer = css`\n  padding: 0 4em;\n  width: 100%;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    padding: 1em;\n  }\n`\n\nconst successHeaderText = css`\n  text-align: left;\n  font-weight: 600;\n  margin-bottom: 2em;\n`\n\nconst buttonContainer = css`\n  flex-direction: row;\n  justify-content: flex-start;\n  padding-top: 2em;\n`\n\nconst cancelButton = css`\n  background-color: transparent;\n  color: ${colors.blackText};\n  label: login-cancel-button;\n\n  &:hover {\n    color: ${lighten(0.4, colors.blackText)};\n  }\n`\n\nconst styles = {\n  successContainer,\n  successHeaderText,\n  cancelButton,\n  buttonContainer\n}\n\nexport default styles\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { components } from 'react-select'\nimport { cx } from 'emotion'\nimport { Formik } from 'formik'\nimport { Link } from 'react-router-dom'\nimport * as Yup from 'yup'\n\nimport Container from '../../../components/Container'\nimport Input from '../../../components/Input'\nimport Button from '../../../components/Button'\nimport Spinner from '../../../components/Spinner'\nimport Text from '../../../components/Text'\n\nimport API from '../../../api'\n\nimport styles from './styles'\n\nconst validationSchema = Yup.object().shape({\n  currency: Yup.string()\n    .required('Currency is required'),\n  address: Yup.string()\n    .min(30)\n    .required('Address is required')\n})\n\nconst selectStyles = {\n  control: base => ({ ...base, ...styles.selectStyle }),\n  container: base => ({ ...base, width: '100%' }),\n  indicatorsContainer: base => ({ ...base, transition: 'all 0.3s ease-out' }),\n  option: base => ({ ...styles.dropdownItemStyle })\n}\n\nconst DropdownItem = (props) => {\n  const { isDisabled, data } = props\n  return (\n    !isDisabled ? (\n      <components.Option {...props}>\n        <img alt='dropdown-item' src={data.icon} className={cx(styles.dropdownItemImage)} /><Text tag='h5' unstyled>{data.name}</Text>\n      </components.Option>\n    ) : null\n  )\n}\n\nconst getCurrenciesOption = (inputVaue) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const data = await API.getCurrencies()\n      resolve(data.currencies)\n    } catch (e) {\n      reject(e)\n    }\n  })\n}\n\nconst AddressForm = ({ onSubmit, onCancel, hostRef }) => {\n  return (\n    <Container hostRef={hostRef} style={styles.formContainer}>\n      <Formik\n        initialValues={{ currency: '', address: '' }}\n        onSubmit={onSubmit}\n        validationSchema={validationSchema}\n        render={({\n          values,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n          setFieldValue,\n          setFieldTouched,\n          errors,\n          isValid,\n          isSubmitting\n        }) => {\n          return (\n            <React.Fragment>\n              <Input\n                label='Currency'\n                name='currency'\n                type='async-select'\n                styles={selectStyles}\n                components={{ Option: DropdownItem }}\n                getOptionLabel={({ name }) => name}\n                getOptionValue={({ symbol }) => symbol}\n                cacheOptions\n                defaultOptions\n                onChange={setFieldValue}\n                onBlur={setFieldTouched}\n                error={touched.currency && errors.currency}\n                loadOptions={getCurrenciesOption}\n              />\n              <Input\n                label='Your address'\n                name='address'\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.address}\n                error={touched.address && errors.address}\n              />\n              <Container style={styles.buttonContainer}>\n                <Button\n                  primary\n                  disabled={!isValid || isSubmitting}\n                  type='submit'\n                  style={styles.submitButton}\n                  onClick={handleSubmit}\n                >\n                  Submit {isSubmitting && <span className={cx(styles.spinnerIcon)}><Spinner size={20} width={4} /></span>}\n                </Button>\n                { onCancel\n                  ? <Button onClick={onCancel} link style={styles.cancelButton}>Cancel</Button>\n                  : <Button tag={Link} to='/profile' link style={styles.cancelButton}>Skip</Button>\n                }\n              </Container>\n            </React.Fragment>\n          )\n        }} />\n    </Container>\n  )\n}\n\nDropdownItem.propTypes = {\n  isDisabled: PropTypes.boolean,\n  data: PropTypes.obj\n}\n\nAddressForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onCancel: PropTypes.func,\n  hostRef: PropTypes.any\n}\n\nexport default AddressForm\n","import { css } from 'react-emotion'\nimport { colors, typography } from '../../../styles'\nimport { lighten } from 'polished'\n\nconst formContainer = css`\n  width: 100%;\n  label: login-body-form-cntr;\n`\n\nconst buttonContainer = css`\n  flex-direction: row;\n  justify-content: center;\n  padding-top: 1em;\n  margin-left: 1.6em;\n`\n\nconst submitButtonIcon = css`\n  padding-left: 0.5em;\n  label: login-submit-button-icon;\n`\n\nconst spinnerIcon = css`\n  margin-left: 0.2em;\n`\n\nconst cancelButton = css`\n  background-color: transparent;\n  color: ${colors.blackText};\n  label: login-cancel-button;\n\n  &:hover {\n    color: ${lighten(0.4, colors.blackText)};\n  }\n`\n\nconst selectStyle = {\n  boxSizing: 'border-box',\n  width: 'calc(100% - .8em)',\n  border: '0.5px solid transparent',\n  borderRadius: '.25rem',\n  padding: '.5em',\n  fontFamily: typography.primaryFont,\n  fontSize: '1.2rem',\n  backgroundColor: '#F5F8F9'\n}\n\nconst dropdownItemStyle = {\n  display: 'flex',\n  alignItems: 'center',\n  padding: '0.8em',\n  maxWidth: '100%',\n  transition: 'background 0.3s ease-out',\n  '&:hover': {\n    backgroundColor: colors.primary,\n    color: colors.white\n  },\n  '&:active': {\n    backgroundColor: colors.primary,\n    color: colors.white\n  },\n  '&:last-child': {\n    borderBottom: `1px solid ${colors.background}`\n  }\n}\n\nconst dropdownItemImage = css`\n  margin-right: 1em;\n  width: 2em;\n  height: 2em;\n  border-radius: 50%;\n  border: 1px solid ${colors.white};\n`\n\nconst styles = {\n  formContainer,\n  buttonContainer,\n  submitButtonIcon,\n  spinnerIcon,\n  cancelButton,\n  selectStyle,\n  dropdownItemStyle,\n  dropdownItemImage\n}\n\nexport default styles\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { cx } from 'emotion'\nimport posed from 'react-pose'\n\nimport Container from '../../components/Container'\nimport Text from '../../components/Text'\nimport AddressForm from './AddressForm'\nimport AddAddressSuccess from './AddAddressSuccess'\n\nimport API from '../../api'\nimport { addAddress } from '../../store/actions/address'\n\nimport styles from './styles'\n\nclass AddAddress extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      isAddAddressSuccess: false\n    }\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.onAddNewAddress = this.onAddNewAddress.bind(this)\n  }\n\n  async handleSubmit (values, bag) {\n    const addressDetails = {\n      currency: values.currency.symbol,\n      address: values.address\n    }\n    try {\n      const data = await API.addAddress(addressDetails)\n      bag.setSubmitting(false)\n      this.setState({ isAddAddressSuccess: true })\n      this.props.addAddress(data.address)\n    } catch (e) {\n      console.log(e)\n      bag.setSubmitting(false)\n      bag.setErrors(API.setErrors(e.response.data.errors.details.errors))\n    }\n  }\n\n  onAddNewAddress () {\n    this.setState({ isAddAddressSuccess: false })\n  }\n\n  render () {\n    const PoseAddressForm = posed(AddressForm)({\n      visible: { opacity: 1 },\n      invisible: { opacity: 0, display: 'none' }\n    })\n\n    const PoseAddAddressSuccess = posed(AddAddressSuccess)({\n      visible: { opacity: 1 },\n      invisible: { opacity: 0, display: 'none' }\n    })\n\n    return (\n      <Container fluid style={styles.mainContainer}>\n        <Container style={styles.heroContainer}>\n          <Container style={styles.heroLogoContainer}>\n            <a href='/'><img alt='bitcharge-logo' className={cx(styles.logoImageStyle)} src='https://res.cloudinary.com/bitcharge/image/upload/v1532990484/icons/bitcharge-logo-white.png' /></a>\n          </Container>\n          <Container style={styles.heroTextContainer}>\n            <img alt='add-address-avatar' className={cx(styles.addressAvatarIconStyle)} src='https://res.cloudinary.com/bitcharge/image/upload/v1535940306/hen-avatar.png' />\n            <Text tag='h3' style={styles.heroText}>Add your addresses</Text>\n          </Container>\n        </Container>\n        <Container style={styles.bodyContainer}>\n          <PoseAddressForm pose={this.state.isAddAddressSuccess ? 'invisible' : 'visible'} onSubmit={this.handleSubmit} />\n          <PoseAddAddressSuccess pose={this.state.isAddAddressSuccess ? 'visible' : 'invisible'} onAddNewAddress={this.onAddNewAddress} />\n        </Container>\n      </Container>\n    )\n  }\n}\n\nAddAddress.propTypes = {\n  addAddress: PropTypes.func\n}\n\nexport default connect(null, { addAddress })(AddAddress)\n","import { css } from 'react-emotion'\nimport { colors, breakpoints } from '../../styles'\n\nconst mainContainer = css`\n  background-color: ${colors.white};\n  label: signup-main-cntr;\n  flex-direction: row;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    flex-direction: column;\n  }\n`\n\nconst heroContainer = css`\n  flex: 2;\n  background-color: ${colors.secondary};\n  color: ${colors.white};\n  padding: 0 2em;\n  label: signup-hero-cntr;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid ${colors.lightGray};\n\n  @media (max-width: ${breakpoints.tablet}) {\n    flex: none;\n  }\n`\n\nconst heroTextContainer = css`\n  flex: 1;\n  padding: 1em;\n  label: signup-hero-text-cntr;\n  align-items: center;\n  justify-content: center;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    padding: 1em;\n    height: auto;\n  }\n`\n\nconst heroLogoContainer = css`\n  padding-top: 1em;\n`\n\nconst logoImageStyle = css`\n  width: 150px;\n  height: auto;\n`\n\nconst addressAvatarIconStyle = css`\n  width: 150px;\n  height: 150px;\n  border-radius: 75px;\n  margin-bottom: .5em;\n  border: 2px solid ${colors.white};\n\n  @media (max-width: ${breakpoints.tablet}) {\n    width: 125px;\n    height: 125px;\n  }\n`\n\nconst heroText = css`\n  margin-top: 1em;\n  font-weight: 600;\n`\n\nconst bodyContainer = css`\n  flex: 5;\n  align-items: center;\n  justify-content: center;\n  padding: 6em;\n  height: 100vh;\n  label: signup-body-cntr;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    padding: 1em;\n    height: auto;\n  }\n`\n\nconst styles = {\n  mainContainer,\n  heroContainer,\n  heroLogoContainer,\n  addressAvatarIconStyle,\n  heroTextContainer,\n  heroText,\n  logoImageStyle,\n  bodyContainer\n}\n\nexport default styles\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { cx } from 'emotion'\nimport { Formik } from 'formik'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport * as Yup from 'yup'\n\nimport Container from '../../../components/Container'\nimport Text from '../../../components/Text'\nimport Input from '../../../components/Input'\nimport Button from '../../../components/Button'\nimport Modal from '../../../components/Modal'\n\nimport API from '../../../api'\n\nimport styles from './styles'\n\nconst validationSchema = Yup.object().shape({\n  address: Yup.string()\n    .min(30)\n    .required('Address is required')\n})\n\nconst EditAddressForm = ({ onSubmit, onCancel, address }) => {\n  return (\n    <Formik\n      initialValues={{ address: address }}\n      onSubmit={onSubmit}\n      validationSchema={validationSchema}\n      render={({\n        values,\n        handleChange,\n        handleSubmit,\n        handleBlur,\n        errors,\n        touched,\n        isValid,\n        isSubmitting\n      }) => {\n        return (\n          <Container style={styles.addressInputContainer}>\n            <Input\n              name='address'\n              noErrorText\n              inputStyle={styles.addressInputStyle}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.address}\n              error={touched.address && errors.address}\n            />\n            <Container style={styles.optionsContainer}>\n              <Button\n                primary\n                disabled={!isValid || isSubmitting}\n                onClick={handleSubmit}\n                style={styles.editAddressSaveButton}\n                type='submit'\n              >\n                Save\n              </Button>\n              <Button\n                onClick={onCancel}\n                style={cx(styles.addressActionButton, styles.editAddressCancelButton)}\n                link\n              >\n                Cancel\n              </Button>\n            </Container>\n          </Container>\n        )\n      }} />\n  )\n}\n\nclass AddressItem extends Component {\n  constructor (props) {\n    super(props)\n\n    this.onEditSubmit = this.onEditSubmit.bind(this)\n  }\n  state = {\n    copiedAddress: false,\n    deleteAddressModal: false,\n    isEditing: false\n  }\n\n  onCopyAddress = () => {\n    this.setState({ copied: true })\n    setInterval(() => {\n      this.setState({ copied: false })\n    }, 3000)\n  }\n\n  onEdit = () => {\n    this.setState({ isEditing: true })\n  }\n\n  async onEditSubmit (values, bag) {\n    console.log(values)\n    const addressDetails = { ...this.props.address, address: values.address }\n    console.log(addressDetails)\n    try {\n      const data = await API.updateAddress(addressDetails)\n      bag.setSubmitting(false)\n      this.props.deleteAddress(this.props.address, { local: true })\n      this.props.editAddress(data.address)\n      this.setState({ isEditing: false })\n    } catch (e) {\n      console.log(e)\n      bag.setSubmitting(false)\n      bag.setErrors(API.setErrors(e.response.data.errors.details.errors))\n    }\n  }\n\n  onDeleteAddress = () => {\n    this.setState({ deleteAddressModal: true })\n  }\n\n  handleDeleteAddress = () => {\n    this.props.deleteAddress(this.props.address)\n    this.closeDeleteAddressModal()\n  }\n\n  closeDeleteAddressModal = () => {\n    this.setState({ deleteAddressModal: false })\n  }\n\n  renderDeleteModal = () => {\n    return (\n      <Modal label='Delete Address' style={styles.deleteAddressModalStyle} isOpen={this.state.deleteAddressModal} handleClose={this.closeDeleteAddressModal}>\n        <Text tag='h5' style={styles.deleteAddressHeaderStyle}>Are you sure you want to delete this address?</Text>\n        <Container style={styles.deleteAddressModalbuttonContainer}>\n          <Button error link onClick={this.handleDeleteAddress}>Delete</Button>\n          <Button link onClick={this.closeDeleteAddressModal}>Cancel</Button>\n        </Container>\n      </Modal>\n    )\n  }\n\n  onCancelEdit = () => {\n    this.setState({ isEditing: false })\n  }\n\n  renderAddressText = () => {\n    const { address } = this.props\n    return (\n      <Container style={styles.addressTextContainer}>\n        <Text tag='h6' style={styles.addressTextStyle} unstyled>{address.address}</Text>\n        <Container style={styles.optionsContainer}>\n          <CopyToClipboard text={address.address} onCopy={this.onCopyAddress}>\n            {this.state.copied\n              ? <Text tag='h6' style={styles.copiedTextStyle}>Copied!</Text>\n              : <Button onClick={this.addNewAddress} style={styles.addressActionButton} link>Copy</Button>\n            }\n          </CopyToClipboard>\n          <Button onClick={this.onEdit} style={styles.addressActionButton} link>Edit</Button>\n          <Button onClick={this.onDeleteAddress} style={styles.addressActionButton} link>Delete</Button>\n        </Container>\n      </Container>\n    )\n  }\n\n  render () {\n    const { address } = this.props\n    return (\n      <Container style={styles.addressItemContainer}>\n        {this.renderDeleteModal()}\n        <Container style={styles.addressIconContainer}>\n          <img alt='adress-icon' src={address.currency.icon} className={cx(styles.addressIconImage)} />\n          <Text tag='h5' style={styles.addressIconText}>{address.currency.name}</Text>\n        </Container>\n        {this.state.isEditing ? <EditAddressForm onSubmit={this.onEditSubmit} onCancel={this.onCancelEdit} address={this.props.address.address} /> : this.renderAddressText()}\n      </Container>\n    )\n  }\n}\n\nEditAddressForm.propTypes = {\n  onSubmit: PropTypes.func,\n  onCancel: PropTypes.func,\n  address: PropTypes.string\n}\n\nAddressItem.propTypes = {\n  address: PropTypes.object,\n  editAddress: PropTypes.func,\n  deleteAddress: PropTypes.func\n}\n\nexport default AddressItem\n","import { css } from 'react-emotion'\nimport { colors, breakpoints } from '../../../styles'\n\nconst addressItemContainer = css`\n  padding: 1.6em 0 1em 0;\n  border-bottom: .5px dotted ${colors.defaultBorder};\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: space-between;\n\n  &:last-child {\n    border-bottom: 0;\n  }\n\n  @media (max-width: ${breakpoints.mobile}) {\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 1em 0;\n  }\n`\n\nconst addressIconContainer = css`\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n\n  @media (max-width: ${breakpoints.mobile}) {\n    margin-bottom: 1.5em;\n  }\n`\n\nconst addressIconImage = css`\n  width: 40px;\n  height: 40px;\n  margin-right: 1em;\n  border-radius: 50%;\n  border: 2px solid ${colors.white};\n\n  @media (max-width: ${breakpoints.mobile}) {\n    width: 35px;\n    height: 35px;\n  }\n`\n\nconst addressIconText = css`\n  font-weight: 500;\n  margin-bottom: 0px;\n\n  @media (max-width: ${breakpoints.mobile}) {\n    font-size: 1.1em;\n  }\n\n`\n\nconst addressTextContainer = css`\n  align-items: flex-end;\n  justify-content: space-between;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    align-items: center;\n  }\n`\n\nconst addressInputContainer = css`\n  align-items: flex-end;\n  width: 70%;\n  justify-content: space-between;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    width: 100%;\n  }\n`\n\nconst addressInputStyle = css`\n  align-self: flex-end;\n  margin: 0;\n  margin-right: -0.6em;\n  font-size: 1em;\n`\nconst optionsContainer = css`\n  flex-direction: row;\n  margin-top: 0.6em;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    width: 100%;\n    justify-content: center;\n  }\n`\n\nconst addressActionButton = css`\n  padding-left: .5em;\n  padding-right: .5em;\n  font-size: 1rem;\n  color: ${colors.secondary};\n\n  &:last-child {\n    padding-right: 0em;\n  }\n`\n\nconst editAddressCancelButton = css`\n  color: ${colors.blackText};\n`\n\nconst editAddressSaveButton = css`\n  font-size: 1rem;\n  margin-right: 1em;\n`\n\nconst copiedTextStyle = css`\n  color: ${colors.primary};\n  font-weight: 600;\n  padding-top: .9em;\n  padding-right: .2em;\n  font-size: 1rem;\n  transition: all 0.15s ease-out;\n`\n\nconst deleteAddressModalStyle = css`\n  padding: 3em 3em 2em 3em;\n`\n\nconst addressTextStyle = css`\n  @media (max-width: ${breakpoints.mobile}) {\n    font-size: 0.8em;\n  }\n`\n\nconst deleteAddressModalbuttonContainer = css`\n  flex-direction: row;\n  justify-content: flex-end;\n  padding-top: 1.8em;\n  margin-right: -1.2em;\n`\n\nconst styles = {\n  addressItemContainer,\n  addressIconContainer,\n  addressIconImage,\n  addressIconText,\n  addressTextStyle,\n  addressTextContainer,\n  addressInputContainer,\n  addressInputStyle,\n  optionsContainer,\n  addressActionButton,\n  editAddressSaveButton,\n  editAddressCancelButton,\n  copiedTextStyle,\n  deleteAddressModalStyle,\n  deleteAddressModalbuttonContainer\n}\n\nexport default styles\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport AddressItem from './AddressItem'\nimport Container from '../../components/Container'\nimport Text from '../../components/Text'\nimport Spinner from '../../components/Spinner'\nimport Button from '../../components/Button'\nimport Modal from '../../components/Modal'\nimport AddAddressForm from '../AddAddress/AddressForm'\n\nimport API from '../../api'\nimport { addAddress, updateAddress, deleteAddress } from '../../store/actions/address'\n\nimport { colors } from '../../styles'\nimport styles from './styles'\n\nclass Addresses extends Component {\n  constructor (props) {\n    super(props)\n\n    this.handleAddAddressSubmit = this.handleAddAddressSubmit.bind(this)\n  }\n  state = {\n    addNewAddressModal: false,\n    isAddAddressSuccess: false\n  }\n\n  openAddNewAddressModal = () => {\n    this.setState({ addNewAddressModal: true })\n  }\n\n  closeAddNewAddressModal = () => {\n    this.setState({ addNewAddressModal: false })\n  }\n\n  async handleAddAddressSubmit (values, bag) {\n    const addressDetails = {\n      currency: values.currency.symbol,\n      address: values.address\n    }\n    try {\n      const data = await API.addAddress(addressDetails)\n      bag.setSubmitting(false)\n      this.setState({ isAddAddressSuccess: true })\n      this.props.addAddress(data.address)\n      this.closeAddNewAddressModal()\n    } catch (e) {\n      console.log(e)\n      bag.setSubmitting(false)\n      bag.setErrors(API.setErrors(e.response.data.errors.details.errors))\n    }\n  }\n\n  _renderUserAddresses = (addresses) => {\n    const addressList = Object.keys(addresses).map(address => addresses[address]).sort((a, b) => {\n      const textA = a.currency.name.toUpperCase()\n      const textB = b.currency.name.toUpperCase()\n\n      return textA.localeCompare(textB)\n    })\n    return (\n      <Container style={styles.addressesContainer}>\n        <Container style={styles.addressesHeaderContainer}>\n          <Text tag='h5' style={styles.addressesHeaderTextStyle}>My Addresses</Text>\n          <Button onClick={this.openAddNewAddressModal} style={styles.addNewAddressButton} primary>Add new</Button>\n          {this._renderAddAddressModal()}\n        </Container>\n        <Container style={styles.addressesListContainer}>\n          {addressList.length && addressList.map(address => (\n            <AddressItem\n              key={address.address}\n              address={address}\n              deleteAddress={this.props.deleteAddress}\n              editAddress={this.props.updateAddress}\n            />\n          ))}\n        </Container>\n      </Container>\n    )\n  }\n\n  _renderLoading = () => {\n    return (\n      <Container style={styles.loadingContainer}>\n        <Spinner size={50} width={7} color={colors.lightText} />\n      </Container>\n    )\n  }\n\n  _renderError = () => {\n    return (\n      <Container style={styles.loadingContainer}>\n        <Text tag='h3'>Something went wrong. Try reloading the page</Text>\n      </Container>\n    )\n  }\n\n  _renderAddAddressModal = () => {\n    return (\n      <Modal label='Add New Address' style={styles.addAddressModalStyle} isOpen={this.state.addNewAddressModal} handleClose={this.closeAddNewAddressModal}>\n        <Text tag='h3' style={styles.addAddressModalHeaderStyle}>Add a new address</Text>\n        <AddAddressForm onSubmit={this.handleAddAddressSubmit} onCancel={this.closeAddNewAddressModal} />\n      </Modal>\n    )\n  }\n\n  _renderEmpty = () => {\n    return (\n      <Container style={styles.loadingContainer}>\n        <Text tag='h3'>You haven't added any addresses.</Text>\n        <Button primary style={styles.addNewEmptyButton} onClick={this.openAddNewAddressModal}>Add New Address</Button>\n        {this._renderAddAddressModal()}\n      </Container>\n    )\n  }\n\n  _renderCurrentState = () => {\n    const { isLoading, error, addresses } = this.props\n    console.log(isLoading, error, addresses)\n    if (isLoading) {\n      return this._renderLoading()\n    }\n    if (error) {\n      return this._renderError()\n    }\n\n    if (!Object.keys(addresses) || Object.keys(addresses).length === 0) {\n      return this._renderEmpty()\n    }\n\n    return this._renderUserAddresses(this.props.addresses)\n  }\n\n  render () {\n    return (\n      <Container fluid style={styles.mainContainer}>\n        <Container style={styles.cardContainer}>\n          {this._renderCurrentState()}\n        </Container>\n      </Container>\n    )\n  }\n}\n\nAddresses.propTypes = {\n  addresses: PropTypes.object,\n  deleteAddress: PropTypes.func,\n  addAddress: PropTypes.func,\n  updateAddress: PropTypes.func,\n  isLoading: PropTypes.bool,\n  error: PropTypes.bool\n}\n\nconst mapStateToProps = (state) => ({\n  addresses: state.addresses.addressList,\n  isLoading: state.addresses.isLoading,\n  error: state.addresses.isError\n})\n\nexport default connect(mapStateToProps, { addAddress, updateAddress, deleteAddress })(Addresses)\n","import { css } from 'react-emotion'\nimport { colors, breakpoints } from '../../styles'\n\nconst mainContainer = css`\n  width: 100%;\n  min-height: calc(100vh - 4.5em);\n  align-items: center;\n  border-bottom: 1px solid ${colors.lightGray};\n`\n\nconst cardContainer = css`\n  width: 50em;\n  margin-top: 3em;\n  margin-bottom: 3em;\n  background-color: ${colors.white};\n  border-radius: 4px;\n  padding: 2em 3em;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    width: 100%;\n    margin: 0;\n    border-radius: 0;\n    padding: 1.5em;\n  }\n`\n\nconst loadingContainer = css`\n  align-items: center;\n  justify-content: center;\n  padding: 5em;\n`\n\nconst addressesHeaderContainer = css`\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding-bottom: 1em;\n  border-bottom: .5px dashed ${colors.defaultBorder};\n`\n\nconst addressesHeaderTextStyle = css`\n  font-weight: 600;\n  margin-bottom: -0.4em;\n`\n\nconst addNewAddressButton = css`\n  font-weight: 600;\n  font-size: 1em;\n\n  @media (max-width: ${breakpoints.mobile}) {\n    padding-left: .8em;\n    padding-right: .8em;\n  }\n`\n\nconst addNewAddressButtonIcon = css`\n  padding-right: 0.4em;\n  font-size: 1.1em;\n  font-weight: 600;\n`\n\nconst addressesListContainer = css`\n  margin-top: 1em;\n`\n\nconst addAddressModalStyle = css`\n  width: 45%;\n\n  @media (max-width: ${breakpoints.mobile}) {\n    width: 100%;\n  }\n`\n\nconst addAddressModalHeaderStyle = css`\n  text-align: center;\n  font-weight: 600;\n  margin-top: 1em;\n  margin-bottom: 2em;\n`\n\nconst addNewEmptyButton = css`\n  margin-top: 2em;\n`\n\nconst addIcon = css`\n  margin-left: 0.3em;\n`\n\nconst styles = {\n  mainContainer,\n  cardContainer,\n  loadingContainer,\n  addressesHeaderTextStyle,\n  addressesHeaderContainer,\n  addNewAddressButton,\n  addNewAddressButtonIcon,\n  addressesListContainer,\n  addNewEmptyButton,\n  addAddressModalStyle,\n  addAddressModalHeaderStyle,\n  addIcon\n}\n\nexport default styles\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport UserProfile from '../UserProfile'\nimport Addresses from '../Addresses'\nimport Settings from '../Settings'\n\nimport DashboardNavbar from '../../containers/DashboardNavbar'\nimport Container from '../../components/Container'\nimport Footer from '../../components/Footer'\n\nimport { fetchAddresses } from '../../store/actions/address'\n\nimport styles from './styles'\n\nclass Dashboard extends Component {\n  componentDidMount () {\n    this.props.fetchAddresses()\n  }\n\n  render () {\n    return (\n      <Container fluid fullHeight style={styles.mainContainer}>\n        <DashboardNavbar />\n        <Route path='/profile/addresses' component={Addresses} />\n        <Route path='/profile/settings' component={Settings} />\n        <Route exact path='/profile' component={UserProfile} />\n        <Footer />\n      </Container>\n    )\n  }\n}\n\nDashboard.propTypes = {\n  fetchAddresses: PropTypes.func\n}\n\nexport default connect(null, { fetchAddresses })(Dashboard)\n","import { css } from 'react-emotion'\nimport { colors } from '../../styles'\n\nconst mainContainer = css`\n  background-color: ${colors.background};\n`\n\nconst styles = {\n  mainContainer\n}\n\nexport default styles\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { cx } from 'emotion'\nimport { Formik } from 'formik'\nimport { Link } from 'react-router-dom'\nimport * as Yup from 'yup'\n\nimport Container from '../../../components/Container'\nimport Input from '../../../components/Input'\nimport Button from '../../../components/Button'\nimport Spinner from '../../../components/Spinner'\n\nimport styles from './styles'\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Not a valid email')\n    .required('Email is required')\n})\n\nconst EmailForm = ({ handleSubmit }) => {\n  return (\n    <Container style={styles.formContainer}>\n      <Formik\n        initialValues={{ email: '' }}\n        onSubmit={this.handleSubmit}\n        validationSchema={validationSchema}\n        render={({\n          values,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n          errors,\n          isValid,\n          isSubmitting\n        }) => {\n          return (\n            <React.Fragment>\n              <Input\n                name='email'\n                type='email'\n                placeholder='awesome@doggo.co'\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.email}\n                error={touched.email && errors.email}\n              />\n              <Container style={styles.buttonContainer}>\n                <Button\n                  primary\n                  disabled={!isValid || isSubmitting}\n                  type='submit'\n                  style={styles.submitButton}\n                  onClick={handleSubmit}\n                >\n                  Submit {isSubmitting && <span className={cx(styles.spinnerIcon)}><Spinner size={20} width={4} /></span>}\n                </Button>\n                <Button tag={Link} to='/login' link style={styles.cancelButton}>Cancel</Button>\n              </Container>\n            </React.Fragment>\n          )\n        }} />\n    </Container>\n  )\n}\n\nEmailForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired\n}\n\nexport default EmailForm\n","import { css } from 'react-emotion'\nimport { colors, breakpoints } from '../../../styles'\nimport { lighten } from 'polished'\n\nconst formContainer = css`\n  padding: 0 4em;\n  width: 80%;\n  label: forgot-password-body-form-cntr;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    padding: 0;\n    width: 100%;\n  }\n`\n\nconst buttonContainer = css`\n  flex-direction: row;\n  justify-content: center;\n  padding-top: 1em;\n  label: forgot-password-body-form-cntr-btn-cntr;\n`\n\nconst submitButtonIcon = css`\n  padding-left: 0.5em;\n  label: forgot-password-body-form-cntr-btn;\n`\n\nconst submitButton = css`\n  font-size: 1.3em;\n  margin-right: 1em;\n  label: signup-submit-button;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    font-size: 1em;\n  }\n`\n\nconst spinnerIcon = css`\n  margin-left: 0.2em;\n`\n\nconst cancelButton = css`\n  background-color: transparent;\n  color: ${colors.blackText};\n  label: signup-cancel-button;\n\n  &:hover {\n    color: ${lighten(0.4, colors.blackText)};\n  }\n\n  @media (max-width: ${breakpoints.tablet}) {\n    font-size: 1em;\n  }\n`\n\nconst styles = {\n  formContainer,\n  buttonContainer,\n  submitButton,\n  submitButtonIcon,\n  cancelButton,\n  spinnerIcon\n}\n\nexport default styles\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { cx } from 'emotion'\n\nimport EmailForm from './EmailForm'\nimport Container from '../../components/Container'\nimport Text from '../../components/Text'\n\nimport styles from './styles'\n\nclass ForgotPassword extends Component {\n  constructor (props) {\n    super(props)\n\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  async handleSubmit (values, bag) {\n    try {\n      bag.setSubmitting(false)\n      this.props.history.push('/profile')\n    } catch (e) {\n      console.log(e)\n      bag.setSubmitting(false)\n    }\n  }\n\n  render () {\n    if (this.props.isAuthenticated) {\n      return (<Redirect to='/profile' />)\n    }\n\n    return (\n      <Container fluid style={styles.mainContainer}>\n        <Container style={styles.heroContainer}>\n          <Container style={styles.heroLogoContainer}>\n            <a href='/'><img alt='bitcharge-logo' className={cx(styles.logoImageStyle)} src='https://res.cloudinary.com/bitcharge/image/upload/v1532990484/icons/bitcharge-logo-white.png' /></a>\n          </Container>\n          <Container style={styles.heroTextContainer}>\n            <img alt='forgot-password-avatar' className={cx(styles.signupAvatarIconStyle)} src='https://res.cloudinary.com/bitcharge/image/upload/v1535940360/cat-avatar.png' />\n            <Text tag='h3' style={styles.heroText}>Forgot Password</Text>\n          </Container>\n        </Container>\n        <Container style={styles.bodyContainer}>\n          <Text tag='h1' style={styles.formHeaderText}>We have your back.</Text>\n          <EmailForm onSubmit={this.handleSubmit} />\n        </Container>\n      </Container>\n    )\n  }\n}\n\nForgotPassword.propTypes = {\n  history: PropTypes.any,\n  isAuthenticated: PropTypes.bool\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.isAuthenticated\n  }\n}\n\nexport default connect(mapStateToProps)(ForgotPassword)\n","import { css } from 'react-emotion'\nimport { colors, breakpoints } from '../../styles'\n\nconst mainContainer = css`\n  background-color: ${colors.white};\n  label: signup-main-cntr;\n  flex-direction: row;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    flex-direction: column;\n  }\n`\n\nconst heroContainer = css`\n  flex: 2;\n  background-color: ${colors.secondary};\n  color: ${colors.white};\n  padding: 0 2em;\n  label: signup-hero-cntr;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid ${colors.lightGray};\n\n  @media (max-width: ${breakpoints.tablet}) {\n    flex: none;\n  }\n`\n\nconst bodyContainer = css`\n  flex: 5;\n  align-items: center;\n  justify-content: center;\n  padding: 3em 2em;\n  height: 100vh;\n  label: signup-body-cntr;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    padding: 2em 1em;\n    height: auto;\n  }\n`\n\nconst formContainer = css`\n  padding: 0 4em;\n  width: 80%;\n  label: signup-body-form-cntr;\n`\n\nconst formHeaderText = css`\n  text-align: left;\n  font-weight: 600;\n  margin-bottom: 2em;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    margin-bottom: 1em;\n    font-size: 1.8em;\n  }\n\n`\n\nconst heroLogoContainer = css`\n  padding-top: 1em;\n`\n\nconst logoImageStyle = css`\n  width: 150px;\n  height: auto;\n`\n\nconst signupAvatarIconStyle = css`\n  width: 150px;\n  height: 150px;\n  border-radius: 75px;\n  margin-bottom: .5em;\n  border: 2px solid ${colors.white};\n\n  @media (max-width: ${breakpoints.tablet}) {\n    width: 125px;\n    height: 125px;\n  }\n`\n\nconst heroText = css`\n  margin-top: 1em;\n  font-weight: 600;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    margin-top: .5em;\n    font-size: 1.5em;\n  }\n`\n\nconst heroTextContainer = css`\n  flex: 1;\n  padding: 1em;\n  label: signup-hero-text-cntr;\n  align-items: center;\n  justify-content: center;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    padding: 1em;\n    height: auto;\n  }\n`\n\nconst heroFooterContainer = css`\n  margin-bottom: 1em;\n`\n\nconst heroImageContainer = css`\n  flex: 1;\n  padding: 4em 4em 4em 2em;\n  align-items: center;\n  justify-content: center;\n  label: signup-hero-image-cntr;\n`\n\nconst heroHeaderText = css`\n  font-weight: 500;\n  margin-bottom: 1em;\n  label: home-hero-header-text;\n`\n\nconst heroSubHeaderText = css`\n  line-height: 1.5em;\n  font-weight: 400;\n  margin-bottom: 1.5em;\n  label: home-hero-header-subtext;\n`\n\nconst heroImage = css`\n  max-width: 100%;\n  height: auto;\n  label: home-hero-image;\n`\n\nconst SignupLink = css`\n  font-weight: 600;\n  display: inline-block;\n  text-decoration: none;\n  color: ${colors.white};\n  padding: .3em;\n  border-radius: .1em;\n  label: login-signup-link;\n  transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;\n\n  &:hover {\n    background-color: ${colors.white};\n    color: ${colors.secondary};\n  }\n`\n\nconst styles = {\n  mainContainer,\n  bodyContainer,\n  formContainer,\n  heroContainer,\n  heroLogoContainer,\n  logoImageStyle,\n  heroTextContainer,\n  heroText,\n  heroFooterContainer,\n  signupAvatarIconStyle,\n  heroImageContainer,\n  heroHeaderText,\n  heroSubHeaderText,\n  heroImage,\n  SignupLink,\n  formHeaderText\n}\n\nexport default styles\n","import React, { Component } from 'react'\nimport { cx } from 'emotion'\nimport { Link } from 'react-router-dom'\n\nimport Container from '../../components/Container'\nimport Text from '../../components/Text'\nimport Button from '../../components/Button'\nimport Navbar from '../../components/Navbar'\nimport Footer from '../../components/Footer'\n\nimport styles from './styles'\n\nclass Home extends Component {\n  render () {\n    return (\n      <Container fluid fullHeight>\n        <Navbar />\n        <Container fluid style={styles.bodyContainer}>\n          <Container fluid style={styles.heroContainer}>\n            <Container style={styles.heroTextContainer}>\n              <Text tag='h1' style={styles.heroHeaderText}>\n                The easiest way to accept crypto payments.\n              </Text>\n              <Text tag='h5' style={styles.heroSubHeaderText}>\n                Pick a username, create a link and get paid in your favorite cryptocurrency. It can't get any easier than that.\n              </Text>\n              <Button tag={Link} to='/signup' primary style={styles.getStartedButton}>Get Started <i className={`icon ion-md-arrow-round-forward ${styles.getStartedButtonIcon}`} /></Button>\n            </Container>\n            <Container style={styles.heroImageContainer}>\n              <img className={cx(styles.heroImage)} src='https://res.cloudinary.com/bitcharge/image/upload/v1536025920/assets/hero_image_2.png' />\n            </Container>\n          </Container>\n          <Container style={styles.currenciesContainer}>\n            <Container style={styles.currencyItemContainer}>\n              <Text tag='h5' style={styles.currenciesSupportText}>Currently supports</Text>\n            </Container>\n            <Container style={styles.currencyItemContainer}>\n              <img alt='adress-icon' src='https://res.cloudinary.com/bitcharge/image/upload/v1532990277/icons/bitcoin.png' className={cx(styles.addressIconImage)} />\n              <Text tag='h6' style={styles.addressIconText}>Bitcoin</Text>\n            </Container>\n            <Container style={styles.currencyItemContainer}>\n              <img alt='adress-icon' src='https://res.cloudinary.com/bitcharge/image/upload/v1532990278/icons/ethereum.png' className={cx(styles.addressIconImage)} />\n              <Text tag='h6' style={styles.addressIconText}>Ethereum</Text>\n            </Container>\n            <Container style={styles.currencyItemContainer}>\n              <img alt='adress-icon' src='https://res.cloudinary.com/bitcharge/image/upload/v1532990277/icons/litecoin.png' className={cx(styles.addressIconImage)} />\n              <Text tag='h6' style={styles.addressIconText}>Litecoin</Text>\n            </Container>\n          </Container>\n          <Container fluid style={styles.workContainer}>\n            <Container style={styles.workHeaderContainer}>\n              <Text tag='h1' style={styles.heroHeaderText}>\n                How Bitcharge Works\n              </Text>\n            </Container>\n            <Container style={styles.workDetailsContainer}>\n              <Container style={styles.workDetailsItemContainer}>\n                <Container style={styles.workItemImageContainer}>\n                  <img className={cx(styles.workItemImage)} src='https://res.cloudinary.com/bitcharge/image/upload/v1536025918/assets/choose_username.png' />\n                </Container>\n                <Container style={styles.workItemTextContainer}>\n                  <Text tag='h3' style={styles.workItemHeaderText}>\n                    Pick a username\n                  </Text>\n                  <Container style={styles.workItemTextBorder} />\n                  <Text tag='h5' style={styles.workItemSubHeaderText}>\n                    Get started by picking up a username. Your username will be used to create your public profile. When you share your Bitcharge link, it uses your username as the unique identifier.\n                  </Text>\n                </Container>\n              </Container>\n              <Container style={styles.workDetailsItemContainer}>\n                <Container style={styles.workItemImageContainer}>\n                  <img className={cx(styles.workItemImage)} src='https://res.cloudinary.com/bitcharge/image/upload/v1536025920/assets/setup_profile.png' />\n                </Container>\n                <Container style={styles.workItemTextContainer}>\n                  <Text tag='h3' style={styles.workItemHeaderText}>\n                    Build your profile\n                  </Text>\n                  <Container style={styles.workItemTextBorder} />\n                  <Text tag='h5' style={styles.workItemSubHeaderText}>\n                    Bitcharge doesn't create new wallets, instead it just works with your existing crypto wallets. All you need to do add the address of your wallet where you want to recieve payments.\n                  </Text>\n                </Container>\n              </Container>\n              <Container style={styles.workDetailsItemContainer}>\n                <Container style={styles.workItemImageContainer}>\n                  <img className={cx(styles.workItemImage)} src='https://res.cloudinary.com/bitcharge/image/upload/v1536025920/assets/share_image.png' />\n                </Container>\n                <Container style={styles.workItemTextContainer}>\n                  <Text tag='h3' style={styles.workItemHeaderText}>\n                    Share your link\n                  </Text>\n                  <Container style={styles.workItemTextBorder} />\n                  <Text tag='h5' style={styles.workItemSubHeaderText}>\n                    Start using your Bitcharge.co link by sharing it instantly with anyone: friends, customers, or partners. And now you can start accepting crypto from anyone in an instant.\n                  </Text>\n                </Container>\n              </Container>\n            </Container>\n          </Container>\n          <Container style={styles.callActionContainer}>\n            <Container style={styles.workHeaderContainer}>\n              <Text tag='h2' style={styles.heroHeaderText}>\n                Set up your unique Bitcharge.co link today.\n              </Text>\n            </Container>\n            <Container style={styles.callActionButtonContainer}>\n              <Button tag={Link} to='/signup' primary style={styles.getStartedButton}>Get Started <i className={`icon ion-md-arrow-round-forward ${styles.getStartedButtonIcon}`} /></Button>\n            </Container>\n          </Container>\n        </Container>\n        <Footer />\n      </Container>\n    )\n  }\n}\n\nexport default Home\n","import { css } from 'react-emotion'\nimport { colors, breakpoints } from '../../styles'\nimport { lighten } from 'polished'\n\nconst mainContainer = css`\n  background-color: ${colors.white};\n  label: home-main-cntr;\n`\n\nconst bodyContainer = css`\n  min-height: calc(100vh - 4.5em);\n  border-top: 1px solid ${colors.lightGray};\n  label: home-body-cntr;\n`\n\nconst heroContainer = css`\n  flex-direction: row;\n  flex-wrap: wrap;\n  padding: 2em 0;\n  label: home-hero-cntr;\n  align-items: center;\n  justify-content: center;\n  border-bottom: 1px solid ${colors.lightGray};\n\n  @media (max-width: ${breakpoints.mobile}) {\n    flex-direction: column;\n  }\n`\n\nconst heroTextContainer = css`\n  flex: 1;\n  padding: 4em;\n  label: home-hero-text-cntr;\n  align-items: flex-start;\n  justify-content: center;\n\n  @media (max-width: ${breakpoints.mobile}) {\n    align-items: center;\n    padding: 1.5em;\n  }\n`\n\nconst heroImageContainer = css`\n  flex: 1;\n  padding: 6em 4em;\n  align-items: center;\n  justify-content: center;\n  label: home-hero-image-cntr;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    padding: 2em;\n  }\n`\n\nconst heroHeaderText = css`\n  font-weight: 600;\n  margin-bottom: 1em;\n  label: home-hero-header-text;\n\n  @media (max-width: ${breakpoints.mobile}) {\n    text-align: center;\n    font-size: 1.8em;\n  }\n`\n\nconst heroSubHeaderText = css`\n  line-height: 1.5em;\n  font-weight: 400;\n  margin-bottom: 1.5em;\n  label: home-hero-header-subtext;\n\n  @media (max-width: ${breakpoints.mobile}) {\n    text-align: center;\n    font-size: 1em;\n    margin-bottom: 2.5em;\n  }\n`\n\nconst heroImage = css`\n  max-width: 80%;\n  height: auto;\n  label: home-hero-image;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    max-width: 80%;\n  }\n`\n\nconst getStartedButtonIcon = css`\n  padding-left: 0.5em;\n  label: home-get-started-button-icon;\n`\n\nconst getStartedButton = css`\n  font-size: 1.3em;\n  font-weight: 600;\n  label: home-get-started-button;\n`\n\nconst currenciesContainer = css`\n  flex-direction: row;\n  padding: 2em 4em;\n  border-bottom: 1px solid ${colors.lightGray};\n  align-items: center;\n  justify-content: center;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    flex-direction: column;\n    padding: 2em 0;\n  }\n`\n\nconst currenciesSupportText = css`\n  font-weight: 600;\n  margin-right: 2em;\n\n  @media (max-width: ${breakpoints.mobile}) {\n    margin-right: 0;\n  }\n`\n\nconst currencyItemContainer = css`\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  margin-right: 3em;\n\n  @media (max-width: ${breakpoints.mobile}) {\n    margin-bottom: 1.5em;\n    margin-right: 0;\n  }\n`\n\nconst addressIconImage = css`\n  width: 40px;\n  height: 40px;\n  margin-right: 1em;\n  border-radius: 50%;\n  border: 2px solid ${colors.white};\n\n  @media (max-width: ${breakpoints.mobile}) {\n    width: 35px;\n    height: 35px;\n  }\n`\n\nconst addressIconText = css`\n  font-weight: 500;\n  margin-bottom: 0px;\n\n  @media (max-width: ${breakpoints.mobile}) {\n    font-size: 1.1em;\n  }\n\n`\n\nconst workContainer = css`\n  padding: 2em 0 0 0;\n  label: home-work-cntr;\n  border-bottom: 1px solid ${colors.lightGray};\n\n  @media (max-width: ${breakpoints.mobile}) {\n    padding: 0;\n  }\n`\n\nconst workHeaderContainer = css`\n  margin: 2em;\n  align-items: center;\n  justify-content: center;\n`\n\nconst workDetailsContainer = css`\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    flex-direction: column;\n  }\n\n`\n\nconst workDetailsItemContainer = css`\n  flex-direction: row;\n  background-color: ${colors.white};\n  padding: 2em 1em;\n  margin: 0 2em;\n  justify-content: space-between;\n\n  &:nth-child(even) {\n    flex-direction: row-reverse;\n  }\n\n  @media (max-width: ${breakpoints.tablet}) {\n    flex-direction: column;\n    margin: 0 1em;\n    padding: 1em 1em;\n\n    &:nth-child(even) {\n      flex-direction: column;\n    }\n  }\n`\n\nconst workItemTextContainer = css`\n  padding: 4em 4em;\n  flex: 1;\n  justify-content: center;\n  align-items: flex-start;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    padding: 2em 0;\n  }\n`\n\nconst workItemHeaderText = css`\n  font-weight: 600;\n  margin-bottom: .5em;\n\n  @media (max-width: ${breakpoints.mobile}) {\n    text-align: center;\n    font-size: 1.5em;\n  }\n`\n\nconst workItemTextBorder = css`\n  height: 7px;\n  width: 40%;\n  background-color: ${colors.secondary};\n\n  @media (max-width: ${breakpoints.tablet}) {\n    height: 6px;\n  }\n`\n\nconst workItemSubHeaderText = css`\n  padding-top: 1.5em;\n  color: ${lighten(0.3, colors.blackText)};\n\n  @media (max-width: ${breakpoints.mobile}) {\n    font-size: 1em;\n  }\n\n`\n\nconst workItemImageContainer = css`\n  flex: 1;\n  padding: 2em 4em;\n  align-items: center;\n  justify-content: center;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    padding: 0;\n    margin-bottom: 1em;\n  }\n`\n\nconst workItemImage = css`\n  width: 70%;\n  height: auto;\n\n  @media (max-width: ${breakpoints.mobile}) {\n    width: 80%;\n  }\n`\n\nconst callActionContainer = css`\n  padding: 2em 4em;\n  border-bottom: 1px solid ${colors.lightGray};\n  align-items: center;\n  justify-content: center;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    flex-direction: column;\n    padding: 1em 0 3em 0;\n  }\n`\n\nconst callActionButtonContainer = css`\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  padding-bottom: 2em;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    flex-direction: column;\n    padding: 0;\n  }\n`\n\nconst styles = {\n  mainContainer,\n  bodyContainer,\n  heroContainer,\n  heroTextContainer,\n  heroImageContainer,\n  heroHeaderText,\n  heroSubHeaderText,\n  heroImage,\n  getStartedButton,\n  getStartedButtonIcon,\n  currenciesContainer,\n  currenciesSupportText,\n  currencyItemContainer,\n  addressIconImage,\n  addressIconText,\n  workContainer,\n  workHeaderContainer,\n  workDetailsContainer,\n  workDetailsItemContainer,\n  workItemTextContainer,\n  workItemHeaderText,\n  workItemTextBorder,\n  workItemSubHeaderText,\n  workItemImageContainer,\n  workItemImage,\n  callActionContainer,\n  callActionButtonContainer\n}\n\nexport default styles\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { cx } from 'emotion'\nimport { Formik } from 'formik'\nimport { Link } from 'react-router-dom'\nimport * as Yup from 'yup'\n\nimport Container from '../../../components/Container'\nimport Input from '../../../components/Input'\nimport Button from '../../../components/Button'\nimport Spinner from '../../../components/Spinner'\n\nimport styles from './styles'\n\nconst validationSchema = Yup.object().shape({\n  loginField: Yup.string()\n    .required('Email is required'),\n  password: Yup.string()\n    .min(6)\n    .required('Password is required')\n})\n\nconst LoginForm = ({ onSubmit }) => {\n  return (\n    <Container style={styles.formContainer}>\n      <Formik\n        initialValues={{ loginField: '', password: '' }}\n        onSubmit={onSubmit}\n        validationSchema={validationSchema}\n        render={({\n          values,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n          errors,\n          isValid,\n          isSubmitting\n        }) => {\n          return (\n            <React.Fragment>\n              <Input\n                label='Username or Email'\n                name='loginField'\n                type='email'\n                placeholder='awesome-doggo'\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.loginField}\n                error={touched.loginField && errors.loginField}\n              />\n              <Input\n                label='Password'\n                name='password'\n                type='password'\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.password}\n                error={touched.password && errors.password}\n              />\n              <Container style={styles.buttonContainer}>\n                <Button\n                  primary\n                  disabled={!isValid || isSubmitting}\n                  type='submit'\n                  style={styles.submitButton}\n                  onClick={handleSubmit}\n                >\n                  Submit {isSubmitting && <span className={cx(styles.spinnerIcon)}><Spinner size={20} width={4} /></span>}\n                </Button>\n                <Button tag={Link} to='/forgot' link style={styles.cancelButton}>Forgot Password</Button>\n              </Container>\n            </React.Fragment>\n          )\n        }} />\n    </Container>\n  )\n}\n\nLoginForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n}\n\nexport default LoginForm\n","import { css } from 'react-emotion'\nimport { colors, breakpoints } from '../../../styles'\nimport { lighten } from 'polished'\n\nconst formContainer = css`\n  padding: 0 4em;\n  width: 100%;\n  label: login-body-form-cntr;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    padding: 0;\n  }\n`\n\nconst buttonContainer = css`\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding-top: 1em;\n  margin-left: 1.6em;\n\n  @media (max-width: ${breakpoints.tablet}) {\n  }\n`\n\nconst submitButton = css`\n  @media (max-width: ${breakpoints.tablet}) {\n    font-size: 1em;\n  }\n`\n\nconst submitButtonIcon = css`\n  padding-left: 0.5em;\n  label: login-submit-button-icon;\n`\n\nconst spinnerIcon = css`\n  margin-left: 0.2em;\n`\n\nconst cancelButton = css`\n  background-color: transparent;\n  color: ${colors.blackText};\n  label: login-cancel-button;\n\n  &:hover {\n    color: ${lighten(0.4, colors.blackText)};\n  }\n\n  @media (max-width: ${breakpoints.tablet}) {\n    font-size: 1em;\n  }\n`\n\nconst styles = {\n  formContainer,\n  buttonContainer,\n  submitButtonIcon,\n  spinnerIcon,\n  submitButton,\n  cancelButton\n}\n\nexport default styles\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Link, Redirect } from 'react-router-dom'\nimport { cx } from 'emotion'\n\nimport LoginForm from './LoginForm'\nimport Container from '../../components/Container'\nimport Text from '../../components/Text'\n\nimport API from '../../api'\nimport { login as loginAction } from '../../store/actions/auth'\n\nimport styles from './styles'\n\nclass Login extends Component {\n  constructor (props) {\n    super(props)\n\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  async handleSubmit (values, bag) {\n    try {\n      const data = await API.login(values)\n      bag.setSubmitting(false)\n      this.props.loginAction(data.user)\n      this.props.history.push('/profile')\n    } catch (e) {\n      console.log(e.response)\n      bag.setSubmitting(false)\n      bag.setErrors(e.response.data.errors.details.errors.errors)\n    }\n  }\n\n  render () {\n    if (this.props.isAuthenticated) {\n      return (<Redirect to='/profile' />)\n    }\n\n    return (\n      <Container fluid style={styles.mainContainer}>\n        <Container style={styles.heroContainer}>\n          <Container style={styles.heroLogoContainer}>\n            <a href='/'><img alt='bitcharge-logo' className={cx(styles.logoImageStyle)} src='https://res.cloudinary.com/bitcharge/image/upload/v1532990484/icons/bitcharge-logo-white.png' /></a>\n          </Container>\n          <Container style={styles.heroTextContainer}>\n            <img alt='login-avatar' className={cx(styles.signupAvatarIconStyle)} src='https://res.cloudinary.com/bitcharge/image/upload/v1535940305/panda-avatar.png' />\n            <Text tag='h3' style={styles.heroText}>Welcome back.</Text>\n          </Container>\n          <Container style={styles.heroFooterContainer}>\n            <Text tag='h6'>Don't have an account. <Link to='/signup' className={cx(styles.SignupLink)}>Signup</Link></Text>\n          </Container>\n        </Container>\n        <Container style={styles.bodyContainer}>\n          <LoginForm onSubmit={this.handleSubmit} />\n        </Container>\n      </Container>\n    )\n  }\n}\n\nLogin.propTypes = {\n  loginAction: PropTypes.func,\n  history: PropTypes.any,\n  isAuthenticated: PropTypes.bool\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.isAuthenticated\n  }\n}\n\nexport default connect(mapStateToProps, { loginAction })(Login)\n","import { css } from 'react-emotion'\nimport { colors, breakpoints } from '../../styles'\n\nconst mainContainer = css`\n  background-color: ${colors.white};\n  label: signup-main-cntr;\n  flex-direction: row;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    flex-direction: column;\n  }\n`\n\nconst heroContainer = css`\n  flex: 2;\n  background-color: ${colors.secondary};\n  color: ${colors.white};\n  padding: 0 2em;\n  label: signup-hero-cntr;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid ${colors.lightGray};\n\n  @media (max-width: ${breakpoints.tablet}) {\n    flex: none;\n  }\n`\n\nconst bodyContainer = css`\n  flex: 5;\n  align-items: center;\n  justify-content: center;\n  padding: 2em;\n  height: 100vh;\n  label: signup-body-cntr;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    padding: 1em;\n    height: auto;\n  }\n`\n\nconst heroLogoContainer = css`\n  padding-top: 1em;\n`\n\nconst logoImageStyle = css`\n  width: 150px;\n  height: auto;\n`\n\nconst signupAvatarIconStyle = css`\n  width: 150px;\n  height: 150px;\n  border-radius: 75px;\n  margin-bottom: .5em;\n  border: 2px solid ${colors.white};\n\n  @media (max-width: ${breakpoints.tablet}) {\n    width: 125px;\n    height: 125px;\n  }\n`\n\nconst heroText = css`\n  margin-top: 1em;\n  font-weight: 600;\n  text-align: center;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    margin-top: .5em;\n    font-size: 1.5em;\n  }\n`\n\nconst heroTextContainer = css`\n  flex: 1;\n  padding: 1em;\n  label: signup-hero-text-cntr;\n  align-items: center;\n  justify-content: center;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    flex: none;\n    margin-top: 1em;\n  }\n`\n\nconst heroFooterContainer = css`\n  margin-bottom: 1em;\n`\n\nconst heroImageContainer = css`\n  flex: 1;\n  padding: 4em 4em 4em 2em;\n  align-items: center;\n  justify-content: center;\n  label: signup-hero-image-cntr;\n`\n\nconst heroHeaderText = css`\n  font-weight: 500;\n  margin-bottom: 1em;\n  label: home-hero-header-text;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    margin-bottom: 0;\n  }\n`\n\nconst heroSubHeaderText = css`\n  line-height: 1.5em;\n  font-weight: 400;\n  margin-bottom: 1.5em;\n  label: home-hero-header-subtext;\n`\n\nconst heroImage = css`\n  max-width: 100%;\n  height: auto;\n  label: home-hero-image;\n`\n\nconst submitButton = css`\n  font-size: 1.3em;\n  margin-right: 1em;\n  label: signup-submit-button;\n`\n\nconst SignupLink = css`\n  font-weight: 600;\n  display: inline-block;\n  text-decoration: none;\n  color: ${colors.white};\n  padding: .3em;\n  border-radius: .1em;\n  label: login-signup-link;\n  transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;\n\n  &:hover {\n    background-color: ${colors.white};\n    color: ${colors.secondary};\n  }\n`\n\nconst styles = {\n  mainContainer,\n  bodyContainer,\n  heroContainer,\n  heroLogoContainer,\n  heroTextContainer,\n  heroText,\n  heroFooterContainer,\n  signupAvatarIconStyle,\n  heroImageContainer,\n  heroHeaderText,\n  heroSubHeaderText,\n  heroImage,\n  logoImageStyle,\n  submitButton,\n  SignupLink\n}\n\nexport default styles\n","import React, { Component } from 'react'\nimport { cx } from 'emotion'\nimport { Link } from 'react-router-dom'\nimport Media from 'react-media'\n\nimport Container from '../../components/Container'\nimport Text from '../../components/Text'\nimport Navbar from '../../components/Navbar'\nimport Footer from '../../components/Footer'\n\nimport { ScrollToTopOnMount } from '../../components/Scroll'\n\nimport styles from './styles'\nimport { breakpoints } from '../../styles'\n\nclass Privacy extends Component {\n  render () {\n    return (\n      <Container fluid fullHeight style={styles.mainContainer}>\n        <ScrollToTopOnMount />\n        <Navbar />\n        <Container fluid style={styles.bodyContainer}>\n          <Container fluid style={styles.headerContainer}>\n            <Text tag='h1' style={styles.headerTextStyle}>Privacy Policy</Text>\n            <Media query={`(max-width: ${breakpoints.tablet})`}>\n              {matches => matches ? <Container style={styles.workItemTextBorder} /> : null}\n            </Media>\n          </Container>\n          <Container style={styles.detailsContainer}>\n            <Container style={styles.sectionContainer}>\n              <Text style={styles.bodyText}>\n                Bitcharge is a platform for people and businesses to accept cryptopayments in their favourite crypto currency. At Bitcharge, your privacy is important to us, and we want you to feel confident that your personal information is secure when using our products and our platform.\n                <br /><br />The services are provided by Droidsize Inc. (parent company and hereinafter referred to as “Bitcharge”). It is Bitcharge’s policy to respect your privacy regarding any information we may collect while operating our website.\n              </Text>\n              <Text tag='h4' style={styles.sectionHeader}>\n                Website Visitors\n              </Text>\n              <Text style={styles.bodyText}>\n                Like most website operators, Bitcharge collects non-personally-identifying information of the sort that web browsers and servers typically make available, such as the browser type, language preference, referring site, and the date and time of each visitor request. Bitcharge's purpose in collecting non-personally identifying information is to better understand how Bitcharge's visitors use its website. From time to time, Bitcharge may release non-personally-identifying information in the aggregate, e.g., by publishing a report on trends in the usage of its website. Bitcharge also collects potentially personally-identifying information like Internet Protocol (IP) addresses for logged in users on <Link to='/' className={`${cx(styles.linkText)}`}>Bitcharge.com</Link>.\n              </Text>\n            </Container>\n            <Container style={styles.sectionContainer}>\n              <Text tag='h4' style={styles.sectionHeader}>\n                Gathering of Personally-Identifying Information\n              </Text>\n              <Text style={styles.bodyText}>\n                Certain visitors to Bitcharge's websites choose to interact with Bitcharge in ways that require Bitcharge to gather personally-identifying information. The amount and type of information that Bitcharge gathers depends on the nature of the interaction. For example, we ask visitors who sign up at <Link to='/' className={`${cx(styles.linkText)}`}>Bitcharge.com</Link> to provide a username and email address. In each case, Bitcharge collects such information only insofar as is necessary or appropriate to fulfill the purpose of the visitor's interaction with Bitcharge. Bitcharge does not disclose personally-identifying information other than as described below. And visitors can always refuse to supply personally-identifying information, with the caveat that it may prevent them from engaging in certain website-related activities.\n              </Text>\n            </Container>\n            <Container style={styles.sectionContainer}>\n              <Text tag='h4' style={styles.sectionHeader}>\n                Aggregated Statistics\n              </Text>\n              <Text style={styles.bodyText}>\n                Bitcharge may collect statistics about the behavior of visitors to its websites. Bitcharge may display this information publicly or provide it to others. However, Bitcharge does not disclose personally-identifying information other than as described below.\n              </Text>\n            </Container>\n            <Container style={styles.sectionContainer}>\n              <Text tag='h4' style={styles.sectionHeader}>\n                Protection of Certain Personally-Identifying Information\n              </Text>\n              <Text style={styles.bodyText}>\n                Bitcharge discloses potentially personally-identifying and personally-identifying information only to those of its employees, contractors and affiliated organizations that (i) need to know that information in order to process it on Bitcharge's behalf or to provide services available at Bitcharge's websites, and (ii) that have agreed not to disclose it to others. Some of those employees, contractors and affiliated organizations may be located outside of your home country; by using Bitcharge's websites, you consent to the transfer of such information to them. Bitcharge will not rent or sell potentially personally-identifying and personally-identifying information to anyone. Other than to its employees, contractors and affiliated organizations, as described above, Bitcharge discloses potentially personally-identifying and personally-identifying information only in response to a subpoena, court order or other governmental request, or when Bitcharge believes in good faith that disclosure is reasonably necessary to protect the property or rights of Bitcharge, third parties or the public at large. If you are a registered user of an Bitcharge website and have supplied your email address, Bitcharge may occasionally send you an email to tell you about new features, solicit your feedback, or just keep you up to date with what's going on with Bitcharge and our products. If you send us a request (for example via email or via one of our feedback mechanisms), we reserve the right to publish it in order to help us clarify or respond to your request or to help us support other users. Bitcharge takes all measures reasonably necessary to protect against the unauthorized access, use, alteration or destruction of potentially personally-identifying and personally-identifying information.\n              </Text>\n            </Container>\n            <Container style={styles.sectionContainer}>\n              <Text tag='h4' style={styles.sectionHeader}>\n                Cookies\n              </Text>\n              <Text style={styles.bodyText}>\n                A cookie is a string of information that a website stores on a visitor's computer, and that the visitor's browser provides to the website each time the visitor returns. For more information, visit <a className={`${cx(styles.linkText)}`} href='http://www.allaboutcookies.org/'>All About Cookies</a>.\n                <br /><br />Bitcharge uses cookies to help Bitcharge identify and track visitors, their usage of Bitcharge website, and their website access preferences. Some cookies expire after a certain amount of time, or upon logging out (session cookies), others remain on your computer or terminal device for a longer period (persistent cookies). Our Site uses first party cookies (cookies set directly by Anchor) as well as third party cookies, as described below\n                <br /><br />Strictly Necessary Cookies: Used to provide Users with the Services available through our Site and to use some of their features, such as the ability to log-in and access to secure areas. These cookies are served by Anchor and are essential for using and navigating the Site. Without these cookies, basic functions of our Site would not work. Because these cookies are strictly necessary to deliver the Site and the Services, you cannot refuse them.\n                <br /><br />Analytics/Performance: Used to better understand the behavior of the Users on our Site and improve our Site accordingly, for example by making sure Users are finding what they need easily. The Site uses Google Analytics, a web analytics service provided by Google Inc. (“Google”). The information collected by Google (including your IP address) will be transmitted to and stored by Google on servers in the United States (Google is certified to the Privacy Shield for data transfers). How long a Google Analytics cookie remains on your computer or device depends on what it is and what it is used for. Some Google Analytics cookies expire at the end of your browser session, whilst others can remain for up to two years. You can prevent your data from being collected by Google Analytics on our Site by downloading and installing the <a className={`${cx(styles.linkText)}`} href='https://tools.google.com/dlpage/gaoptout?hl=en'>Google Analytics Opt-out Browser Add-on</a> for your current web browser. For more information on Google Analytics privacy practices, read here.\n                <br /><br />Bitcharge visitors who do not wish to have cookies placed on their computers should set their browsers to refuse cookies before using Bitcharge's websites, with the drawback that certain features of Bitcharge's websites may not function properly without the aid of cookies.\n              </Text>\n            </Container>\n            <Container style={styles.sectionContainer}>\n              <Text tag='h4' style={styles.sectionHeader}>\n                International Users\n              </Text>\n              <Text style={styles.bodyText}>\n                Bitcharge is based in India and the some of its servers are based in the United States. If you are accessing our Services from the European Union or other regions with laws governing data collection and use, please note that your Personal Data will be transmitted to our servers in India and the United States and the data may be transmitted to our service providers supporting our business operations (described above). India and United States may have data protection laws less stringent than or otherwise different from the laws in effect in the country in which you are located. Where we transfer your Personal Data out of the EU we will take steps to ensure that your Personal Data receives an adequate level of protection where it is processed and your rights continue to be protected (GDPR).\n                <br /><br />By providing your information to the Services you agree to the transfer of your information to India and the United States and processing globally in accordance with this Privacy Policy.\n              </Text>\n            </Container>\n            <Container style={styles.sectionContainer}>\n              <Text tag='h4' style={styles.sectionHeader}>\n                Privacy Policy Changes\n              </Text>\n              <Text style={styles.bodyText}>\n                Although most changes are likely to be minor, Bitcharge may change its Privacy Policy from time to time, and in Bitcharge's sole discretion. Bitcharge encourages visitors to frequently check this page for any changes to its Privacy Policy. If you have a <Link to='/' className={`${cx(styles.linkText)}`}>Bitcharge.com</Link> account, you might also receive an alert informing you of these changes. Your continued use of this site after any change in this Privacy Policy will constitute your acceptance of such change.\n              </Text>\n            </Container>\n            <Container style={styles.sectionContainer}>\n              <Text tag='h4' style={styles.sectionHeader}>\n                Other Terms and Conditions\n              </Text>\n              <Text style={styles.bodyText}>\n                Your access to and use of the Bitcharge is subject to any additional terms applicable to such Services that may be posted on the Terms from time to time, including without limitation, Bitcharge’s Terms of Use available at <Link to='/terms' className={`${cx(styles.linkText)}`}>https://www.bitcharge.co/terms</Link>.\n              </Text>\n            </Container>\n            <Container style={styles.sectionContainer}>\n              <Text tag='h4' style={styles.sectionHeader}>\n                Contact Us\n              </Text>\n              <Text style={styles.bodyText}>\n                Please feel free to contact us if you have any questions about Bitcharge’s Privacy Policy or the information practices. You may contact us by sending an email to <a className={`${cx(styles.linkText)}`} href='mailto:support@bitcharge.co'>support@bitcharge.co</a>\n              </Text>\n            </Container>\n          </Container>\n        </Container>\n        <Footer />\n      </Container>\n    )\n  }\n}\n\nexport default Privacy\n","import { css } from 'react-emotion'\nimport { colors, breakpoints } from '../../styles'\nimport { lighten, darken } from 'polished'\n\nconst mainContainer = css`\n  background-color: ${colors.background};\n  label: home-main-cntr;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    background-color: ${colors.white};\n  }\n`\n\nconst bodyContainer = css`\n  min-height: calc(100vh - 4.5em);\n  border-top: 2px solid ${colors.primary};\n  align-items: center;\n  label: home-body-cntr;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    border-bottom: 1px solid ${colors.defaultBorder};\n  }\n`\n\nconst workItemTextBorder = css`\n  height: 7px;\n  width: 60%;\n  margin-top: .5em;\n  background-color: ${colors.secondary};\n\n  @media (max-width: ${breakpoints.tablet}) {\n    height: 6px;\n  }\n`\n\nconst headerContainer = css`\n  margin-top: 5em;\n  margin-bottom: 3em;\n  align-items: center;\n  justify-content: center;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    margin-top: 3em;\n    margin-bottom: 0em;\n  }\n`\n\nconst headerTextStyle = css`\n  font-weight: 600;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    font-weight: 500;\n    font-size: 2em;\n  }\n`\n\nconst detailsContainer = css`\n  width: 65%;\n  margin-top: 3em;\n  margin-bottom: 5em;\n  background-color: ${colors.white};\n  border-radius: 5px;\n  border: 1px solid ${lighten(0.1, colors.defaultBorder)};\n  padding: 4em 5em;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    width: 100%;\n    margin: 0;\n    border-radius: 0;\n    padding: 1.5em;\n    border: 0;\n  }\n`\n\nconst sectionContainer = css`\n  padding: 2em 0;\n  border-bottom: 1px dashed ${colors.defaultBorder};\n\n  &:last-child {\n    border-bottom: 0;\n  }\n`\n\nconst sectionHeader = css`\n  font-weight: 500;\n  margin: 1em 0 1.5em 0;\n`\n\nconst bodyText = css`\n  color: ${lighten(0.2, colors.blackText)};\n  line-height: 1.5;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    width: 100%;\n    font-size: 1em;\n  }\n`\n\nconst linkText = css`\n  color: ${colors.linkText};\n  font-weight: 500;\n  text-decoration: none;\n  transition: all 0.15s ease-out;\n\n  &:hover {\n    color: ${darken(0.2, colors.linkText)};\n  }\n`\n\nconst styles = {\n  mainContainer,\n  bodyContainer,\n  detailsContainer,\n  headerContainer,\n  workItemTextBorder,\n  headerTextStyle,\n  sectionContainer,\n  sectionHeader,\n  bodyText,\n  linkText\n}\n\nexport default styles\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { components } from 'react-select'\nimport { cx } from 'emotion'\n\nimport Text from '../../../components/Text'\n\nimport styles from './styles'\n\nconst DropdownItem = (props) => {\n  const { isDisabled, data } = props\n  return (\n    !isDisabled ? (\n      <components.Option {...props}>\n        <img alt='dropdown-icon' src={data.currency.icon} className={cx(styles.dropdownItemImage)} /><Text tag='h5' unstyled>{data.currency.name}</Text>\n      </components.Option>\n    ) : null\n  )\n}\n\nDropdownItem.propTypes = {\n  isDisabled: PropTypes.boolean,\n  data: PropTypes.object\n}\n\nexport default DropdownItem\n","import { css } from 'react-emotion'\nimport { colors } from '../../../styles'\n\nconst dropdownItemImage = css`\n  margin-right: 1em;\n  width: 2em;\n  height: 2em;\n  border-radius: 50%;\n  border: 1px solid ${colors.white};\n`\n\nexport default {\n  dropdownItemImage\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { components } from 'react-select'\nimport { cx } from 'emotion'\n\nimport Text from '../../../components/Text'\n\nimport styles from './styles'\n\nconst SingleValue = (props) => {\n  const { data } = props\n  return (\n    <components.SingleValue {...props}>\n      <img alt='selected-icon' src={data.currency.icon} className={cx(styles.selectedItemImage)} /><Text tag='h5' unstyled>{data.currency.name}</Text>\n    </components.SingleValue>\n  )\n}\n\nSingleValue.propTypes = {\n  data: PropTypes.any\n}\n\nexport default SingleValue\n","import { css } from 'react-emotion'\nimport { colors } from '../../../styles'\n\nconst selectedItemImage = css`\n  margin-right: 1em;\n  width: 1.8em;\n  height: 1.8em;\n  border-radius: 50%;\n  border: 1px solid ${colors.white};\n`\n\nexport default {\n  selectedItemImage\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { cx } from 'emotion'\nimport Select from 'react-select'\nimport QRCode from 'qrcode.react'\nimport { Link } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\n\nimport API from '../../api'\nimport Container from '../../components/Container'\nimport Text from '../../components/Text'\nimport Navbar from '../../components/Navbar'\nimport Footer from '../../components/Footer'\nimport Spinner from '../../components/Spinner'\nimport Button from '../../components/Button'\n\nimport SingleValue from './SingleValue'\nimport DropdownItem from './DropdownItem'\n\nimport styles from './styles'\nimport { colors } from '../../styles'\n\nconst selectStyles = {\n  control: base => ({ ...base, ...styles.selectStyle }),\n  container: base => ({ ...base, width: '100%' }),\n  indicatorsContainer: base => ({ ...base, transition: 'all 0.3s ease-out' }),\n  indicatorSeparator: base => ({ ...base, backgroundColor: '#FFF' }),\n  dropdownIndicator: base => ({ ...base, color: '#000' }),\n  menu: base => ({ ...base, marginTop: '1px', border: 0, borderRadius: 0 }),\n  option: base => ({ ...styles.dropdownItemStyle }),\n  singleValue: base => ({ ...styles.singleValueStyle }),\n  valueContainer: base => ({ ...base, padding: 0 })\n}\n\nclass Profile extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      isLoading: true,\n      isError: false,\n      user: null,\n      selectedAddress: null,\n      copiedAddress: false\n    }\n  }\n\n  onCopyAddress = () => {\n    this.setState({ copied: true })\n    setInterval(() => {\n      this.setState({ copied: false })\n    }, 3000)\n  }\n\n  async componentDidMount () {\n    try {\n      const data = await API.getProfile(this.props.match.params.username)\n      this.setState({ isLoading: false, user: data })\n    } catch (e) {\n      this.setState({ isLoading: false, isError: true })\n    }\n  }\n\n  onDropdownItemPress = (value) => {\n    this.setState({ selectedAddress: value })\n  }\n\n  _renderCardBody = (addresses) => {\n    const { selectedAddress } = this.state\n\n    if (!addresses || !addresses.length) {\n      return (\n        <Container style={styles.cardBodyContainer}>\n          <Container fluid style={styles.bodyDataContainer}>\n            <Container style={styles.addressContainer}>\n              <Container style={styles.noAddressImageContainer}>\n                <img className={cx(styles.noAddressImage)} src='https://res.cloudinary.com/bitcharge/image/upload/v1536110953/assets/building-profile.png' />\n              </Container>\n              <Text tag='h5' style={styles.noAddressText}>This profile is still in progress. No addresses added yet.</Text>\n            </Container>\n          </Container>\n        </Container>\n      )\n    }\n\n    const addressList = Object.keys(addresses).map(address => addresses[address]).sort((a, b) => {\n      const textA = a.currency.name.toUpperCase()\n      const textB = b.currency.name.toUpperCase()\n\n      return textA.localeCompare(textB)\n    })\n\n    const addressText = selectedAddress ? selectedAddress.address : addresses[0].address\n    return (\n      <Container style={styles.cardBodyContainer}>\n        <Select\n          options={addressList}\n          defaultValue={addressList[0]}\n          isSearchable={false}\n          components={{ Option: DropdownItem, SingleValue }}\n          getOptionLabel={({ currency }) => currency.name}\n          getOptionValue={({ currency }) => currency.symbol}\n          styles={selectStyles}\n          onChange={this.onDropdownItemPress}\n        />\n        <Container fluid style={styles.bodyDataContainer}>\n          <Container style={styles.addressContainer}>\n            <Text tag='h5' style={styles.addressHeaderStyle}>Wallet Address</Text>\n            <Text tag='h6' style={styles.addressValueText}>{addressText}</Text>\n          </Container>\n          <Container style={styles.qrcodeContainer}>\n            <QRCode value={addressText} size={172} />\n          </Container>\n        </Container>\n      </Container>\n    )\n  }\n\n  _renderUser = (user) => {\n    return (\n      <React.Fragment>\n        <Container style={styles.cardHeaderContainer}>\n          <Container style={styles.avatarContainer}>\n            <img alt='user-avatar' className={cx(styles.avatarIconStyle)} src={user.avatar || 'https://res.cloudinary.com/bitcharge/image/upload/v1535940305/panda-avatar.png'} />\n          </Container>\n          <Container style={styles.headerTextContainer}>\n            <Text tag='h5' unstyled style={styles.headerTextStyle}>{user.name}</Text>\n            <Text tag='h6' unstyled style={styles.headerSubTextStyle}>{user.intro || user.username}</Text>\n          </Container>\n        </Container>\n        {this._renderCardBody(user.addresses)}\n      </React.Fragment>\n    )\n  }\n\n  _renderLoading = () => {\n    return (\n      <Container style={styles.loadingContainer}>\n        <Spinner size={50} width={7} color={colors.lightText} />\n      </Container>\n    )\n  }\n\n  _renderError = () => {\n    return (\n      <React.Fragment>\n        <Container style={styles.cardErrorHeaderContainer}>\n          <Container style={styles.errorHeaderTextContainer}>\n            <Text tag='h3' unstyled style={styles.errorHeaderTextStyle}>We couldn't find that Bitcharge profile</Text>\n          </Container>\n        </Container>\n        <Container style={styles.errorUserContainer}>\n          <Container style={styles.noAddressImageContainer}>\n            <img className={cx(styles.errorUserImage)} src='https://res.cloudinary.com/bitcharge/image/upload/v1536119853/assets/user-not-found.png' />\n          </Container>\n          <Text tag='h6' style={styles.errorUserText}>Seems like nobody has a Bitcharge profile with that username, try checking the link again. You can also create your own Bitcharge profile with this username. </Text>\n          <Button tag={Link} to='/signup' primary style={styles.getStartedButton}>Create My Profile <i className={`icon ion-md-arrow-round-forward ${styles.getStartedButtonIcon}`} /></Button>\n        </Container>\n      </React.Fragment>\n    )\n  }\n\n  _renderCard = () => {\n    if (this.state.isLoading) {\n      return this._renderLoading()\n    }\n\n    if (this.state.user) {\n      return this._renderUser(this.state.user)\n    }\n\n    if (this.state.isError) {\n      return this._renderError()\n    }\n  }\n\n  getMetaTags = (user) => {\n    const firstName = user.name.split(' ')[0]\n    return (\n      <Helmet>\n        <meta property='og:title' content={`Pay ${firstName} in crypto with Bitcharge`} />\n        <meta property='og:description' content={`Go to bitcharge.co/${user.username} to pay ${firstName} in your favourite cryptocurrency.`} />\n        <meta property='og:image' content='https://res.cloudinary.com/bitcharge/image/upload/v1536051435/assets/bitcharge-social-graph.png' />\n        <meta property='og:image:alt' content='Bitcharge' />\n        <meta property='og:url' content={`https://bitcharge.co/${user.username}`} />\n      </Helmet>\n    )\n  }\n\n  render () {\n    const { user } = this.state\n    return (\n      <Container fluid fullHeight style={styles.mainContainer}>\n        {user && this.getMetaTags(user)}\n        <Navbar />\n        <Container fluid style={styles.bodyContainer}>\n          <Container style={styles.cardContainer}>\n            {this._renderCard()}\n          </Container>\n        </Container>\n        <Footer />\n      </Container>\n    )\n  }\n}\n\nProfile.propTypes = {\n  match: PropTypes.any\n}\n\nexport default Profile\n","import { css } from 'react-emotion'\nimport { colors, typography, breakpoints } from '../../styles'\nimport { lighten } from 'polished'\n\nconst mainContainer = css`\n  background-color: ${colors.background};\n`\n\nconst logoTextStyle = css`\n  font-weight: 500;\n`\n\nconst bodyContainer = css`\n  width: 100%;\n  min-height: calc(100vh - 6em);\n  align-items: center;\n  border-bottom: 1px dashed ${colors.defaultBorder};\n\n  @media (max-width: ${breakpoints.mobile}) {\n    padding-bottom: 2em;\n    background-color: ${colors.white};\n    border-top: 1px solid ${colors.defaultBorder};\n  }\n`\n\nconst cardContainer = css`\n  min-width: 32em;\n  max-width: 42em;\n  margin-top: 3em;\n  margin-bottom: 3em;\n  background-color: ${colors.white};\n  border-radius: 4px;\n\n  @media (max-width: ${breakpoints.mobile}) {\n    width: 100%;\n    min-width: 100%;\n    max-width: 100%;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n`\n\nconst loadingContainer = css`\n  align-items: center;\n  justify-content: center;\n  padding: 5em;\n`\n\nconst cardHeaderContainer = css`\n  padding: 2.5em 2em;\n  background-color: ${colors.primary};\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n  align-items: center;\n  justify-content: center;\n\n  @media (max-width: ${breakpoints.mobile}) {\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n  }\n`\n\nconst cardErrorHeaderContainer = css`\n  padding: 2em;\n  align-items: center;\n  justify-content: center;\n\n  @media (max-width: ${breakpoints.mobile}) {\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n    padding: 1.5em 2em;\n  }\n`\n\nconst avatarContainer = css`\n  align-items: center;\n  justify-content: center;\n`\n\nconst noAddressImageContainer = css`\n  width: 100%;\n  padding: 2em 4em;\n  margin-bottom: 1em;\n  align-items: center;\n\n  @media (max-width: ${breakpoints.mobile}) {\n    padding: 2em 1em 1em 1em;\n  }\n`\n\nconst noAddressImage = css`\n  width: 60%;\n  height: auto;\n\n  @media (max-width: ${breakpoints.mobile}) {\n    width: 80%;\n  }\n`\n\nconst errorUserImage = css`\n  width: 65%;\n  height: auto;\n\n  @media (max-width: ${breakpoints.mobile}) {\n    width: 80%;\n  }\n`\n\nconst noAddressText = css`\n  font-weight: 500;\n  margin: 1em 2em;\n  text-align: center;\n\n  @media (max-width: ${breakpoints.mobile}) {\n    font-size: 1.2em;\n  }\n`\n\nconst errorUserText = css`\n  font-weight: 400;\n  margin: 1em 2em;\n  line-height: 1.5em;\n  text-align: center;\n\n  @media (max-width: ${breakpoints.mobile}) {\n    font-size: .9em;\n  }\n`\n\nconst avatarIconStyle = css`\n  width: 100px;\n  height: 100px;\n  border-radius: 50px;\n  border: 2px solid ${colors.white};\n`\n\nconst headerTextContainer = css`\n  padding-top: .8em;\n  text-align: center;\n  color: ${colors.white};\n`\n\nconst errorHeaderTextContainer = css`\n  padding-top: .8em;\n  text-align: center;\n`\n\nconst headerTextStyle = css`\n  font-weight: 600;\n  margin-bottom: .2em;\n`\n\nconst errorHeaderTextStyle = css`\n  font-weight: 500;\n  margin-bottom: .2em;\n  color: ${colors.blackText};\n\n  @media (max-width: ${breakpoints.mobile}) {\n    font-size: 1.3em;\n  }\n`\n\nconst headerSubTextStyle = css`\n  font-weight: 400;\n`\n\nconst cardBodyContainer = css`\n  align-items: center;\n  width: 32em;\n\n  @media (max-width: ${breakpoints.mobile}) {\n    width: 100%;\n  }\n\n`\n\nconst bodyDataContainer = css`\n  align-items: center;\n  padding: 1em;\n\n  @media (max-width: ${breakpoints.mobile}) {\n    padding: 0.5em;\n  }\n`\n\nconst addressValueText = css`\n  @media (max-width: ${breakpoints.mobile}) {\n    font-size: 13px;\n  }\n`\n\nconst addressContainer = css`\n  margin-top: .5em;\n  align-items: center;\n`\n\nconst noUserDetailsContainer = css`\n  margin-top: 2em;\n`\n\nconst errorUserContainer = css`\n  padding-bottom: 2em;\n  align-items: center;\n`\n\nconst optionsContainer = css`\n  flex-direction: row;\n  width: 90%;\n  align-items: center;\n  justify-content: flex-end;\n  @media (max-width: ${breakpoints.tablet}) {\n    width: 90%;\n    justify-content: flex-end;\n  }\n`\n\nconst addressActionButton = css`\n  padding-left: .8em;\n  padding-right: .2em;\n  padding-top: .2em;\n  padding-bottom: .2em;\n  font-size: 1.1em;\n\n  &:last-child {\n    padding-right: 0em;\n  }\n\n  @media (max-width: ${breakpoints.mobile}) {\n    font-size: 1em;\n  }\n`\n\nconst iconButton = css`\n  margin-right: 4px;\n  color: ${lighten(0.2, colors.blackText)};\n`\n\nconst copiedTextStyle = css`\n  color: ${colors.primary};\n  font-weight: 500;\n  padding-top: .4em;\n  padding-right: .2em;\n  font-size: 1em;\n  transition: all 0.15s ease-out;\n`\n\nconst addNewEmptyButton = css`\n  margin-top: 2em;\n`\n\nconst addressHeaderStyle = css`\n`\n\nconst qrcodeContainer = css`\n  padding: 1.2em;\n  align-items: center;\n  justify-content: center;\n`\n\nconst qrcodeImage = css`\n  width: 10em;\n  height: 10em;\n`\n\nconst getStartedButtonIcon = css`\n  padding-left: 0.5em;\n  label: home-get-started-button-icon;\n`\n\nconst getStartedButton = css`\n  margin: 1em 0em 1.5em 0;\n  font-size: 1em;\n  font-weight: 600;\n  label: home-get-started-button;\n\n  @media (max-width: ${breakpoints.mobile}) {\n    font-size: .9em;\n  }\n`\n\nconst selectStyle = {\n  boxSizing: 'border-box',\n  width: '100%',\n  borderRadius: 0,\n  border: 0,\n  borderBottom: `1px solid ${colors.background}`,\n  padding: '0.8em',\n  fontFamily: typography.primaryFont,\n  fontSize: '1.2rem',\n  backgroundColor: colors.white,\n  '&:hover': {\n    border: 0,\n    borderBottom: `1px solid ${colors.background}`\n  }\n}\n\nconst dropdownItemStyle = {\n  display: 'flex',\n  alignItems: 'center',\n  padding: '0.8em',\n  maxWidth: '100%',\n  transition: 'background 0.3s ease-out',\n  '&:hover': {\n    backgroundColor: colors.primary,\n    color: colors.white\n  },\n  '&:active': {\n    backgroundColor: colors.primary,\n    color: colors.white\n  }\n}\n\nconst singleValueStyle = {\n  display: 'flex',\n  alignItems: 'center'\n}\n\nconst styles = {\n  mainContainer,\n  logoTextStyle,\n  bodyContainer,\n  cardContainer,\n  loadingContainer,\n  cardHeaderContainer,\n  cardErrorHeaderContainer,\n  cardBodyContainer,\n  avatarContainer,\n  noAddressImageContainer,\n  noAddressText,\n  noAddressImage,\n  avatarIconStyle,\n  headerTextContainer,\n  headerTextStyle,\n  errorHeaderTextStyle,\n  headerSubTextStyle,\n  bodyDataContainer,\n  addressContainer,\n  addressValueText,\n  iconButton,\n  copiedTextStyle,\n  optionsContainer,\n  addressActionButton,\n  addressHeaderStyle,\n  qrcodeContainer,\n  qrcodeImage,\n  addNewEmptyButton,\n  selectStyle,\n  singleValueStyle,\n  dropdownItemStyle,\n\n  errorUserImage,\n  errorUserText,\n  noUserDetailsContainer,\n  errorUserContainer,\n  errorHeaderTextContainer,\n  getStartedButton,\n  getStartedButtonIcon\n}\n\nexport default styles\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Formik } from 'formik'\nimport * as Yup from 'yup'\nimport { cx } from 'emotion'\n\nimport Container from '../../../components/Container'\nimport Text from '../../../components/Text'\nimport Button from '../../../components/Button'\nimport Input from '../../../components/Input'\n\nimport styles from '../styles'\n\nconst validationSchema = Yup.object().shape({\n  username: Yup.string()\n    .min(2),\n  password: Yup.string()\n    .min(6)\n})\n\nconst EditSettingsForm = ({ onSubmit, onCancel, user }) => {\n  return (\n    <Formik\n      initialValues={{ username: user.username, password: '' }}\n      onSubmit={onSubmit}\n      validationSchema={validationSchema}\n      render={({\n        values,\n        handleChange,\n        handleSubmit,\n        handleBlur,\n        errors,\n        touched,\n        isValid,\n        isSubmitting\n      }) => {\n        return (\n          <Container style={styles.settingsBodyContainer}>\n            <Container style={styles.settingsItemContainer}>\n              <Text tag='h5' style={styles.settingsItemLabel}>Username</Text>\n              <Input\n                name='username'\n                noErrorText\n                inputStyle={styles.textInputStyle}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.username}\n                error={touched.username && errors.username}\n              />\n            </Container>\n            <Container style={styles.settingsItemContainer}>\n              <Text tag='h5' style={styles.settingsItemLabel}>Email</Text>\n              <Text tag='h5' style={styles.settingsItemValue}>{user.email}</Text>\n            </Container>\n            <Container style={styles.settingsItemContainer}>\n              <Text tag='h5' style={styles.settingsItemLabel}>Password</Text>\n              <Input\n                name='password'\n                noErrorText\n                inputStyle={styles.textInputStyle}\n                type='password'\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.password}\n                error={touched.password && errors.password}\n              />\n            </Container>\n            <Container style={styles.settingsItemContainer}>\n              <Text tag='h5' style={styles.settingsItemLabel}>Email Verification</Text>\n              {user.active\n                ? <Text tag='h5' style={styles.settingsItemValue}>Verified <i className={`icon ion-md-checkmark-circle-outline ${cx(styles.verifiedIcon)}`} /></Text>\n                : <Button secondary style={styles.editSettingsButton}>Resend Email<i className={`icon ion-md-arrow-round-forward ${cx(styles.editIcon)}`} /></Button>}\n            </Container>\n            <Container style={cx(styles.settingsItemContainer, styles.editButtonContainer)}>\n              <Button\n                primary\n                disabled={!isValid || isSubmitting}\n                onClick={handleSubmit}\n                style={styles.editAddressSaveButton}\n                type='submit'\n              >\n                Save\n              </Button>\n              <Button\n                onClick={onCancel}\n                style={styles.editAddressCancelButton}\n                link\n              >\n                Cancel\n              </Button>\n            </Container>\n          </Container>\n        )\n      }} />\n  )\n}\n\nEditSettingsForm.propTypes = {\n  onSubmit: PropTypes.func,\n  onCancel: PropTypes.func,\n  user: PropTypes.object\n}\n\nexport default EditSettingsForm\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { cx } from 'emotion'\nimport { connect } from 'react-redux'\n\nimport Container from '../../components/Container'\nimport Spinner from '../../components/Spinner'\nimport Text from '../../components/Text'\nimport Button from '../../components/Button'\nimport EditSettingsForm from './EditSettingsForm'\n\nimport API from '../../api'\nimport { getAuthUser } from '../../store/actions/auth'\n\nimport styles from './styles'\nimport { colors } from '../../styles'\n\nconst SettingsBody = ({ user }) => {\n  return (\n    <Container style={styles.settingsBodyContainer}>\n      <Container style={styles.settingsItemContainer}>\n        <Text tag='h5' style={styles.settingsItemLabel}>Username</Text>\n        <Text tag='h5' style={styles.settingsItemValue}>{user.username}</Text>\n      </Container>\n      <Container style={styles.settingsItemContainer}>\n        <Text tag='h5' style={styles.settingsItemLabel}>Email</Text>\n        <Text tag='h5' style={styles.settingsItemValue}>{user.email}</Text>\n      </Container>\n      <Container style={styles.settingsItemContainer}>\n        <Text tag='h5' style={styles.settingsItemLabel}>Password</Text>\n        <Text tag='h5' style={styles.settingsItemValue}>Change <i className={`icon ion-md-create ${cx(styles.verifiedIcon)}`} /></Text>\n      </Container>\n      <Container style={styles.settingsItemContainer}>\n        <Text tag='h5' style={styles.settingsItemLabel}>Email Verification</Text>\n        {user.active\n          ? <Text tag='h5' style={styles.settingsItemValue}>Verified <i className={`icon ion-md-checkmark-circle-outline ${cx(styles.verifiedIcon)}`} /></Text>\n          : <Button secondary style={styles.editSettingsButton}>Resend Email<i className={`icon ion-md-arrow-round-forward ${cx(styles.editIcon)}`} /></Button>}\n      </Container>\n    </Container>\n  )\n}\n\nclass Settings extends Component {\n  state = {\n    isEditing: false\n  }\n\n  _renderLoading = () => {\n    return (\n      <Container style={styles.loadingContainer}>\n        <Spinner size={50} width={7} color={colors.lightText} />\n      </Container>\n    )\n  }\n\n  onEdit = () => {\n    this.setState({ isEditing: true })\n  }\n\n  onCancelEdit = () => {\n    this.setState({ isEditing: false })\n  }\n\n  async onEditSubmit (values, bag) {\n    const userDetails = {\n      username: values.username\n    }\n    if (values.password) {\n      userDetails['password'] = values.password\n    }\n\n    console.log(userDetails)\n\n    try {\n      const data = await API.updateUser(userDetails)\n      bag.setSubmitting(false)\n      this.props.getAuthUser(data)\n      this.setState({ isEditing: false })\n    } catch (e) {\n      console.log(e)\n      bag.setSubmitting(false)\n      bag.setErrors(API.setErrors(e.response.data.errors.details.errors))\n    }\n  }\n\n  _renderUserDetails = (user) => {\n    return (\n      <React.Fragment>\n        <Container style={styles.settingsHeaderContainer}>\n          <Text tag='h4' style={styles.settingsHeaderTextStyle}>Settings</Text>\n          {\n            this.state.isEditing\n              ? <Button onClick={this.onCancelEdit} style={styles.editSettingsButton} secondary>Cancel<i className={`icon ion-md-close ${cx(styles.editIcon)}`} /></Button>\n              : <Button onClick={this.onEdit} style={styles.editSettingsButton} primary>Edit<i className={`icon ion-md-arrow-round-forward ${cx(styles.editIcon)}`} /></Button>\n          }\n        </Container>\n        {\n          this.state.isEditing\n            ? <EditSettingsForm user={user} onCancel={this.onCancelEdit} onSubmit={this.onEditSubmit} />\n            : <SettingsBody user={user} />\n        }\n      </React.Fragment>\n    )\n  }\n  render () {\n    return (\n      <Container fluid style={styles.mainContainer}>\n        <Container style={styles.cardContainer}>\n          {this.props.user ? this._renderUserDetails(this.props.user) : this._renderLoading()}\n        </Container>\n      </Container>\n    )\n  }\n}\n\nSettings.propTypes = {\n  getAuthUser: PropTypes.func,\n  user: PropTypes.object\n}\n\nSettingsBody.propTypes = {\n  user: PropTypes.object\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.auth.user\n})\n\nexport default connect(mapStateToProps, { getAuthUser })(Settings)\n","import { css } from 'react-emotion'\nimport { colors, breakpoints } from '../../styles'\n\nconst mainContainer = css`\n  width: 100%;\n  min-height: calc(100vh - 4.5em);\n  align-items: center;\n  border-bottom: 1px solid ${colors.lightGray};\n`\n\nconst cardContainer = css`\n  width: 50em;\n  margin-top: 3em;\n  margin-bottom: 3em;\n  background-color: ${colors.white};\n  border-radius: 4px;\n  padding: 2em 3em;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    width: 100%;\n    margin: 0;\n    border-radius: 0;\n    padding: 1.5em;\n  }\n`\n\nconst loadingContainer = css`\n  align-items: center;\n  justify-content: center;\n  padding: 5em;\n`\n\nconst settingsHeaderContainer = css`\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding-bottom: 1em;\n  border-bottom: .5px dashed ${colors.defaultBorder};\n`\n\nconst settingsHeaderTextStyle = css`\n  font-weight: 600;\n  margin-bottom: -0.4em;\n`\n\nconst editSettingsButton = css`\n  font-weight: 600;\n  font-size: 1em;\n`\n\nconst editIcon = css`\n  margin-left: 0.75em;\n`\n\nconst verifiedIcon = css`\n  margin-left: 0.3em;\n`\n\nconst settingsBodyContainer = css`\n  margin-top: 1em;\n`\n\nconst settingsItemContainer = css`\n  padding: 2em 0 2em 0;\n  border-bottom: .5px dotted ${colors.defaultBorder};\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n\n  &:last-child {\n    border-bottom: 0;\n  }\n\n  @media (max-width: ${breakpoints.mobile}) {\n    flex-direction: column;\n    align-items: flex-start;\n    padding: 1em 0;\n  }\n`\n\nconst editButtonContainer = css`\n  justify-content: flex-end;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    flex-direction: row;\n  }\n`\n\nconst settingsItemValue = css`\n  font-weight: 500;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    font-size: 1em;\n  }\n`\n\nconst settingsItemLabel = css`\n  @media (max-width: ${breakpoints.tablet}) {\n    font-size: 1em;\n}\n`\n\nconst textInputStyle = css`\n  width: 70%;\n  margin-left: auto;\n  margin-right: -1em;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    width: 100%;\n    margin-right: 0;\n  }\n`\n\nconst editAddressSaveButton = css`\n@media (max-width: ${breakpoints.tablet}) {\n  font-size: 1em;\n}\n`\n\nconst editAddressCancelButton = css`\n  @media (max-width: ${breakpoints.tablet}) {\n    font-size: 1em;\n  }\n`\n\nconst styles = {\n  mainContainer,\n  cardContainer,\n  loadingContainer,\n  settingsHeaderContainer,\n  settingsHeaderTextStyle,\n  editSettingsButton,\n  editAddressSaveButton,\n  editAddressCancelButton,\n  settingsBodyContainer,\n  editButtonContainer,\n  editIcon,\n  verifiedIcon,\n  settingsItemContainer,\n  settingsItemLabel,\n  settingsItemValue,\n  textInputStyle\n}\n\nexport default styles\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { cx } from 'emotion'\nimport { Formik } from 'formik'\nimport * as Yup from 'yup'\n\nimport Container from '../../../components/Container'\nimport Input from '../../../components/Input'\nimport Button from '../../../components/Button'\nimport Spinner from '../../../components/Spinner'\n\nimport styles from './styles'\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Not a valid email')\n    .required('Email is required'),\n  name: Yup.string()\n    .min(3)\n    .required('Name is required'),\n  username: Yup.string()\n    .min(4)\n    .required('Username is required'),\n  password: Yup.string()\n    .min(6)\n    .required('Password is required'),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref('password', null)], 'Passwords must match')\n    .required('Confirm password is required')\n})\n\nconst SignupForm = ({ onSubmit, hostRef }) => {\n  return (\n    <Container hostRef={hostRef} style={styles.formContainer}>\n      <Formik\n        initialValues={{ email: '', username: '', password: '', confirmPassword: '', name: '' }}\n        onSubmit={onSubmit}\n        validationSchema={validationSchema}\n        render={({\n          values,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n          errors,\n          isValid,\n          isSubmitting\n        }) => {\n          return (\n            <React.Fragment>\n              <Input\n                label='Full Name'\n                name='name'\n                placeholder='Doggo Best'\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.name}\n                error={touched.name && errors.name}\n              />\n              <Input\n                label='Username'\n                name='username'\n                placeholder='awesome-doggo'\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.username}\n                error={touched.username && errors.username}\n              />\n              <Input\n                label='Email'\n                name='email'\n                type='email'\n                placeholder='specksy@doggo.co'\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.email}\n                error={touched.email && errors.email}\n              />\n              <Input\n                label='Password'\n                name='password'\n                type='password'\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.password}\n                error={touched.password && errors.password}\n              />\n              <Input\n                label='Confirm Password'\n                name='confirmPassword'\n                type='password'\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.confirmPassword}\n                error={touched.confirmPassword && errors.confirmPassword}\n              />\n              <Container style={styles.buttonContainer}>\n                <Button\n                  primary\n                  disabled={!isValid || isSubmitting}\n                  type='submit'\n                  style={styles.submitButton}\n                  onClick={handleSubmit}\n                >\n                  Submit {isSubmitting && <span className={cx(styles.spinnerIcon)}><Spinner size={20} width={4} /></span>}\n                </Button>\n                <Button onClick={handleReset} link style={styles.cancelButton}>Reset</Button>\n              </Container>\n            </React.Fragment>\n          )\n        }} />\n    </Container>\n  )\n}\n\nSignupForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  hostRef: PropTypes.any\n}\n\nexport default SignupForm\n","import { css } from 'react-emotion'\nimport { colors, breakpoints } from '../../../styles'\nimport { lighten } from 'polished'\n\nconst formContainer = css`\n  padding: 0 2em;\n  width: 100%;\n  label: signup-body-form-cntr;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    padding: 0;\n  }\n`\n\nconst buttonContainer = css`\n  flex-direction: row;\n  justify-content: center;\n  padding-top: 1em;\n`\n\nconst submitButtonIcon = css`\n  padding-left: 0.5em;\n  label: signup-submit-button-icon;\n`\n\nconst submitButton = css`\n  font-size: 1.3em;\n  margin-right: 1em;\n  label: signup-submit-button;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    font-size: 1em;\n  }\n`\n\nconst spinnerIcon = css`\n  margin-left: 0.2em;\n`\n\nconst cancelButton = css`\n  background-color: transparent;\n  color: ${colors.blackText};\n  label: signup-cancel-button;\n\n  &:hover {\n    color: ${lighten(0.4, colors.blackText)};\n  }\n\n  @media (max-width: ${breakpoints.tablet}) {\n    font-size: 1em;\n  }\n`\n\nconst styles = {\n  formContainer,\n  buttonContainer,\n  submitButtonIcon,\n  submitButton,\n  cancelButton,\n  spinnerIcon\n}\n\nexport default styles\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Container from '../../../components/Container'\nimport Text from '../../../components/Text'\n\nimport styles from './styles'\n\nconst SignupSuccess = ({ hostRef }) => {\n  return (\n    <Container hostRef={hostRef} style={styles.successContainer}>\n      <Text tag='h1' style={styles.successHeaderText}>Thank you for signing up.</Text>\n      <Text tag='h5' style={styles.successInfoText}>We've sent you a verification link on your email. Please click verify in the email to continue.</Text>\n    </Container>\n  )\n}\n\nSignupSuccess.propTypes = {\n  hostRef: PropTypes.any\n}\n\nexport default SignupSuccess\n","import { css } from 'react-emotion'\nimport { breakpoints } from '../../../styles'\n\nconst successContainer = css`\n  padding: 0 4em;\n  width: 100%;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    padding: 0;\n  }\n`\n\nconst successHeaderText = css`\n  text-align: left;\n  font-weight: 600;\n  margin-bottom: 2em;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    font-size: 1.5em;\n    margin-top: 1em;\n    margin-bottom: 1em;\n  }\n`\n\nconst successInfoText = css`\n@media (max-width: ${breakpoints.tablet}) {\n  font-size: 1em;\n  margin-bottom: 1em;\n}\n`\n\nconst styles = {\n  successContainer,\n  successHeaderText,\n  successInfoText\n}\n\nexport default styles\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport posed from 'react-pose'\nimport { Link, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { cx } from 'emotion'\n\nimport SignupForm from './SignupForm'\nimport SignupSuccess from './SignupSuccess'\nimport Container from '../../components/Container'\nimport Text from '../../components/Text'\n\nimport { signup as signupAction } from '../../store/actions/auth'\nimport API from '../../api'\n\nimport styles from './styles'\n\nclass Signup extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      isSignupSuccess: false\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  async handleSubmit (values, bag) {\n    try {\n      const data = await API.signup(values)\n      bag.setSubmitting(false)\n      this.setState({ isSignupSuccess: true })\n      this.props.signupAction(data.user)\n    } catch (e) {\n      console.log(e.response)\n      bag.setSubmitting(false)\n      bag.setErrors(API.setErrors(e.response.data.errors.details.errors))\n    }\n  }\n\n  render () {\n    if (this.props.isAuthenticated && !this.state.isSignupSuccess) {\n      return (<Redirect to='/profile' />)\n    }\n\n    const PoseSignupForm = posed(SignupForm)({\n      visible: { opacity: 1 },\n      invisible: { opacity: 0, display: 'none' }\n    })\n\n    const PoseSignupSuccess = posed(SignupSuccess)({\n      visible: { opacity: 1 },\n      invisible: { opacity: 0, display: 'none' }\n    })\n\n    return (\n      <Container fluid style={styles.mainContainer}>\n        <Container style={styles.heroContainer}>\n          <Container style={styles.heroLogoContainer}>\n            <a href='/'><img alt='bitcharge-logo' className={cx(styles.logoImageStyle)} src='https://res.cloudinary.com/bitcharge/image/upload/v1532990484/icons/bitcharge-logo-white.png' /></a>\n          </Container>\n          <Container style={styles.heroTextContainer}>\n            <img alt='signup-avatar' className={cx(styles.signupAvatarIconStyle)} src='https://res.cloudinary.com/bitcharge/image/upload/v1535940306/dog-avatar.png' />\n            <Text tag='h3' style={styles.heroText}>Let's get you set up.</Text>\n          </Container>\n          <Container style={styles.heroFooterContainer}>\n            <Text tag='h6'>Already have an account. <Link to='/login' className={cx(styles.LoginLink)}>Login</Link></Text>\n          </Container>\n        </Container>\n        <Container style={styles.bodyContainer}>\n          <PoseSignupForm pose={this.state.isSignupSuccess ? 'invisible' : 'visible'} onSubmit={this.handleSubmit} />\n          <PoseSignupSuccess pose={this.state.isSignupSuccess ? 'visible' : 'invisible'} />\n        </Container>\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.isAuthenticated\n  }\n}\n\nSignup.propTypes = {\n  signupAction: PropTypes.func,\n  isAuthenticated: PropTypes.bool\n}\n\nexport default connect(mapStateToProps, { signupAction })(Signup)\n","import { css } from 'react-emotion'\nimport { colors, breakpoints } from '../../styles'\n\nconst mainContainer = css`\n  background-color: ${colors.white};\n  label: signup-main-cntr;\n  flex-direction: row;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    flex-direction: column;\n  }\n`\n\nconst heroContainer = css`\n  flex: 2;\n  background-color: ${colors.primary};\n  color: ${colors.white};\n  padding: 0 2em;\n  label: signup-hero-cntr;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid ${colors.lightGray};\n\n  @media (max-width: ${breakpoints.tablet}) {\n    flex: none;\n  }\n`\n\nconst bodyContainer = css`\n  flex: 5;\n  align-items: center;\n  justify-content: center;\n  padding: 0 2em;\n  height: 100vh;\n  label: signup-body-cntr;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    padding: 1em;\n    height: auto;\n  }\n`\n\nconst heroLogoContainer = css`\n  padding-top: 1em;\n`\n\nconst logoImageStyle = css`\n  width: 150px;\n  height: auto;\n`\n\nconst signupAvatarIconStyle = css`\n  width: 150px;\n  height: 150px;\n  border-radius: 50%;\n  margin-bottom: .5em;\n  border: 2px solid ${colors.white};\n\n  @media (max-width: ${breakpoints.tablet}) {\n    width: 125px;\n    height: 125px;\n  }\n`\n\nconst heroText = css`\n  margin-top: 1em;\n  font-weight: 600;\n  text-align: center;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    margin-top: .5em;\n    font-size: 1.5em;\n  }\n`\n\nconst heroTextContainer = css`\n  flex: 1;\n  padding: 1em;\n  label: signup-hero-text-cntr;\n  align-items: center;\n  justify-content: center;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    flex: none;\n    margin-top: 1em;\n  }\n`\n\nconst heroFooterContainer = css`\n  margin-bottom: 1em;\n`\n\nconst heroImageContainer = css`\n  flex: 1;\n  padding: 4em 4em 4em 2em;\n  align-items: center;\n  justify-content: center;\n  label: signup-hero-image-cntr;\n`\n\nconst heroHeaderText = css`\n  font-weight: 500;\n  margin-bottom: 1em;\n  label: home-hero-header-text;\n`\n\nconst heroSubHeaderText = css`\n  line-height: 1.5em;\n  font-weight: 400;\n  margin-bottom: 1.5em;\n  label: home-hero-header-subtext;\n`\n\nconst heroImage = css`\n  max-width: 100%;\n  height: auto;\n  label: home-hero-image;\n`\n\nconst LoginLink = css`\n  font-weight: 600;\n  display: inline-block;\n  text-decoration: none;\n  color: ${colors.white};\n  padding: .3em;\n  border-radius: .1em;\n  label: signup-login-link;\n  transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;\n\n  &:hover {\n    background-color: ${colors.white};\n    color: ${colors.primary};\n  }\n`\n\nconst styles = {\n  mainContainer,\n  bodyContainer,\n  heroContainer,\n  heroLogoContainer,\n  logoImageStyle,\n  heroTextContainer,\n  heroText,\n  heroFooterContainer,\n  signupAvatarIconStyle,\n  heroImageContainer,\n  heroHeaderText,\n  heroSubHeaderText,\n  heroImage,\n  LoginLink\n}\n\nexport default styles\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport posed from 'react-pose'\nimport { cx } from 'emotion'\nimport qs from 'qs'\n\nimport Container from '../../components/Container'\nimport Text from '../../components/Text'\nimport Button from '../../components/Button'\n\nimport { confirmEmail as confirmEmailAction } from '../../store/actions/auth'\nimport API from '../../api'\n\nimport styles from './styles'\n\nconst SignupConfirming = ({ hostRef }) => {\n  return (\n    <Container hostRef={hostRef} style={styles.confirmationContainer}>\n      <Text tag='h1' style={styles.confirmationHeaderText}>We are confirming your email...</Text>\n    </Container>\n  )\n}\n\nconst SignupConfirmationError = ({ hostRef, isAuthenticated, handleVerify, resentVerification }) => {\n  return (\n    <Container hostRef={hostRef} style={styles.confirmationContainer}>\n      <Text tag='h1' style={styles.confirmationHeaderText}>Something went wrong</Text>\n      <Text tag='h5'>Something went wrong while verifying your email. {isAuthenticated\n        ? `Try resending the verification email`\n        : `Login to resend the verification email.`}</Text>\n      <Container style={styles.buttonContainer}>\n        {isAuthenticated\n          ? <Button tag={Link} to='/address/new' primary style={styles.submitButton}>Resend Verifcation</Button>\n          : <Button tag={Link} to='/login' primary style={styles.submitButton}>Login Now</Button>\n        }\n        {isAuthenticated && <Button tag={Link} to='/profile' link style={styles.cancelButton}>Skip</Button>}\n      </Container>\n      {(resentVerification.action && resentVerification.success) && <Text tag='h5' style={styles.resentVerificationText}>Verification mail sent successfully.</Text> }\n    </Container>\n  )\n}\n\nconst SignupConfirmed = ({ hostRef, isAuthenticated }) => {\n  return (\n    <Container hostRef={hostRef} style={styles.confirmationContainer}>\n      <Text tag='h1' style={styles.confirmationHeaderText}>Woohoo! You're all set.</Text>\n      <Text tag='h5' style={styles.confirmationInfoText}>Thank you for verifying your account. {isAuthenticated\n        ? `You can now start adding your addresses.`\n        : `You need to login to start adding your addresses.`}\n      </Text>\n      <Container style={styles.buttonContainer}>\n        {isAuthenticated\n          ? <Button tag={Link} to='/address/new' primary style={styles.submitButton}>Add an Address</Button>\n          : <Button tag={Link} to='/login' primary style={styles.submitButton}>Login Now</Button>\n        }\n        {isAuthenticated && <Button tag={Link} to='/profile' link style={styles.cancelButton}>Skip</Button>}\n      </Container>\n    </Container>\n  )\n}\n\nconst SignupConfirmationExpired = ({ hostRef, isAuthenticated, handleVerify, resentVerification }) => {\n  const { action, success, error } = resentVerification\n  return (\n    <Container hostRef={hostRef} style={styles.confirmationContainer}>\n      <Text tag='h1' style={styles.confirmationHeaderText}>Something went wrong</Text>\n      <Text tag='h5'>Your verification email is expired. {isAuthenticated\n        ? `Try resending the verification email`\n        : `Login to resend the verification email.`}</Text>\n      <Container style={styles.buttonContainer}>\n        {isAuthenticated\n          ? <Button onClick={handleVerify} primary style={styles.submitButton} disabled={(action && !(success || error))}>Resend Verifcation</Button>\n          : <Button tag={Link} to='/login' primary style={styles.submitButton}>Login Now</Button>\n        }\n      </Container>\n      {(action && success) && <Text tag='h5' style={styles.resentVerificationText}>Verification mail sent successfully.</Text> }\n    </Container>\n  )\n}\n\nclass SignupConfirmation extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      isConfirmed: false,\n      isConfirming: false,\n      isExpired: false,\n      isError: false,\n      resentVerification: false,\n      resentVerificationSuccess: false,\n      resentVerificationError: false\n    }\n\n    this.resendVerificationMail = this.resendVerificationMail.bind(this)\n  }\n\n  async componentDidMount () {\n    const query = qs.parse(this.props.location.search.split('?')[1])\n    try {\n      const response = await API.confirmEmail(query.confirmationCode)\n      this.setState({ isConfirming: false })\n      if (response) {\n        this.setState({ isConfirmed: true })\n        this.props.confirmEmailAction(true)\n      }\n    } catch (error) {\n      this.setState({ isConfirming: false })\n      if (error.response.status === 410) {\n        this.setState({ isExpired: true })\n      }\n      this.setState({ isError: true })\n    }\n  }\n\n  async resendVerificationMail () {\n    try {\n      await API.verifyEmail()\n      this.setState({ resentVerification: true })\n    } catch (e) {\n      console.log(e)\n      this.setState({ resentVerification: true, resentVerificationError: true })\n    }\n  }\n\n  render () {\n    const PoseSignupConfirming = posed(SignupConfirming)({\n      visible: { opacity: 1 },\n      invisible: { opacity: 0, display: 'none' }\n    })\n\n    const PoseSignupConfirmed = posed(SignupConfirmed)({\n      visible: { opacity: 1 },\n      invisible: { opacity: 0, display: 'none' }\n    })\n\n    const PoseSignupConfirmError = posed(SignupConfirmationError)({\n      visible: { opacity: 1 },\n      invisible: { opacity: 0, display: 'none' }\n    })\n\n    const PoseSignupConfirmExpired = posed(SignupConfirmationExpired)({\n      visible: { opacity: 1 },\n      invisible: { opacity: 0, display: 'none' }\n    })\n\n    const resentVerification = {\n      action: true,\n      success: this.state.resentVerificationSuccess,\n      error: this.state.resentVerificationError\n    }\n    return (\n      <Container fluid style={styles.mainContainer}>\n        <Container style={styles.heroContainer}>\n          <Container style={styles.heroLogoContainer}>\n            <a href='/'><img alt='bitcharge-logo' className={cx(styles.logoImageStyle)} src='https://res.cloudinary.com/bitcharge/image/upload/v1532990484/icons/bitcharge-logo-white.png' /></a>\n          </Container>\n          <Container style={styles.heroTextContainer}>\n            <img className={cx(styles.heroAvatarIconStyle)} alt='signup-confirmation-avatar' src='https://res.cloudinary.com/bitcharge/image/upload/v1535940306/fox-avatar.png' />\n            <Text tag='h3' style={styles.heroText}>You're almost there.</Text>\n          </Container>\n          { !this.props.isAuthenticated && (\n            <Container style={styles.heroFooterContainer}>\n              <Text tag='h6'>Already have an account. <Link to='/login' className={cx(styles.LoginLink)}>Login</Link></Text>\n            </Container>\n          )\n          }\n        </Container>\n        <Container style={styles.bodyContainer}>\n          <PoseSignupConfirming pose={this.state.isConfirming ? 'visible' : 'invisible'} />\n          <PoseSignupConfirmed pose={this.state.isConfirmed ? 'visible' : 'invisible'} isAuthenticated={this.props.isAuthenticated} />\n          <PoseSignupConfirmError pose={this.state.isError ? 'visible' : 'invisible'} isAuthenticated={this.props.isAuthenticated} handleVerify={this.resendVerificationMail} resentVerification={resentVerification} />\n          <PoseSignupConfirmExpired pose={this.state.isExpired ? 'visible' : 'invisible'} isAuthenticated={this.props.isAuthenticated} handleVerify={this.resendVerificationMail} resentVerification={resentVerification} />\n        </Container>\n      </Container>\n    )\n  }\n}\n\nSignupConfirmed.propTypes = {\n  hostRef: PropTypes.any,\n  isAuthenticated: PropTypes.bool\n}\n\nSignupConfirming.propTypes = {\n  hostRef: PropTypes.any\n}\n\nSignupConfirmationError.propTypes = {\n  hostRef: PropTypes.any,\n  isAuthenticated: PropTypes.bool,\n  handleVerify: PropTypes.func,\n  resentVerification: PropTypes.func\n}\n\nSignupConfirmationExpired.propTypes = {\n  hostRef: PropTypes.any,\n  isAuthenticated: PropTypes.bool,\n  handleVerify: PropTypes.func,\n  resentVerification: PropTypes.func\n}\n\nSignupConfirmation.propTypes = {\n  location: PropTypes.any,\n  confirmEmailAction: PropTypes.func,\n  isAuthenticated: PropTypes.bool\n}\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, { confirmEmailAction })(SignupConfirmation)\n","import { css } from 'react-emotion'\nimport { colors, breakpoints } from '../../styles'\nimport { lighten } from 'polished'\n\nconst mainContainer = css`\n  background-color: ${colors.white};\n  label: signup-cnf-main-cntr;\n  flex-direction: row;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    flex-direction: column;\n  }\n`\n\nconst heroContainer = css`\n  flex: 2;\n  background-color: ${colors.primary};\n  color: ${colors.white};\n  padding: 0 2em;\n  label: signup-cnf-hero-cntr;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid ${colors.lightGray};\n\n  @media (max-width: ${breakpoints.tablet}) {\n    flex: none;\n  }\n`\n\nconst bodyContainer = css`\n  flex: 5;\n  align-items: center;\n  justify-content: center;\n  padding: 2em;\n  height: 100vh;\n  label: signup-cnf-body-cntr;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    padding: 1em;\n    height: auto;\n  }\n`\n\nconst heroLogoContainer = css`\n  padding-top: 1em;\n`\n\nconst logoImageStyle = css`\n  width: 150px;\n  height: auto;\n`\n\nconst heroAvatarIconStyle = css`\n  width: 150px;\n  height: 150px;\n  border-radius: 50%;\n  margin-bottom: .5em;\n  border: 2px solid ${colors.white};\n\n  @media (max-width: ${breakpoints.tablet}) {\n    width: 125px;\n    height: 125px;\n  }\n`\n\nconst heroText = css`\n  margin-top: 1em;\n  font-weight: 600;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    font-size: 1.5em;\n    text-align: center;\n  }\n`\n\nconst heroTextContainer = css`\n  flex: 1;\n  padding: 1em;\n  label: signup-hero-text-cntr;\n  align-items: center;\n  justify-content: center;\n`\n\nconst heroFooterContainer = css`\n  margin-bottom: 1em;\n`\n\nconst LoginLink = css`\n  font-weight: 600;\n  display: inline-block;\n  text-decoration: none;\n  color: ${colors.white};\n  padding: .3em;\n  border-radius: .1em;\n  label: signup-login-link;\n  transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;\n\n  &:hover {\n    background-color: ${colors.white};\n    color: ${colors.primary};\n  }\n`\n\nconst confirmationContainer = css`\n  padding: 0 4em;\n  width: 100%;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    padding: 1em;\n  }\n`\n\nconst confirmationHeaderText = css`\n  text-align: left;\n  font-weight: 600;\n  margin-bottom: 2em;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    font-size: 1.5em;\n    margin-bottom: 1em;\n  }\n`\n\nconst confirmationInfoText = css`\n@media (max-width: ${breakpoints.tablet}) {\n  font-size: 1em;\n}\n`\n\nconst buttonContainer = css`\n  margin-top: 1em;\n  flex-direction: row;\n  justify-content: left;\n  padding-top: 1em;\n`\n\nconst submitButton = css`\n  font-size: 1.3em;\n  label: signup-confirm-submit-button;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    font-size: 1em;\n    padding-left: .75em;\n    padding-right: .75em;\n  }\n`\n\nconst cancelButton = css`\n  background-color: transparent;\n  color: ${colors.blackText};\n  label: login-cancel-button;\n\n  &:hover {\n    color: ${lighten(0.4, colors.blackText)};\n  }\n\n  @media (max-width: ${breakpoints.tablet}) {\n    font-size: 1em;\n  }\n`\n\nconst resentVerificationText = css`\n  margin-top: 1.5em;\n  font-weight: 500;\n`\n\nconst styles = {\n  mainContainer,\n  heroContainer,\n  bodyContainer,\n  heroText,\n  heroAvatarIconStyle,\n  heroTextContainer,\n  heroFooterContainer,\n  heroLogoContainer,\n  logoImageStyle,\n  LoginLink,\n  confirmationContainer,\n  confirmationHeaderText,\n  confirmationInfoText,\n  buttonContainer,\n  submitButton,\n  cancelButton,\n  resentVerificationText\n}\n\nexport default styles\n","import React, { Component } from 'react'\nimport { cx } from 'emotion'\nimport { Link } from 'react-router-dom'\nimport Media from 'react-media'\n\nimport Container from '../../components/Container'\nimport Text from '../../components/Text'\nimport Navbar from '../../components/Navbar'\nimport Footer from '../../components/Footer'\n\nimport { ScrollToTopOnMount } from '../../components/Scroll'\n\nimport styles from './styles'\nimport { breakpoints } from '../../styles'\n\nclass Privacy extends Component {\n  render () {\n    return (\n      <Container fluid fullHeight style={styles.mainContainer}>\n        <ScrollToTopOnMount />\n        <Navbar />\n        <Container fluid style={styles.bodyContainer}>\n          <Container fluid style={styles.headerContainer}>\n            <Text tag='h1' style={styles.headerTextStyle}>Terms of Use</Text>\n            <Media query={`(max-width: ${breakpoints.tablet})`}>\n              {matches => matches ? <Container style={styles.workItemTextBorder} /> : null}\n            </Media>\n          </Container>\n          <Container style={styles.detailsContainer}>\n            <Container style={styles.sectionContainer}>\n              <Text tag='h4' style={styles.sectionHeader}>\n                Welcome to Bitcharge!\n              </Text>\n              <Text style={styles.bodyText}>\n                By using Bitcharge, you are allowing to be bound by our website’s Terms and Conditions, all relevant laws and regulations, and you are liable to agree with any applicable local laws. These are Bitcharge’s terms of use and apply to all users of this website and mobile applications.\n                <br /><br />‘We’, ‘our’ or ‘us’ refers to Bitcharge. You will be forbidden from using this site if you do not agree with any of these terms. Copyright and trademark law protects all materials used on this website.\n                <br /><br />You also agree to our <Link to='/' className={`${cx(styles.linkText)}`}>privacy policy</Link>. We are not accountable for the quality, timing or legitimacy of content. We may make changes to these terms: if these changes are substantial and affect your privileges unfavourably, we will let you know by announcing the details on the site or via email before the changes come into effect.\n                <br /><br />If you continue to use Bitcharge after any modifications to the terms, it will indicate that you have accepted the revised terms.\n              </Text>\n            </Container>\n            <Container style={styles.sectionContainer}>\n              <Text tag='h4' style={styles.sectionHeader}>\n                Use License\n              </Text>\n              <Text style={styles.bodyText}>\n                You are liable for all the activity on your profile. We can terminate your account if we find any breach in terms.\n                <br /><br />You should not break any law or prompt others to break the law.\n                <br />We reserve the right to force forfeiture of any username under circumstances that we deem necessary.\n                <br />Do not vex or bully others, or support violence or hatred towards others.\n                <br />Do not share others’ personal information or differently abuse it. Users with access to their Bitcharge personal information should not use it for anything irrelevant to Bitcharge.\n                <br />Do not post messages that are false or differently misleading.\n                <br />Do not generate an account to stop others from using the name or to trade the name.\n                <br />Do not modify or copy the materials on this website. You can only utilise the materials for any commercial purpose, or for any public display.\n                <br />Do not attempt to decompile or modify engineer any software included on Bitcharge site.\n                <br />You are not supposed to spam others and cannot use Bitcharge to host or distribute, malicious or destructive software.\n                <br />Do not use the public details of a user or a business found on Bitcharge for anything illegal or malicious.\n                <br />This license will automatically terminate if you infringe any of these restrictions and may be terminated by Bitcharge at any time.\n              </Text>\n            </Container>\n            <Container style={styles.sectionContainer}>\n              <Text tag='h4' style={styles.sectionHeader}>\n                Indemnity\n              </Text>\n              <Text style={styles.bodyText}>\n                You have to reimburse us for all damages and liabilities, including legal fees, which may result from these terms or relate to your use of Bitcharge. We maintain the right to exclusive control over the defense of a claim included in this clause. If we exercise this right, then you have to assist us in our defense. Your responsibility to indemnify under this clause also refers to our affiliates, officers, directors, agents, employees, and third-party service providers.\n              </Text>\n            </Container>\n            <Container style={styles.sectionContainer}>\n              <Text tag='h4' style={styles.sectionHeader}>\n                Disclaimer\n              </Text>\n              <Text style={styles.bodyText}>\n                Bitcharge is presented “as is” and without warranty of any sort. Any warranty of merchantability, fitness for a specific purpose, non-infringement, and any other warranty is eliminated to the greatest extent as authorised by law. Besides, Bitcharge does not warrant or present any representations concerning the correctness, possible results, or authenticity of the use of the elements on its Internet web site or otherwise compared to such materials or on any sites associated with this site.\n                <br /><br />Bitcharge does not take responsibility for the accuracy or precision of user-generated content. Bitcharge does not directly or indirectly endorse or support any word or claim made by any of its users.\n              </Text>\n            </Container>\n            <Container style={styles.sectionContainer}>\n              <Text tag='h4' style={styles.sectionHeader}>\n                Limitations\n              </Text>\n              <Text style={styles.bodyText}>\n                Bitcharge is not accountable to you for any concomitant, consequential or vindictive damages resulting out of these terms, or attempted use or your use of Bitcharge. We will not be responsible for any damages arising out of the inability to use the materials on Bitcharge's site even if Bitcharge representative has been informed orally or in writing of the occurrence of such damage. For this clause “we” and “our” is established to include our members, officers, agents, directors, employees, and third-party service providers.\n              </Text>\n            </Container>\n            <Container style={styles.sectionContainer}>\n              <Text tag='h4' style={styles.sectionHeader}>\n                Revisions and Errata\n              </Text>\n              <Text style={styles.bodyText}>\n                Bitcharge website may contain elements which comprise of technical, typographical, or sometimes photographic errors. We do not guarantee that any of the contents on our site are genuine, comprehensive, or contemporary.\n                <br /><br />Bitcharge can make changes to the materials received on its website at any time without notification. However, we do not make any commitment to refresh the contents.\n              </Text>\n            </Container>\n            <Container style={styles.sectionContainer}>\n              <Text tag='h4' style={styles.sectionHeader}>\n                Links\n              </Text>\n              <Text style={styles.bodyText}>\n                Bitcharge has not studied all of the sites associated with its Internet web site and is not liable for the elements of any such linked site. The addition of any link does not indicate approval by Bitcharge site. Handling of any such linked web site is at the user's own risk.\n              </Text>\n            </Container>\n          </Container>\n        </Container>\n        <Footer />\n      </Container>\n    )\n  }\n}\n\nexport default Privacy\n","import { css } from 'react-emotion'\nimport { colors, breakpoints } from '../../styles'\nimport { lighten, darken } from 'polished'\n\nconst mainContainer = css`\n  background-color: ${colors.background};\n  label: home-main-cntr;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    background-color: ${colors.white};\n  }\n`\n\nconst bodyContainer = css`\n  min-height: calc(100vh - 4.5em);\n  border-top: 2px solid ${colors.primary};\n  align-items: center;\n  label: home-body-cntr;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    border-bottom: 1px solid ${colors.defaultBorder};\n  }\n`\n\nconst workItemTextBorder = css`\n  height: 7px;\n  width: 60%;\n  margin-top: .5em;\n  background-color: ${colors.secondary};\n\n  @media (max-width: ${breakpoints.tablet}) {\n    height: 6px;\n  }\n`\n\nconst headerContainer = css`\n  margin-top: 5em;\n  margin-bottom: 3em;\n  align-items: center;\n  justify-content: center;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    margin-top: 3em;\n    margin-bottom: 0;\n  }\n`\n\nconst headerTextStyle = css`\n  font-weight: 600;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    font-weight: 500;\n    font-size: 2em;\n  }\n`\n\nconst detailsContainer = css`\n  width: 65%;\n  margin-top: 3em;\n  margin-bottom: 5em;\n  background-color: ${colors.white};\n  border-radius: 5px;\n  border: 1px solid ${lighten(0.1, colors.defaultBorder)};\n  padding: 4em 5em;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    width: 100%;\n    margin: 0;\n    border-radius: 0;\n    padding: 1.5em;\n    border: 0;\n  }\n`\n\nconst sectionContainer = css`\n  padding: 2em 0;\n  border-bottom: 1px dashed ${colors.defaultBorder};\n\n  &:last-child {\n    border-bottom: 0;\n  }\n`\n\nconst sectionHeader = css`\n  font-weight: 500;\n  margin: 1em 0 1.5em 0;\n`\n\nconst bodyText = css`\n  color: ${lighten(0.2, colors.blackText)};\n  line-height: 1.5;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    width: 100%;\n    font-size: 1em;\n  }\n`\n\nconst linkText = css`\n  color: ${colors.linkText};\n  font-weight: 500;\n  text-decoration: none;\n  transition: all 0.15s ease-out;\n\n  &:hover {\n    color: ${darken(0.2, colors.linkText)};\n  }\n`\n\nconst styles = {\n  mainContainer,\n  bodyContainer,\n  detailsContainer,\n  headerContainer,\n  workItemTextBorder,\n  headerTextStyle,\n  sectionContainer,\n  sectionHeader,\n  bodyText,\n  linkText\n}\n\nexport default styles\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Formik } from 'formik'\nimport * as Yup from 'yup'\nimport { cx } from 'emotion'\n\nimport Container from '../../../components/Container'\nimport Text from '../../../components/Text'\nimport Button from '../../../components/Button'\nimport Input from '../../../components/Input'\nimport Spinner from '../../../components/Spinner'\n\nimport styles from './styles'\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2),\n  intro: Yup.string()\n    .min(1)\n})\n\nconst EditProfileForm = ({ onSubmit, user }) => {\n  return (\n    <Formik\n      initialValues={{ name: user.name, intro: user.intro || null }}\n      onSubmit={onSubmit}\n      validationSchema={validationSchema}\n      render={({\n        values,\n        handleChange,\n        handleSubmit,\n        handleBlur,\n        handleReset,\n        errors,\n        touched,\n        isValid,\n        isSubmitting\n      }) => {\n        return (\n          <Container style={styles.formBodyContainer}>\n            <Container style={styles.formItemContainer}>\n              <Text tag='h5' style={styles.formItemLabel}>Full Name</Text>\n              <Input\n                name='name'\n                inputContainerStyle={styles.inputContainerStyle}\n                noErrorText\n                inputStyle={styles.textInputStyle}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.name}\n                error={touched.name && errors.name}\n              />\n            </Container>\n            <Container style={styles.formItemContainer}>\n              <Text tag='h5' style={styles.formItemLabel}>Intro</Text>\n              <Input\n                name='intro'\n                noErrorText\n                type='textarea'\n                inputContainerStyle={styles.inputContainerStyle}\n                inputStyle={styles.textInputStyle}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.intro}\n                error={touched.intro && errors.intro}\n              />\n            </Container>\n            <Container style={cx(styles.formItemContainer, styles.formButtonContainer)}>\n              <Button\n                primary\n                disabled={!isValid || isSubmitting}\n                onClick={handleSubmit}\n                style={styles.formButtonStyle}\n                type='submit'\n              >\n                Save {isSubmitting && <span className={cx(styles.spinnerIcon)}><Spinner size={20} width={4} /></span>}\n              </Button>\n              <Button\n                onClick={handleReset}\n                style={styles.formButtonStyle}\n                link\n              >\n                Cancel\n              </Button>\n            </Container>\n          </Container>\n        )\n      }} />\n  )\n}\n\nEditProfileForm.propTypes = {\n  onSubmit: PropTypes.func,\n  user: PropTypes.object\n}\n\nexport default EditProfileForm\n","import { css } from 'react-emotion'\nimport { colors, breakpoints } from '../../../styles'\n\nconst formBodyContainer = css`\n  margin-top: 1em;\n`\n\nconst formItemContainer = css`\n  padding: 2em 0 2em 0;\n  border-bottom: .5px dotted ${colors.defaultBorder};\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n\n  &:last-child {\n    border-bottom: 0;\n  }\n\n  @media (max-width: ${breakpoints.tablet}) {\n    flex-direction: column;\n    align-items: flex-start;\n    padding: 1em 0;\n  }\n`\n\nconst formItemLabel = css`\n  margin-right: 2em;\n  font-weight: 500;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    font-size: 1em;\n}\n\n`\n\nconst formButtonContainer = css`\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-end;\n  margin-top: 0.6em;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    flex-direction: row;\n    align-items: flex-start;\n    padding: 1em 0;\n  }\n`\n\nconst formButtonStyle = css`\n  font-weight: 600;\n  font-size: 1em;\n`\n\nconst textInputStyle = css`\n  margin-left: auto;\n  margin-right: -1em;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    margin-right: 0;\n  }\n`\n\nconst inputContainerStyle = css`\n  width: 70%;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    width: 100%;\n  }\n`\n\nconst spinnerIcon = css`\n  margin-left: 0.2em;\n`\n\nconst styles = {\n  formBodyContainer,\n  formItemContainer,\n  formButtonContainer,\n  formItemLabel,\n  textInputStyle,\n  formButtonStyle,\n  inputContainerStyle,\n  spinnerIcon\n}\n\nexport default styles\n","/* global FileReader */\n/* global FormData */\n\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { cx } from 'emotion'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport Container from '../../components/Container'\nimport Spinner from '../../components/Spinner'\nimport Text from '../../components/Text'\nimport Button from '../../components/Button'\nimport EditProfileForm from './EditProfileForm'\n\nimport API from '../../api'\nimport { getAuthUser } from '../../store/actions/auth'\n\nimport styles from './styles'\nimport { colors } from '../../styles'\n\nclass UserProfile extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      selectedProfileImage: null,\n      selectedProfileImageBinary: null,\n      isSubmittingAvatar: false\n    }\n\n    this.handleAvatarSubmit = this.handleAvatarSubmit.bind(this)\n    this.handleProfileSubmit = this.handleProfileSubmit.bind(this)\n  }\n\n  _renderLoading = () => {\n    return (\n      <Container style={styles.loadingContainer}>\n        <Spinner size={50} width={7} color={colors.lightText} />\n      </Container>\n    )\n  }\n\n  fileChangeHandler = (event) => {\n    if (event.target.files && event.target.files[0]) {\n      this.setState({ selectedProfileImageBinary: event.target.files[0] })\n      let reader = new FileReader()\n      reader.onload = (e) => {\n        this.setState({ selectedProfileImage: e.target.result })\n      }\n      reader.readAsDataURL(event.target.files[0])\n    }\n  }\n\n  async handleAvatarSubmit () {\n    this.setState({ isSubmittingAvatar: true })\n    try {\n      const formData = new FormData()\n      formData.append('avatar', this.state.selectedProfileImageBinary, this.state.selectedProfileImageBinary.name)\n      const user = await API.updateUser(formData)\n      this.setState({\n        selectedProfileImage: null,\n        selectedProfileImageBinary: null,\n        isSubmittingAvatar: false\n      })\n      this.props.getAuthUser(user)\n    } catch (e) {\n      this.setState({ isSubmittingAvatar: false })\n      console.log(e)\n    }\n  }\n\n  async handleProfileSubmit (values, bag) {\n    try {\n      const data = await API.updateUser(values)\n      bag.setSubmitting(false)\n      this.props.getAuthUser(data)\n    } catch (e) {\n      console.log(e)\n      bag.setSubmitting(false)\n      bag.setErrors(API.setErrors(e.response.data.errors.details.errors))\n    }\n  }\n\n  onAvatarCancel = () => {\n    this.setState({ selectedProfileImage: null })\n  }\n\n  getUserImage = (user) => {\n    if (this.state.selectedProfileImage) {\n      return this.state.selectedProfileImage\n    }\n    if (user.avatar) {\n      return user.avatar\n    }\n\n    return 'https://res.cloudinary.com/bitcharge/image/upload/v1535940305/panda-avatar.png'\n  }\n\n  _renderUserDetails = (user) => {\n    return (\n      <React.Fragment>\n        <Container style={styles.avatarContainer}>\n          <Container style={styles.editImageContainer}>\n            <img alt='user-avatar' className={cx(styles.avatarIconStyle)} src={this.getUserImage(user)} />\n            <input type='file' id='profileImage' accept='image/*' className={cx(styles.inputStyle)} onChange={this.fileChangeHandler} />\n            <label htmlFor='profileImage' className={cx(styles.editImageIconContainer)}><svg className='mdi-icon ' width='14' height='14' fill='white' viewBox='0 0 24 24'><path d='M4,4H7L9,2H15L17,4H20C21.1,4 22,4.9 22,6V18C22,19.1 21.1,20 20,20H4C2.9,20 2,19.1 2,18V6C2,4.9 2.9,4 4,4M12,7C9.24,7 7,9.24 7,12C7,14.76 9.24,17 12,17C14.76,17 17,14.76 17,12C17,9.24 14.76,7 12,7M12,9C13.66,9 15,10.34 15,12C15,13.66 13.66,15 12,15C10.34,15 9,13.66 9,12C9,10.34 10.34,9 12,9Z' /></svg></label>\n          </Container>\n        </Container>\n        <Container style={styles.headerTextContainer}>\n          <Text tag='h5' style={styles.headerNameTextStyle}>{user.name}</Text>\n          <Text tag='h6' style={styles.headerUsernameTextStyle}>{user.username}</Text>\n        </Container>\n        { this.state.selectedProfileImage && (\n          <Container style={styles.editAvatarOptionsContainer}>\n            <Button\n              primary\n              onClick={this.handleAvatarSubmit}\n              style={styles.editProfileButton}\n              disabled={this.state.isSubmittingAvatar}\n              type='submit'\n            >\n              Save {this.state.isSubmittingAvatar && <span className={cx(styles.spinnerIcon)}><Spinner size={18} width={4} /></span>}\n            </Button>\n            <Button\n              onClick={this.onAvatarCancel}\n              style={styles.editProfileButton}\n              disabled={this.state.isSubmittingAvatar}\n              link\n            >\n              Cancel\n            </Button>\n          </Container>\n        )}\n        <Container style={styles.detailsContainer}>\n          <Container style={styles.profileHeaderContainer}>\n            <Text tag='h5' style={styles.profileHeaderTextStyle}>My Profile</Text>\n            <Button tag={Link} to={`/${user.username}`} target='_blank' style={styles.editProfileButton} secondary>View Profile<i className={`icon ion-md-person ${cx(styles.editIcon)}`} /></Button>\n          </Container>\n          <EditProfileForm user={user} onSubmit={this.handleProfileSubmit} />\n        </Container>\n      </React.Fragment>\n    )\n  }\n  render () {\n    return (\n      <Container fluid style={styles.mainContainer}>\n        <Container style={styles.cardContainer}>\n          {this.props.user ? this._renderUserDetails(this.props.user) : this._renderLoading()}\n        </Container>\n      </Container>\n    )\n  }\n}\n\nUserProfile.propTypes = {\n  user: PropTypes.object,\n  getAuthUser: PropTypes.func\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.auth.user\n})\n\nexport default connect(mapStateToProps, { getAuthUser })(UserProfile)\n","import { css } from 'react-emotion'\nimport { colors, breakpoints } from '../../styles'\nimport { lighten } from 'polished'\n\nconst mainContainer = css`\n  width: 100%;\n  align-items: center;\n  min-height: calc(100vh - 4.5em);\n  border-bottom: 1px solid ${colors.lightGray};\n`\n\nconst cardContainer = css`\n  width: 45em;\n  margin-top: 3em;\n  margin-bottom: 3em;\n  background-color: ${colors.white};\n  border-radius: 4px;\n  padding: 2em 3em;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    width: 100%;\n    margin: 0;\n    border-radius: 0;\n    padding: 1.5em;\n  }\n`\n\nconst loadingContainer = css`\n  align-items: center;\n  justify-content: center;\n  padding: 5em;\n`\n\nconst avatarContainer = css`\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n`\n\nconst editImageContainer = css`\n  display: block;\n  position: relative;\n`\n\nconst avatarIconStyle = css`\n  width: 125px;\n  height: 125px;\n  border-radius: 50%;\n  display: inline-block;\n  object-fit: cover;\n  border: 2px solid ${colors.white};\n`\n\nconst inputStyle = css`\n  width: 0.1px;\n  height: 0.1px;\n  opacity: 0;\n  overflow: hidden;\n  position: absolute;\n  z-index: -1;\n`\n\nconst editImageIconContainer = css`\n  display: flex;\n  width: 32px;\n  height: 32px;\n  border-radius: 100%;\n  border: 1px solid white;\n  cursor: pointer;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  bottom: 2px;\n  right: 2px;\n  background: ${colors.blackText};\n  transition: all 0.15s ease-out;\n\n  &:hover {\n    background-color: ${lighten(0.2, colors.blackText)};\n  }\n`\n\nconst headerTextContainer = css`\n  padding-top: 1.5em;\n  text-align: center;\n`\n\nconst headerNameTextStyle = css`\n  font-weight: 500;\n`\n\nconst headerUsernameTextStyle = css`\n  color: ${colors.lightText};\n`\n\nconst editAvatarOptionsContainer = css`\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  margin-top: 0.6em;\n`\n\nconst detailsContainer = css`\n  margin-top: 2em;\n`\n\nconst profileHeaderContainer = css`\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding-bottom: 1em;\n  border-bottom: .5px dashed ${colors.defaultBorder};\n`\n\nconst profileHeaderTextStyle = css`\n  font-weight: 600;\n  margin-bottom: -0.4em;\n`\n\nconst editProfileButton = css`\n  font-weight: 600;\n  font-size: 1em;\n\n  @media (max-width: ${breakpoints.mobile}) {\n    padding-left: .8em;\n    padding-right: .8em;\n  }\n`\n\nconst editIcon = css`\n  margin-left: 0.75em;\n`\n\nconst verifiedIcon = css`\n  margin-left: 0.3em;\n`\n\nconst spinnerIcon = css`\n  margin-left: 0.2em;\n`\n\nconst styles = {\n  mainContainer,\n  cardContainer,\n  loadingContainer,\n  avatarContainer,\n  editImageContainer,\n  avatarIconStyle,\n  inputStyle,\n  headerTextContainer,\n  headerNameTextStyle,\n  editAvatarOptionsContainer,\n  headerUsernameTextStyle,\n  editImageIconContainer,\n  detailsContainer,\n  profileHeaderContainer,\n  profileHeaderTextStyle,\n  editProfileButton,\n  editIcon,\n  verifiedIcon,\n  spinnerIcon\n}\n\nexport default styles\n","import App from './App'\nimport React from 'react'\nimport { StaticRouter, matchPath } from 'react-router-dom'\nimport express from 'express'\nimport { renderToString } from 'react-dom/server'\n\nimport routes from './routes'\n\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST)\n\nconst server = express()\nserver\n  .disable('x-powered-by')\n  .use(express.static(process.env.RAZZLE_PUBLIC_DIR))\n  .get('/*', (req, res) => {\n    const context = {}\n\n    const matches = routes.map((route, index) => {\n      const match = matchPath(req.url, route.path, route)\n\n      if (match) {\n        const obj = {\n          route,\n          match,\n          promise: route.component.getInitialData ? route.component.getInitialData({ match, req, res }) : Promise.resolve(null)\n        }\n        return obj\n      }\n\n      return null\n    })\n\n    if (matches.length === 0) {\n      res.status(404).send('Not found')\n    }\n    const markup = renderToString(\n      <StaticRouter context={context} location={req.url}>\n        <App />\n      </StaticRouter>\n    )\n\n    if (context.url) {\n      res.redirect(context.url)\n    } else {\n      res.status(200).send(\n        `<!doctype html>\n    <html lang=\"\">\n    <head>\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta charset=\"utf-8\" />\n        <link rel=\"manifest\" href=\"/manifest.json\">\n        <link rel=\"shortcut icon\" href=\"/favicon.png\">\n        <link href=\"https://unpkg.com/ionicons@4.0.0/dist/css/ionicons.min.css\"rel=\"stylesheet\"/>\n        <title>Bitcharge</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        ${assets.client.css ? `<link rel=\"stylesheet\" href=\"${assets.client.css}\">` : ''}\n        ${process.env.NODE_ENV === 'production' ? `<script src=\"${assets.client.js}\" defer></script>` : `<script src=\"${assets.client.js}\" defer crossorigin></script>`}\n    </head>\n    <body>\n        <div id=\"root\">${markup}</div>\n    </body>\n</html>`\n      )\n    }\n  })\n\nexport default server\n","import {\n  ADD_ADDRESS,\n  FETCH_ADDRESSES,\n  UPDATE_ADDRESS,\n  DELETE_ADDRESS\n} from '../constants'\n\nconst fetchAddresses = () => {\n  return {\n    type: FETCH_ADDRESSES\n  }\n}\n\nconst addAddress = (address) => {\n  return {\n    type: ADD_ADDRESS,\n    payload: {\n      address\n    }\n  }\n}\n\nconst updateAddress = (address) => {\n  return {\n    type: UPDATE_ADDRESS,\n    payload: {\n      address\n    }\n  }\n}\n\nconst deleteAddress = (address, params) => {\n  return {\n    type: DELETE_ADDRESS,\n    payload: {\n      address,\n      params\n    }\n  }\n}\n\nexport {\n  fetchAddresses,\n  addAddress,\n  updateAddress,\n  deleteAddress\n}\n","module.exports = require(\"emotion\");","module.exports = require(\"formik\");","module.exports = require(\"polished\");","module.exports = require(\"qrcode.react\");","module.exports = require(\"qs\");","module.exports = require(\"react-copy-to-clipboard\");","module.exports = require(\"react-media\");","module.exports = require(\"react-modal\");","module.exports = require(\"react-pose\");","module.exports = require(\"react-select\");","module.exports = require(\"react-select/lib/Async\");","module.exports = require(\"yup\");"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AAEA;AAHA;AAIA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AADA;AAGA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AA1GA;AACA;AA4GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AACA;AAcA;AACA;AACA;AACA;AAHA;AACA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvIA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAQA;AACA;AAOA;AACA;AAOA;AACA;AAOA;AACA;AAIA;AAyBA;AACA;AAIA;AACA;AAUA;AACA;AAUA;AACA;AAUA;AACA;AAWA;AACA;AAKA;AACA;AAKA;AACA;AAIA;AACA;AAIA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AACA;AAmBA;;;;;;;;;;;;;;;;;;;;;;;;;AC3KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAFA;AADA;AAFA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAFA;AADA;AArBA;AAmCA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AAiBA;AACA;AAWA;AACA;AAeA;AACA;AAGA;AACA;AAWA;AACA;AAcA;AACA;AAGA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AADA;AAQA;AACA;AACA;AAVA;AAYA;AACA;AACA;AAXA;AACA;AAJA;AAKA;AACA;;;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AANA;AADA;AAkBA;;;;AAnEA;AACA;AAqEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AACA;AAYA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7FA;AACA;AACA;AACA;AACA;AAKA;AACA;AAUA;AACA;AAGA;AACA;AAUA;AACA;AASA;AACA;AAkBA;AACA;AAIA;AACA;AAKA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AACA;AAWA;;;;;;;;;;;;;;;;;;;;;;;ACnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAOA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AAcA;AACA;AAiBA;AACA;AACA;AAFA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA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AA;AACA;AACA;AACA;;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AAmDA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AANA;AASA;;;;AApGA;AACA;AAsGA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AAHA;AACA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7LA;AACA;AACA;AACA;AACA;AAkBA;AACA;AASA;AACA;AAYA;AACA;AASA;AACA;AAQA;AACA;AASA;AAMA;AACA;AASA;AACA;AAUA;AACA;AAGA;AACA;AAIA;AACA;AAQA;AACA;AAGA;AACA;AAKA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AACA;AAiBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AADA;AAMA;AACA;AAFA;AACA;AANA;AAWA;AACA;AACA;AAbA;AAeA;AACA;AACA;AAjBA;AAqCA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AANA;A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CA;AAqBA;AACA;AAUA;AACA;AASA;AACA;AASA;AACA;AASA;AACA;AAWA;AACA;AAQA;AACA;AAWA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA;AACA;AA6BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAHA;AACA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVA;AApBA;AAkCA;AAlDA;AAAA;AAAA;AAAA;AADA;AAsDA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AASA;AACA;AAUA;AACA;AAKA;AACA;AAIA;AACA;AAGA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AAEA;AAHA;AAIA;AACA;;;;AACA;;;;;;;;AAEA;AACA;;AADA;AACA;AAAA;AACA;AACA;;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AARA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAbA;AAkBA;;;;AA5CA;AACA;AA8CA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AADA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1EA;AACA;AACA;AACA;AACA;AASA;AACA;AAcA;AACA;AAaA;AACA;AAGA;AACA;AAIA;AACA;AAYA;AACA;AAUA;AACA;AAYA;AACA;AAGA;AACA;AAOA;AACA;AASA;AACA;AAMA;AACA;AAKA;AACA;AAKA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AACA;AAiBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACniGA;;;;AApGA;AACA;AAsGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtHA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAUA;AACA;AAUA;AACA;AAWA;AACA;AAQA;AACA;AAiBA;AACA;AAQA;AACA;AAIA;AACA;AASA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AACA;AAYA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AAOA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AAOA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AATA;AACA;AAWA;;;AACA;AAAA;AACA;AADA;AACA;AADA;AAaA;AACA;AACA;AACA;AACA;AACA;AAlBA;AA6BA;AACA;AACA;AA/BA;AAgsBA;AACA;AAlFA;AAoFA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAJA;AASA;AAVA;AAaA;AACA;AAnGA;AAqGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AA3GA;AA6GA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AANA;AAeA;AACA;AA9HA;AAgIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5IA;AA8IA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AACA;AAtJA;AACA;AACA;AACA;AACA;AACA;AALA;AAHA;AAUA;AACA;;;;;;;;;;;;AAUA;AACA;;AADA;AACA;AAAA;;;;;;;;AAEA;AACA;;;;;;;;;;;;;;;;;AAiIA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AADA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAWA;;;;AAzKA;AACA;AA2KA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClNA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AAYA;AACA;AAgBA;AACA;AAKA;AACA;AAaA;AACA;AAWA;AACA;AAIA;AACA;AAUA;AACA;AAQA;AACA;AAQA;AACA;AASA;AACA;AAUA;AACA;AAMA;AACA;AAKA;AACA;AAIA;AACA;AAIA;AACA;AASA;AACA;AAGA;AACA;AASA;AACA;AAQA;AACA;AAKA;AACA;AAIA;AACA;AAGA;AACA;AAIA;AACA;AAUA;AACA;AAeA;AACA;AAIA;AACA;AAQA;AACA;AAGA;AACA;AAEA;AACA;AAKA;AACA;AAIA;AACA;AAIA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAVA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAVA;AACA;AAeA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvCA;AACA;AAyCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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AAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AALA;AAjCA;AA0CA;AACA;AAvHA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAVA;AAWA;AACA;;;;;;;;;;AAqBA;;AAEA;AACA;AAAA;;AACA;AACA;;AADA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;;;;;;;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;AAGA;;;;;;;;AAEA;AACA;;AADA;AACA;AAAA;AACA;;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AA+DA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AADA;AAMA;;;;AAnIA;AACA;AAqIA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AACA;AADA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpKA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAeA;AACA;AAKA;AACA;AAKA;AACA;AAIA;AACA;AAQA;AACA;AAQA;AACA;AAmBA;AACA;AAIA;AACA;AAGA;AACA;AAGA;AACA;AAMA;AACA;AAGA;AACA;AAOA;AACA;AAIA;AACA;AASA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AACA;AAqBA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAIA;AACA;AACA;AACA;AAmBA;AACA;AACA;AACA;;;;;;;;;;;;AClEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AACA;;;;;;;;;;;;ACxCA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}