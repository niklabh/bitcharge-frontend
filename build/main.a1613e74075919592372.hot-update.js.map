{"version":3,"file":"main.a1613e74075919592372.hot-update.js","sources":["webpack:///src/screens/Addresses/AddressItem/index.js"],"sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { cx } from 'emotion'\nimport { Formik } from 'formik'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport * as Yup from 'yup'\n\nimport Container from '../../../components/Container'\nimport Text from '../../../components/Text'\nimport Input from '../../../components/Input'\nimport Button from '../../../components/Button'\nimport Modal from '../../../components/Modal'\n\nimport API from '../../../api'\n\nimport styles from './styles'\n\nconst validationSchema = Yup.object().shape({\n  address: Yup.string()\n    .min(30)\n    .required('Address is required')\n})\n\nconst EditAddressForm = ({ onSubmit, onCancel, address }) => {\n  return (\n    <Formik\n      initialValues={{ address: address }}\n      onSubmit={onSubmit}\n      validationSchema={validationSchema}\n      render={({\n        values,\n        handleChange,\n        handleSubmit,\n        handleBlur,\n        errors,\n        touched,\n        isValid,\n        isSubmitting\n      }) => {\n        return (\n          <Container style={styles.addressInputContainer}>\n            <Input\n              name='address'\n              noErrorText\n              inputStyle={styles.addressInputStyle}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.address}\n              error={touched.address && errors.address}\n            />\n            <Container style={styles.optionsContainer}>\n              <Button\n                primary\n                disabled={!isValid || isSubmitting}\n                onClick={handleSubmit}\n                style={styles.editAddressSaveButton}\n                type='submit'\n              >\n                Save\n              </Button>\n              <Button\n                onClick={onCancel}\n                style={cx(styles.addressActionButton, styles.editAddressCancelButton)}\n                link\n              >\n                Cancel\n              </Button>\n            </Container>\n          </Container>\n        )\n      }} />\n  )\n}\n\nclass AddressItem extends Component {\n  constructor (props) {\n    super(props)\n\n    this.onEditSubmit = this.onEditSubmit.bind(this)\n  }\n  state = {\n    copiedAddress: false,\n    deleteAddressModal: false,\n    isEditing: false\n  }\n\n  onCopyAddress = () => {\n    this.setState({ copied: true })\n    setInterval(() => {\n      this.setState({ copied: false })\n    }, 3000)\n  }\n\n  onEdit = () => {\n    this.setState({ isEditing: true })\n  }\n\n  async onEditSubmit (values, bag) {\n    console.log(values)\n    const addressDetails = {...this.props.address, address: values.address}\n    console.log(addressDetails)\n    try {\n      const data = await API.updateAddress(addressDetails)\n      bag.setSubmitting(false)\n      this.props.deleteAddress(this.props.address, { local: true })\n      this.props.editAddress(data.address)\n      this.setState({ isEditing: false })\n    } catch (e) {\n      console.log(e)\n      bag.setSubmitting(false)\n      bag.setErrors(API.setErrors(e.response.data.errors.details.errors))\n    }\n  }\n\n  onDeleteAddress = () => {\n    this.setState({ deleteAddressModal: true })\n  }\n\n  handleDeleteAddress = () => {\n    this.props.deleteAddress(this.props.address)\n    this.closeDeleteAddressModal()\n  }\n\n  closeDeleteAddressModal = () => {\n    this.setState({ deleteAddressModal: false })\n  }\n\n  renderDeleteModal = () => {\n    return (\n      <Modal label='Delete Address' style={styles.deleteAddressModalStyle} isOpen={this.state.deleteAddressModal} handleClose={this.closeDeleteAddressModal}>\n        <Text tag='h5' style={styles.deleteAddressHeaderStyle}>Are you sure you want to delete this address?</Text>\n        <Container style={styles.deleteAddressModalbuttonContainer}>\n          <Button error link onClick={this.handleDeleteAddress}>Delete</Button>\n          <Button link onClick={this.closeDeleteAddressModal}>Cancel</Button>\n        </Container>\n      </Modal>\n    )\n  }\n\n  onCancelEdit = () => {\n    this.setState({ isEditing: false })\n  }\n\n  renderAddressText = () => {\n    const { address } = this.props\n    return (\n      <Container style={styles.addressTextContainer}>\n        <Text tag='h6' style={styles.addressTextStyle} unstyled>{address.address}</Text>\n        <Container style={styles.optionsContainer}>\n          <CopyToClipboard text={address.address} onCopy={this.onCopyAddress}>\n            {this.state.copied\n              ? <Text tag='h6' style={styles.copiedTextStyle}>Copied!</Text>\n              : <Button onClick={this.addNewAddress} style={styles.addressActionButton} link>Copy</Button>\n            }\n          </CopyToClipboard>\n          <Button onClick={this.onEdit} style={styles.addressActionButton} link>Edit</Button>\n          <Button onClick={this.onDeleteAddress} style={styles.addressActionButton} link>Delete</Button>\n        </Container>\n      </Container>\n    )\n  }\n\n  render () {\n    const { address } = this.props\n    return (\n      <Container style={styles.addressItemContainer}>\n        {this.renderDeleteModal()}\n        <Container style={styles.addressIconContainer}>\n          <img alt='adress-icon' src={address.currency.icon} className={cx(styles.addressIconImage)} />\n          <Text tag='h5' style={styles.addressIconText}>{address.currency.name}</Text>\n        </Container>\n        {this.state.isEditing ? <EditAddressForm onSubmit={this.onEditSubmit} onCancel={this.onCancelEdit} address={this.props.address.address} /> : this.renderAddressText()}\n      </Container>\n    )\n  }\n}\n\nEditAddressForm.propTypes = {\n  onSubmit: PropTypes.func,\n  onCancel: PropTypes.func,\n  address: PropTypes.string\n}\n\nAddressItem.propTypes = {\n  address: PropTypes.object,\n  editAddress: PropTypes.func,\n  deleteAddress: PropTypes.func\n}\n\nexport default AddressItem\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVA;AAVA;AA8BA;AA7CA;AAAA;AAAA;AAAA;AA+CA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AADA;AAMA;AACA;AACA;AAHA;AACA;AANA;AAYA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAmBA;AACA;AACA;AArBA;AAwCA;AACA;AACA;AA1CA;AA4CA;AACA;AACA;AACA;AA/CA;AAiDA;AACA;AACA;AAnDA;AAqDA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAFA;AAQA;AACA;AA/DA;AAiEA;AACA;AACA;AAnEA;AAoEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAFA;AAcA;AACA;AAnFA;AAHA;AAIA;AACA;;;;AAiBA;;;;;;AACA;AACA;AACA;AAAA;;;AAEA;AACA;;AADA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AAmDA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AANA;AASA;;;;AApGA;AACA;AAsGA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AAHA;AACA;AAKA;;;;A","sourceRoot":""}