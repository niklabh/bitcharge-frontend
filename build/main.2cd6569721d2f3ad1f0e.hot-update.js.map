{"version":3,"file":"main.2cd6569721d2f3ad1f0e.hot-update.js","sources":["webpack:///src/screens/AddAddress/index.js"],"sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { cx } from 'emotion'\nimport posed from 'react-pose'\n\nimport Container from '../../components/Container'\nimport Text from '../../components/Text'\nimport AddressForm from './AddressForm'\nimport AddAddressSuccess from './AddAddressSuccess'\n\nimport API from '../../api'\nimport { addAddress } from '../../store/actions/address'\n\nimport styles from './styles'\n\nclass AddAddress extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      isAddAddressSuccess: false\n    }\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.onAddNewAddress = this.onAddNewAddress.bind(this)\n  }\n\n  async handleSubmit (values, bag) {\n    const addressDetails = {\n      currency: values.currency.symbol,\n      address: values.address\n    }\n    try {\n      const data = await API.addAddress(addressDetails)\n      bag.setSubmitting(false)\n      this.setState({ isAddAddressSuccess: true })\n      this.props.addAddress(data.address)\n    } catch (e) {\n      bag.setSubmitting(false)\n      bag.setErrors(API.setErrors(e.response.data.errors.details.errors))\n    }\n  }\n\n  onAddNewAddress () {\n    this.setState({ isAddAddressSuccess: false })\n  }\n\n  render () {\n    const PoseAddressForm = posed(AddressForm)({\n      visible: { opacity: 1 },\n      invisible: { opacity: 0, display: 'none' }\n    })\n\n    const PoseAddAddressSuccess = posed(AddAddressSuccess)({\n      visible: { opacity: 1 },\n      invisible: { opacity: 0, display: 'none' }\n    })\n\n    return (\n      <Container fluid style={styles.mainContainer}>\n        <Container style={styles.heroContainer}>\n          <Container style={styles.heroLogoContainer}>\n            <a href='/'><img alt='bitcharge-logo' className={cx(styles.logoImageStyle)} src='https://res.cloudinary.com/bitcharge/image/upload/v1532990484/icons/bitcharge-logo-white.png' /></a>\n          </Container>\n          <Container style={styles.heroTextContainer}>\n            <img alt='add-address-avatar' className={cx(styles.addressAvatarIconStyle)} src='https://res.cloudinary.com/bitcharge/image/upload/v1535940306/hen-avatar.png' />\n            <Text tag='h3' style={styles.heroText}>Add your addresses</Text>\n          </Container>\n        </Container>\n        <Container style={styles.bodyContainer}>\n          <PoseAddressForm pose={this.state.isAddAddressSuccess ? 'invisible' : 'visible'} onSubmit={this.handleSubmit} />\n          <PoseAddAddressSuccess pose={this.state.isAddAddressSuccess ? 'visible' : 'invisible'} onAddNewAddress={this.onAddNewAddress} />\n        </Container>\n      </Container>\n    )\n  }\n}\n\nAddAddress.propTypes = {\n  addAddress: PropTypes.func\n}\n\nexport default connect(null, { addAddress })(AddAddress)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AADA;AAGA;AACA;AANA;AAOA;AACA;;;;AACA;;;;;;AACA;AACA;AACA;AAFA;;;AAKA;AACA;;AADA;AACA;AAAA;AACA;AACA;;;;;;;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;AAGA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAFA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAJA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAVA;AAgBA;;;;AA1DA;AACA;AA4DA;AACA;AADA;AACA;AAGA;;;;A","sourceRoot":""}