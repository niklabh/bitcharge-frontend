{"version":3,"file":"main.9e17914cba86b9ec7d23.hot-update.js","sources":["webpack:///src/screens/SignupConfirmation/index.js","webpack:///src/screens/SignupConfirmation/styles.js","webpack:///external \"qs\""],"sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport posed from 'react-pose'\nimport { cx } from 'emotion'\nimport qs from 'qs'\n\nimport Container from '../../components/Container'\nimport Text from '../../components/Text'\nimport Button from '../../components/Button'\n\nimport { confirmEmail as confirmEmailAction } from '../../store/actions/auth'\nimport API from '../../api'\n\nimport styles from './styles'\n\nconst SignupConfirming = ({ hostRef }) => {\n  return (\n    <Container hostRef={hostRef} style={styles.confirmationContainer}>\n      <Text tag='h1' style={styles.confirmationHeaderText}>We are confirming your email...</Text>\n    </Container>\n  )\n}\n\nconst SignupConfirmationError = ({ hostRef, isAuthenticated, handleVerify, resentVerification }) => {\n  return (\n    <Container hostRef={hostRef} style={styles.confirmationContainer}>\n      <Text tag='h1' style={styles.confirmationHeaderText}>Something went wrong</Text>\n      <Text tag='h5'>Something went wrong while verifying your email. {isAuthenticated\n        ? `Try resending the verification email`\n        : `Login to resend the verification email.`}</Text>\n      <Container style={styles.buttonContainer}>\n        {isAuthenticated\n          ? <Button tag={Link} to='/address/new' primary style={styles.submitButton}>Resend Verifcation</Button>\n          : <Button tag={Link} to='/login' primary style={styles.submitButton}>Login Now</Button>\n        }\n        {isAuthenticated && <Button tag={Link} to='/profile' link style={styles.cancelButton}>Skip</Button>}\n      </Container>\n      {(resentVerification.action && resentVerification.success) && <Text tag='h5' style={styles.resentVerificationText}>Verification mail sent successfully.</Text> }\n    </Container>\n  )\n}\n\nconst SignupConfirmed = ({ hostRef, isAuthenticated }) => {\n  return (\n    <Container hostRef={hostRef} style={styles.confirmationContainer}>\n      <Text tag='h1' style={styles.confirmationHeaderText}>Woohoo! You're all set.</Text>\n      <Text tag='h5' style={styles.confirmationInfoText}>Thank you for verifying your account. {isAuthenticated\n        ? `You can now start adding your addresses.`\n        : `You need to login to start adding your addresses.`}\n      </Text>\n      <Container style={styles.buttonContainer}>\n        {isAuthenticated\n          ? <Button tag={Link} to='/address/new' primary style={styles.submitButton}>Add an Address</Button>\n          : <Button tag={Link} to='/login' primary style={styles.submitButton}>Login Now</Button>\n        }\n        {isAuthenticated && <Button tag={Link} to='/profile' link style={styles.cancelButton}>Skip</Button>}\n      </Container>\n    </Container>\n  )\n}\n\nconst SignupConfirmationExpired = ({ hostRef, isAuthenticated, handleVerify, resentVerification }) => {\n  const { action, success, error } = resentVerification\n  return (\n    <Container hostRef={hostRef} style={styles.confirmationContainer}>\n      <Text tag='h1' style={styles.confirmationHeaderText}>Something went wrong</Text>\n      <Text tag='h5'>Your verification email is expired. {isAuthenticated\n        ? `Try resending the verification email`\n        : `Login to resend the verification email.`}</Text>\n      <Container style={styles.buttonContainer}>\n        {isAuthenticated\n          ? <Button onClick={this.handleVerify} primary style={styles.submitButton} disabled={(action && !(success || error))}>Resend Verifcation</Button>\n          : <Button tag={Link} to='/login' primary style={styles.submitButton}>Login Now</Button>\n        }\n      </Container>\n      {(action && success) && <Text tag='h5' style={styles.resentVerificationText}>Verification mail sent successfully.</Text> }\n    </Container>\n  )\n}\n\nclass SignupConfirmation extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      isConfirmed: false,\n      isConfirming: false,\n      isExpired: false,\n      isError: false,\n      resentVerification: false,\n      resentVerificationSuccess: false,\n      resentVerificationError: false\n    }\n\n    this.resendVerificationMail = this.resendVerificationMail.bind(this)\n  }\n\n  async componentDidMount () {\n    const query = qs.parse(this.props.location.search.split('?')[1])\n    try {\n      const response = await API.confirmEmail(query.confirmationCode)\n      this.setState({ isConfirming: false })\n      if (response) {\n        this.setState({ isConfirmed: true })\n        this.props.confirmEmailAction(true)\n      }\n    } catch (error) {\n      this.setState({ isConfirming: false })\n      if (error.response.status === 410) {\n        this.setState({ isExpired: true })\n      }\n      this.setState({ isError: true })\n    }\n  }\n\n  async resendVerificationMail () {\n    try {\n      await API.verifyEmail()\n      this.setState({ resentVerification: true })\n    } catch (e) {\n      console.log(e)\n      this.setState({ resentVerification: true, resentVerificationError: true })\n    }\n  }\n\n  render () {\n    const PoseSignupConfirming = posed(SignupConfirming)({\n      visible: { opacity: 1 },\n      invisible: { opacity: 0, display: 'none' }\n    })\n\n    const PoseSignupConfirmed = posed(SignupConfirmed)({\n      visible: { opacity: 1 },\n      invisible: { opacity: 0, display: 'none' }\n    })\n\n    const PoseSignupConfirmError = posed(SignupConfirmationError)({\n      visible: { opacity: 1 },\n      invisible: { opacity: 0, display: 'none' }\n    })\n\n    const PoseSignupConfirmExpired = posed(SignupConfirmationExpired)({\n      visible: { opacity: 1 },\n      invisible: { opacity: 0, display: 'none' }\n    })\n\n    const resentVerification = {\n      action: true,\n      success: this.state.resentVerificationSuccess,\n      error: this.state.resentVerificationError\n    }\n    return (\n      <Container fluid style={styles.mainContainer}>\n        <Container style={styles.heroContainer}>\n          <Container style={styles.heroLogoContainer}>\n            <a href='/'><img alt='bitcharge-logo' className={cx(styles.logoImageStyle)} src='https://res.cloudinary.com/bitcharge/image/upload/v1532990484/icons/bitcharge-logo-white.png' /></a>\n          </Container>\n          <Container style={styles.heroTextContainer}>\n            <img className={cx(styles.heroAvatarIconStyle)} alt='signup-confirmation-avatar' src='https://res.cloudinary.com/bitcharge/image/upload/v1535940306/fox-avatar.png' />\n            <Text tag='h3' style={styles.heroText}>You're almost there.</Text>\n          </Container>\n          { !this.props.isAuthenticated && (\n            <Container style={styles.heroFooterContainer}>\n              <Text tag='h6'>Already have an account. <Link to='/login' className={cx(styles.LoginLink)}>Login</Link></Text>\n            </Container>\n          )\n          }\n        </Container>\n        <Container style={styles.bodyContainer}>\n          <PoseSignupConfirming pose={this.state.isConfirming ? 'visible' : 'invisible'} />\n          <PoseSignupConfirmed pose={this.state.isConfirmed ? 'visible' : 'invisible'} isAuthenticated={this.props.isAuthenticated} />\n          <PoseSignupConfirmError pose={this.state.isError ? 'visible' : 'invisible'} isAuthenticated={this.props.isAuthenticated} handleVerify={this.resendVerificationMail} resentVerification={resentVerification} />\n          <PoseSignupConfirmExpired pose={this.state.isExpired ? 'visible' : 'invisible'} isAuthenticated={this.props.isAuthenticated} handleVerify={this.resendVerificationMail} resentVerification={resentVerification} />\n        </Container>\n      </Container>\n    )\n  }\n}\n\nSignupConfirmed.propTypes = {\n  hostRef: PropTypes.any,\n  isAuthenticated: PropTypes.bool\n}\n\nSignupConfirming.propTypes = {\n  hostRef: PropTypes.any\n}\n\nSignupConfirmationError.propTypes = {\n  hostRef: PropTypes.any,\n  isAuthenticated: PropTypes.bool,\n  handleVerify: PropTypes.func,\n  resentVerification: PropTypes.func\n}\n\nSignupConfirmationExpired.propTypes = {\n  hostRef: PropTypes.any,\n  isAuthenticated: PropTypes.bool,\n  handleVerify: PropTypes.func,\n  resentVerification: PropTypes.func\n}\n\nSignupConfirmation.propTypes = {\n  location: PropTypes.any,\n  confirmEmailAction: PropTypes.func,\n  isAuthenticated: PropTypes.bool\n}\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, { confirmEmailAction })(SignupConfirmation)\n","import { css } from 'react-emotion'\nimport { colors, breakpoints } from '../../styles'\nimport { lighten } from 'polished'\n\nconst mainContainer = css`\n  background-color: ${colors.white};\n  label: signup-cnf-main-cntr;\n  flex-direction: row;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    flex-direction: column;\n  }\n`\n\nconst heroContainer = css`\n  flex: 2;\n  background-color: ${colors.primary};\n  color: ${colors.white};\n  padding: 0 2em;\n  label: signup-cnf-hero-cntr;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid ${colors.lightGray};\n\n  @media (max-width: ${breakpoints.tablet}) {\n    flex: none;\n  }\n`\n\nconst bodyContainer = css`\n  flex: 5;\n  align-items: center;\n  justify-content: center;\n  padding: 2em;\n  height: 100vh;\n  label: signup-cnf-body-cntr;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    padding: 1em;\n    height: auto;\n  }\n`\n\nconst heroLogoContainer = css`\n  padding-top: 1em;\n`\n\nconst logoImageStyle = css`\n  width: 150px;\n  height: auto;\n`\n\nconst heroAvatarIconStyle = css`\n  width: 150px;\n  height: 150px;\n  border-radius: 50%;\n  margin-bottom: .5em;\n  border: 2px solid ${colors.white};\n\n  @media (max-width: ${breakpoints.tablet}) {\n    width: 125px;\n    height: 125px;\n  }\n`\n\nconst heroText = css`\n  margin-top: 1em;\n  font-weight: 600;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    font-size: 1.5em;\n    text-align: center;\n  }\n`\n\nconst heroTextContainer = css`\n  flex: 1;\n  padding: 1em;\n  label: signup-hero-text-cntr;\n  align-items: center;\n  justify-content: center;\n`\n\nconst heroFooterContainer = css`\n  margin-bottom: 1em;\n`\n\nconst LoginLink = css`\n  font-weight: 600;\n  display: inline-block;\n  text-decoration: none;\n  color: ${colors.white};\n  padding: .3em;\n  border-radius: .1em;\n  label: signup-login-link;\n  transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;\n\n  &:hover {\n    background-color: ${colors.white};\n    color: ${colors.primary};\n  }\n`\n\nconst confirmationContainer = css`\n  padding: 0 4em;\n  width: 100%;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    padding: 1em;\n  }\n`\n\nconst confirmationHeaderText = css`\n  text-align: left;\n  font-weight: 600;\n  margin-bottom: 2em;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    font-size: 1.5em;\n    margin-bottom: 1em;\n  }\n`\n\nconst confirmationInfoText = css`\n@media (max-width: ${breakpoints.tablet}) {\n  font-size: 1em;\n}\n`\n\nconst buttonContainer = css`\n  margin-top: 1em;\n  flex-direction: row;\n  justify-content: left;\n  padding-top: 1em;\n`\n\nconst submitButton = css`\n  font-size: 1.3em;\n  label: signup-confirm-submit-button;\n\n  @media (max-width: ${breakpoints.tablet}) {\n    font-size: 1em;\n    padding-left: .75em;\n    padding-right: .75em;\n  }\n`\n\nconst cancelButton = css`\n  background-color: transparent;\n  color: ${colors.blackText};\n  label: login-cancel-button;\n\n  &:hover {\n    color: ${lighten(0.4, colors.blackText)};\n  }\n\n  @media (max-width: ${breakpoints.tablet}) {\n    font-size: 1em;\n  }\n`\n\nconst resentVerificationText = css`\n  margin-top: 1.5em;\n  font-weight: 500;\n`\n\nconst styles = {\n  mainContainer,\n  heroContainer,\n  bodyContainer,\n  heroText,\n  heroAvatarIconStyle,\n  heroTextContainer,\n  heroFooterContainer,\n  heroLogoContainer,\n  logoImageStyle,\n  LoginLink,\n  confirmationContainer,\n  confirmationHeaderText,\n  confirmationInfoText,\n  buttonContainer,\n  submitButton,\n  cancelButton,\n  resentVerificationText\n}\n\nexport default styles\n","module.exports = require(\"qs\");"],"mappings":"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","sourceRoot":""}