{"version":3,"file":"main.4c759b18ee65a76ff5da.hot-update.js","sources":["webpack:///src/screens/ForgotPassword/index.js"],"sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { cx } from 'emotion'\n\nimport EmailForm from './EmailForm'\nimport Container from '../../components/Container'\nimport Text from '../../components/Text'\n\nimport styles from './styles'\n\nclass ForgotPassword extends Component {\n  constructor (props) {\n    super(props)\n\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  async handleSubmit (values, bag) {\n    try {\n      bag.setSubmitting(false)\n      this.props.history.push('/profile')\n    } catch (e) {\n      console.log(e)\n      bag.setSubmitting(false)\n    }\n  }\n\n  render () {\n    if (this.props.isAuthenticated) {\n      return (<Redirect to='/profile' />)\n    }\n\n    return (\n      <Container fluid style={styles.mainContainer}>\n        <Container style={styles.heroContainer}>\n          <Container style={styles.heroLogoContainer}>\n            <a href='/'><img alt='bitcharge-logo' className={cx(styles.logoImageStyle)} src='https://res.cloudinary.com/bitcharge/image/upload/v1532990484/icons/bitcharge-logo-white.png' /></a>\n          </Container>\n          <Container style={styles.heroTextContainer}>\n            <img alt='forgot-password-avatar' className={cx(styles.signupAvatarIconStyle)} src='https://res.cloudinary.com/bitcharge/image/upload/v1535940360/cat-avatar.png' />\n            <Text tag='h3' style={styles.heroText}>Forgot Password</Text>\n          </Container>\n        </Container>\n        <Container style={styles.bodyContainer}>\n          <Text tag='h1' style={styles.formHeaderText}>We have your back.</Text>\n          <EmailForm onSubmit={this.handleSubmit} />\n        </Container>\n      </Container>\n    )\n  }\n}\n\nForgotPassword.propTypes = {\n  history: PropTypes.any,\n  isAuthenticated: PropTypes.bool\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.isAuthenticated\n  }\n}\n\nexport default connect(mapStateToProps)(ForgotPassword)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AAEA;AAHA;AAIA;AACA;;;;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAJA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAVA;AAgBA;;;;AAvCA;AACA;AAyCA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AADA;AAGA;AACA;AACA;;;;A","sourceRoot":""}