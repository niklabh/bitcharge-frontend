{"version":3,"file":"main.58c44faaf1adad8430ac.hot-update.js","sources":["webpack:///src/server.js"],"sourcesContent":["import App from './App'\nimport React from 'react'\nimport { StaticRouter, matchPath } from 'react-router-dom'\nimport express from 'express'\nimport { renderToString } from 'react-dom/server'\nimport { renderStylesToString } from 'emotion-server'\n\nimport routes from './routes'\n\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST)\n\nconst server = express()\nserver\n  .disable('x-powered-by')\n  .use(express.static(process.env.RAZZLE_PUBLIC_DIR))\n  .get('/*', (req, res) => {\n    const context = {}\n\n    const matches = routes.map((route, index) => {\n      const match = matchPath(req.url, route.path, route)\n      console.log(match)\n      if (match) {\n        const obj = {\n          route,\n          match,\n          promise: route.component.getInitialData ? route.component.getInitialData({ match, req, res }) : Promise.resolve(null)\n        }\n        return obj\n      }\n\n      return null\n    })\n    if (matches.length === 0) {\n      res.status(404).send('Not found')\n    }\n\n    const promises = matches.map(match => (match ? match.promise : null))\n\n    const renderMarkup = (initialData = null, initialDataError = null) => {\n      const markup = renderToString(\n        <StaticRouter context={context} location={req.url}>\n          <App routes={routes} initialData={initialData} initialDataError={initialDataError} />\n        </StaticRouter>\n      )\n      const htmlWithStyles = renderStylesToString(markup)\n      if (context.url) {\n        return res.redirect(context.url)\n      } else {\n        return (\n          `<!doctype html>\n      <html lang=\"\">\n      <head>\n          <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n          <meta charset=\"utf-8\" />\n          <link rel=\"manifest\" href=\"/manifest.json\">\n          <link rel=\"shortcut icon\" href=\"/favicon.png\">\n          <link href=\"https://unpkg.com/ionicons@4.0.0/dist/css/ionicons.min.css\"rel=\"stylesheet\"/>\n          <title>Bitcharge</title>\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n          ${assets.client.css ? `<link rel=\"stylesheet\" href=\"${assets.client.css}\">` : ''}\n          ${process.env.NODE_ENV === 'production' ? `<script src=\"${assets.client.js}\" defer></script>` : `<script src=\"${assets.client.js}\" defer crossorigin></script>`}\n      </head>\n      <body>\n          <div id=\"root\">${htmlWithStyles}</div>\n          <script>window._INITIAL_DATA_ = ${JSON.stringify(initialData)};</script>\n          <script>window._INITIAL_DATA_ERROR_ = ${JSON.stringify(initialDataError)};</script>\n      </body>\n    </html>`\n        )\n      }\n    }\n\n    Promise.all(promises)\n      .then(data => {\n        return res.status(200).send(renderMarkup(data))\n      })\n      .catch(error => {\n        console.log(error)\n        return res.status(200).send(renderMarkup(null, error))\n      })\n  })\n\nexport default server\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AACA;AACA;AAqBA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}