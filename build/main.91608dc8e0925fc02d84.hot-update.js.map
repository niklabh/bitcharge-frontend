{"version":3,"file":"main.91608dc8e0925fc02d84.hot-update.js","sources":["webpack:///src/screens/Addresses/index.js"],"sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport AddressItem from './AddressItem'\nimport Container from '../../components/Container'\nimport Text from '../../components/Text'\nimport Spinner from '../../components/Spinner'\nimport Button from '../../components/Button'\nimport Modal from '../../components/Modal'\nimport AddAddressForm from '../AddAddress/AddressForm'\n\nimport API from '../../api'\nimport { addAddress, updateAddress, deleteAddress } from '../../store/actions/address'\n\nimport { colors } from '../../styles'\nimport styles from './styles'\n\nclass Addresses extends Component {\n  constructor (props) {\n    super(props)\n\n    this.handleAddAddressSubmit = this.handleAddAddressSubmit.bind(this)\n  }\n  state = {\n    addNewAddressModal: false,\n    isAddAddressSuccess: false\n  }\n\n  openAddNewAddressModal = () => {\n    this.setState({ addNewAddressModal: true })\n  }\n\n  closeAddNewAddressModal = () => {\n    this.setState({ addNewAddressModal: false })\n  }\n\n  async handleAddAddressSubmit (values, bag) {\n    const addressDetails = {\n      currency: values.currency.symbol,\n      address: values.address\n    }\n    try {\n      const data = await API.addAddress(addressDetails)\n      bag.setSubmitting(false)\n      this.setState({ isAddAddressSuccess: true })\n      this.props.addAddress(data.address)\n      this.closeAddNewAddressModal()\n    } catch (e) {\n      console.log(e)\n      bag.setSubmitting(false)\n      bag.setErrors(API.setErrors(e.response.data.errors.details.errors))\n    }\n  }\n\n  _renderUserAddresses = (addresses) => {\n    const addressList = Object.keys(addresses).map(address => addresses[address]).sort((a, b) => {\n      const textA = a.currency.name.toUpperCase()\n      const textB = b.currency.name.toUpperCase()\n\n      return textA.localeCompare(textB)\n    })\n    return (\n      <Container style={styles.addressesContainer}>\n        <Container style={styles.addressesHeaderContainer}>\n          <Text tag='h5' style={styles.addressesHeaderTextStyle}>My Addresses</Text>\n          <Button onClick={this.openAddNewAddressModal} style={styles.addNewAddressButton} primary>Add new</Button>\n          {this._renderAddAddressModal()}\n        </Container>\n        <Container style={styles.addressesListContainer}>\n          {addressList.length && addressList.map(address => (\n            <AddressItem\n              key={address.address}\n              address={address}\n              deleteAddress={this.props.deleteAddress}\n              editAddress={this.props.updateAddress}\n            />\n          ))}\n        </Container>\n      </Container>\n    )\n  }\n\n  _renderLoading = () => {\n    return (\n      <Container style={styles.loadingContainer}>\n        <Spinner size={50} width={7} color={colors.lightText} />\n      </Container>\n    )\n  }\n\n  _renderError = () => {\n    return (\n      <Container style={styles.loadingContainer}>\n        <Text tag='h3'>Something went wrong. Try reloading the page</Text>\n      </Container>\n    )\n  }\n\n  _renderAddAddressModal = () => {\n    return (\n      <Modal label='Add New Address' style={styles.addAddressModalStyle} isOpen={this.state.addNewAddressModal} handleClose={this.closeAddNewAddressModal}>\n        <Text tag='h3' style={styles.addAddressModalHeaderStyle}>Add a new address</Text>\n        <AddAddressForm onSubmit={this.handleAddAddressSubmit} onCancel={this.closeAddNewAddressModal} />\n      </Modal>\n    )\n  }\n\n  _renderEmpty = () => {\n    return (\n      <Container style={styles.loadingContainer}>\n        <Text tag='h3'>You haven't added any addresses.</Text>\n        <Button primary style={styles.addNewEmptyButton} onClick={this.openAddNewAddressModal}>Add New Address</Button>\n        {this._renderAddAddressModal()}\n      </Container>\n    )\n  }\n\n  _renderCurrentState = () => {\n    const { isLoading, error, addresses } = this.props\n    console.log(isLoading, error, addresses)\n    if (isLoading) {\n      return this._renderLoading()\n    }\n    if (error) {\n      return this._renderError()\n    }\n\n    if (!Object.keys(addresses) || Object.keys(addresses).length === 0) {\n      return this._renderEmpty()\n    }\n\n    return this._renderUserAddresses(this.props.addresses)\n  }\n\n  render () {\n    return (\n      <Container fluid style={styles.mainContainer}>\n        <Container style={styles.cardContainer}>\n          {this._renderCurrentState()}\n        </Container>\n      </Container>\n    )\n  }\n}\n\nAddresses.propTypes = {\n  addresses: PropTypes.object,\n  deleteAddress: PropTypes.func,\n  addAddress: PropTypes.func,\n  updateAddress: PropTypes.func,\n  isLoading: PropTypes.bool,\n  error: PropTypes.bool\n}\n\nconst mapStateToProps = (state) => ({\n  addresses: state.addresses.addressList,\n  isLoading: state.addresses.isLoading,\n  error: state.addresses.isError\n})\n\nexport default connect(mapStateToProps, { addAddress, updateAddress, deleteAddress })(Addresses)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AADA;AAMA;AACA;AAFA;AACA;AANA;AAWA;AACA;AACA;AAbA;AAeA;AACA;AACA;AAjBA;AAqCA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AANA;AAkBA;AACA;AA/DA;AAiEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AAvEA;AAyEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AA/EA;AAiFA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;AAxFA;AA0FA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAMA;AACA;AAlGA;AAmGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhHA;AAHA;AAIA;AACA;;;;AAaA;;;;;;AACA;AACA;AACA;AAFA;;;AAKA;AACA;;AADA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AAmFA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AADA;AAMA;;;;AA7HA;AACA;AA+HA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AACA;AAKA;;;;A","sourceRoot":""}